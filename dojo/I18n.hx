typedef Cache = { };
typedef Json = {
	function parse(str:Dynamic, strict:Dynamic):Void;
	function stringify(value:Dynamic, replacer:Dynamic, spacer:Dynamic):Void;
};
typedef LoadInit = {
	var dynamic : Float;
	var load : Dynamic;
	function normalize(id:Dynamic):Dynamic;
};
typedef Keys = {
	var ALT : Float;
	var BACKSPACE : Float;
	var CAPS_LOCK : Float;
	var CLEAR : Float;
	var copyKey : Float;
	var CTRL : Float;
	var DELETE : Float;
	var DOWN_ARROW : Float;
	var DOWN_DPAD : Float;
	var END : Float;
	var ENTER : Float;
	var ESCAPE : Float;
	var F1 : Float;
	var F10 : Float;
	var F11 : Float;
	var F12 : Float;
	var F13 : Float;
	var F14 : Float;
	var F15 : Float;
	var F2 : Float;
	var F3 : Float;
	var F4 : Float;
	var F5 : Float;
	var F6 : Float;
	var F7 : Float;
	var F8 : Float;
	var F9 : Float;
	var HELP : Float;
	var HOME : Float;
	var INSERT : Float;
	var LEFT_ARROW : Float;
	var LEFT_DPAD : Float;
	var LEFT_WINDOW : Float;
	var META : Float;
	var NUM_LOCK : Float;
	var NUMPAD_0 : Float;
	var NUMPAD_1 : Float;
	var NUMPAD_2 : Float;
	var NUMPAD_3 : Float;
	var NUMPAD_4 : Float;
	var NUMPAD_5 : Float;
	var NUMPAD_6 : Float;
	var NUMPAD_7 : Float;
	var NUMPAD_8 : Float;
	var NUMPAD_9 : Float;
	var NUMPAD_DIVIDE : Float;
	var NUMPAD_ENTER : Float;
	var NUMPAD_MINUS : Float;
	var NUMPAD_MULTIPLY : Float;
	var NUMPAD_PERIOD : Float;
	var NUMPAD_PLUS : Float;
	var PAGE_DOWN : Float;
	var PAGE_UP : Float;
	var PAUSE : Float;
	var RIGHT_ARROW : Float;
	var RIGHT_DPAD : Float;
	var RIGHT_WINDOW : Float;
	var SCROLL_LOCK : Float;
	var SELECT : Float;
	var SHIFT : Float;
	var SPACE : Float;
	var TAB : Float;
	var UP_ARROW : Float;
	var UP_DPAD : Float;
};
typedef Mouse = {
	var enter : Dynamic;
	var leave : Dynamic;
	function isLeft():Void;
	function isMiddle():Void;
	function isRight():Void;
	function wheel(node:Dynamic, listener:Dynamic):Dynamic;
};
typedef Node = {
	function load(id:String, require:haxe.Constraints.Function, load:haxe.Constraints.Function):Void;
	function normalize(id:String, normalize:haxe.Constraints.Function):Dynamic;
};
typedef Number_ = {
	function format(value:Float, ?options:Dynamic):Dynamic;
	function parse(expression:String, options:Dynamic):Float;
	function regexp(options:Dynamic):Dynamic;
	function round(value:Float, places:Float, increment:Float):Float;
};
