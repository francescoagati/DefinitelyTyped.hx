typedef GanttTemplates = {
	function api_date(date:Date):String;
	function date_grid(date:Date):String;
	function date_scale(date:Date):String;
	function drag_link(from:Dynamic, from_start:Bool, to:Dynamic, to_start:Bool):String;
	function drag_link_class(from:Dynamic, from_start:Bool, to:Dynamic, to_start:Bool):String;
	function grid_blank(task:Dynamic):String;
	function grid_file(task:Dynamic):String;
	function grid_folder(task:Dynamic):String;
	function grid_header_class(column:Dynamic, config:String):String;
	function grid_indent(task:Dynamic):String;
	function grid_open(task:Dynamic):String;
	function grid_row_class(start:Date, end:Date, task:Dynamic):String;
	function link_class(link:Dynamic):String;
	function link_description(link:Dynamic):String;
	function progress_text(start:Date, end:Date, task:Dynamic):String;
	function quick_info_content(start:Date, end:Date, task:Dynamic):String;
	function quick_info_date(start:Date, end:Date, task:Dynamic):String;
	function quick_info_title(start:Date, end:Date, task:Dynamic):String;
	function scale_cell_class(date:Date):String;
	function task_cell_class(item:Date, date:Date):String;
	function task_class(start:Date, end:Date, task:Dynamic):String;
	function task_date(date:Date):String;
	function task_row_class(start:Date, end:Date, task:Dynamic):String;
	function task_text(start:Date, end:Date, task:Dynamic):String;
	function task_time(start:Date, end:Date, task:Dynamic):String;
	function time_picker(date:Date):String;
	function tooltip_date_format(date:Date):String;
	function tooltip_text(start:Date, end:Date, task:Dynamic):String;
	function xml_date(date:Date):String;
	function xml_format(date:Date):String;
	function rightside_text(start:Date, end:Date, task:Dynamic):String;
	function leftside_text(start:Date, end:Date, task:Dynamic):String;
};
typedef GanttConfigOptions = {
	var api_date : String;
	var autofit : Bool;
	var buttons_left : Dynamic;
	var buttons_right : Dynamic;
	var columns : Dynamic;
	var date_grid : String;
	var date_scale : String;
	var details_on_create : Bool;
	var details_on_dblclick : Bool;
	var drag_lightbox : Bool;
	var drag_links : Bool;
	var drag_mode : Dynamic;
	var drag_move : Bool;
	var drag_progress : Bool;
	var drag_resize : Bool;
	var duration_step : Float;
	var duration_unit : Float;
	var end_date : Date;
	var fit_tasks : Bool;
	var grid_width : Float;
	var initial_scroll : Bool;
	var lightbox : Dynamic;
	var lightbox_additional_height : Float;
	var link_arrow_size : Float;
	var link_attribute : String;
	var link_line_width : Float;
	var link_wrapper_width : Float;
	var links : Dynamic;
	var min_column_width : Float;
	var min_duration : Float;
	var order_branch : Bool;
	var quick_info_detached : Bool;
	var quickinfo_buttons : Dynamic;
	var readonly : Bool;
	var round_dnd_dates : Bool;
	var row_height : Float;
	var scale_height : Float;
	var scale_unit : String;
	var select_task : Bool;
	var server_utc : Bool;
	var show_progress : Bool;
	var sort : Bool;
	var start_date : Date;
	var start_on_monday : Bool;
	var step : Float;
	var subscales : Dynamic;
	var task_attribute : String;
	var task_date : String;
	var task_height : Float;
	var task_scroll_offset : Float;
	var time_picker : String;
	var time_step : Float;
	var tooltip_timeout : Float;
	var touch : Dynamic;
	var touch_drag : Dynamic;
	var xml_date : String;
};
typedef GanttDateHelpers = {
	function add(origin:Date, count:Float, unit:String):Date;
	function copy(origin:Date):Date;
	function date_part(origin:Date):Date;
	function time_part(origin:Date):Date;
	function day_start(origin:Date):Date;
	function month_start(origin:Date):Date;
	function week_start(origin:Date):Date;
	function year_start(origin:Date):Date;
	function getISOWeek(origin:Date):Float;
	function getUTCISOWeek(origin:Date):Float;
	function date_to_str(format:String):Dynamic;
	function str_to_date(format:String):Dynamic;
	function convert_to_utc(origin:Date):Date;
	function to_fixed(value:Float):String;
};
typedef GanttHotkeys = {
	var edit_save : Float;
	var edit_cancel : Float;
};
typedef GanttLocaleDate = {
	var month_full : Array<String>;
	var month_short : Array<String>;
	var day_full : Array<String>;
	var day_short : Array<String>;
};
typedef GanttLocaleLabels = {
	var new_task : String;
	var icon_save : String;
	var icon_cancel : String;
	var icon_details : String;
	var icon_edit : String;
	var icon_delete : String;
	var confirm_closing : String;
	var confirm_deleting : String;
	var section_description : String;
	var section_time : String;
	var confirm_link_deleting : String;
	var link_from : String;
	var link_to : String;
	var link_start : String;
	var link_end : String;
	var minutes : String;
	var hours : String;
	var days : String;
	var weeks : String;
	var months : String;
	var years : String;
};
typedef GanttLocale = {
	var date : GanttLocaleDate;
	var labels : GanttLocaleLabels;
};
typedef GanttStatic = {
	var templates : GanttTemplates;
	var config : GanttConfigOptions;
	var date : GanttDateHelpers;
	var keys : GanttHotkeys;
	var skin : String;
	var version : String;
	var locale : GanttLocale;
	var $click : Dynamic;
	function addLink(link:Dynamic):Dynamic;
	function addTask(task:Dynamic, parent:String):Dynamic;
	function attachEvent(name:String, handler:haxe.extern.Rest<Dynamic> -> Dynamic):Dynamic;
	function callEvent(name:String, params:Dynamic):Bool;
	function changeLinkId(id:Dynamic, new_id:Dynamic):Dynamic;
	function changeTaskId(id:Dynamic, new_id:Dynamic):Dynamic;
	function checkEvent(name:String):Bool;
	function clearAll():Dynamic;
	function close(id:Dynamic):Dynamic;
	function deleteLink(id:Dynamic):Dynamic;
	function deleteTask(id:String):Dynamic;
	function detachAllEvents():Dynamic;
	function detachEvent(id:String):Dynamic;
	function eachTask(code:haxe.extern.Rest<Dynamic> -> Dynamic, ?parent:Dynamic, ?master:Dynamic):Dynamic;
	function getChildren(id:Dynamic):Dynamic;
	function getGlobalTaskIndex(id:Dynamic):Dynamic;
	function getLabel(property:String, key:Dynamic):Dynamic;
	function getLightbox():HTMLElement;
	function getLightboxSection(name:String):Dynamic;
	function getLightboxValues():Dynamic;
	function getLink(id:Dynamic):Dynamic;
	function getLinkNode(id:Dynamic):HTMLElement;
	function getNext(id:Dynamic):Dynamic;
	function getPrev(id:Dynamic):Dynamic;
	function getScrollState():Dynamic;
	function getSelectedId():Dynamic;
	function getState():Dynamic;
	function getTask(id:Dynamic):Dynamic;
	function getTaskByTime(?from:Date, ?to:Date):Dynamic;
	function getTaskIndex(id:Dynamic):Float;
	function getTaskNode(id:Dynamic):HTMLElement;
	function getTaskRowNode(id:Dynamic):HTMLElement;
	function hasChild(id:Dynamic):Bool;
	function hideCover(?box:HTMLElement):Dynamic;
	function hideLightbox():Dynamic;
	function hideQuickInfo():Dynamic;
	function init(container:Dynamic, ?from:Date, ?to:Date):Dynamic;
	function isLinkAllowed(link:Dynamic):Bool;
	function isLinkExists(id:Dynamic):Bool;
	function isTaskExists(id:Dynamic):Bool;
	function isTaskVisible(id:Dynamic):Bool;
	function load(url:String, ?type:String, ?callback:haxe.extern.Rest<Dynamic> -> Dynamic):Dynamic;
	function locate(e:Event):String;
	function moveTask(sid:Dynamic, tindex:Float, ?parent:Dynamic):Dynamic;
	function open(id:Dynamic):Dynamic;
	function parse(url:Dynamic, ?type:String):Dynamic;
	function refreshData():Dynamic;
	function refreshLink(id:Dynamic):Dynamic;
	function refreshTask(id:Dynamic):Dynamic;
	function render():Dynamic;
	function resetLightbox():Dynamic;
	function resizeLightbox():Dynamic;
	function scrollTo(x:Float, y:Float):Dynamic;
	function selectTask(id:Dynamic):Dynamic;
	function serialize(?type:String):Dynamic;
	function serverList(list_name:String, ?options:Dynamic):Dynamic;
	function setSizes():Dynamic;
	function showCover(?box:HTMLElement):Dynamic;
	function showLightbox(id:Dynamic):Dynamic;
	function showQuickInfo(id:Dynamic):Dynamic;
	function showTask(id:Dynamic):Dynamic;
	function sort(field:Dynamic, ?desc:Bool, ?parent:Dynamic):Dynamic;
	function unselectTask():Dynamic;
	function updateLink(id:String):Dynamic;
	function updateTask(id:String):Dynamic;
};
extern class DhtmlxganttTopLevel {
	static var gantt : GanttStatic;
}
