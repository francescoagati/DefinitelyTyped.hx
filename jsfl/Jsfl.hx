typedef FlashPoint = {
	var x : Float;
	var y : Float;
};
typedef FlashPoint3D = {
	>FlashPoint,
	var z : Float;
};
typedef FlashRectangle = {
	var top : Float;
	var right : Float;
	var bottom : Float;
	var left : Float;
};
typedef FlashMatrix = {
	var a : Float;
	var b : Float;
	var c : Float;
	var d : Float;
	var tx : Float;
	var ty : Float;
};
typedef FlashFilter = {
	var angle : Float;
	var blurX : Float;
	var blurY : Float;
	var brightness : Float;
	var color : Dynamic;
	var contrast : Float;
	var distance : Float;
	var enabled : Bool;
	var hideObject : Bool;
	var highlightColor : Dynamic;
	var hue : Float;
	var inner : Bool;
	var knockout : Bool;
	var name : String;
	var quality : String;
	var saturation : Float;
	var shadowColor : Dynamic;
	var strength : Float;
	var type : String;
};
typedef FlashDocument = {
	function addDataToDocument(name:String, type:String, data:Dynamic):Void;
	function addDataToSelection(name:String, type:String, data:Dynamic):Void;
	function addFilter(filterName:String):Void;
	function addItem(position:FlashPoint, item:FlashItem):Bool;
	function addNewLine(startPoint:FlashPoint, endpoint:FlashPoint):Void;
	function addNewOval(boundingRectangle:FlashRectangle, ?bSuppressFill:Bool, ?bSuppressStroke:Bool):Void;
	function addNewPrimitiveOval(boundingRectangle:FlashRectangle, ?bSpupressFill:Bool, ?bSuppressStroke:Bool):Void;
	function addNewRectangle(boundingRectangle:FlashRectangle, roundness:Float, ?bSuppressFill:Bool, ?bSuppressStroke:Bool):Dynamic;
	function addNewPrimitiveRectangle(boundingRectangle:FlashRectangle, roundness:Float, ?bSuppressFill:Bool, ?bSuppressStroke:Bool):Dynamic;
	function addNewPublishProfile(?profileName:String):Void;
	function addNewScene(name:String):Bool;
	function addNewText(boundingRectangle:FlashRectangle, ?text:String):Void;
	function align(alignmode:String, ?bUseDocumentBounds:Bool):Dynamic;
	function allowScreens():Void;
	function arrange(arrangeMode:String):Void;
	function breakApart():Void;
	function canEditSymbol():Bool;
	function canRevert():Bool;
	function canTestMovie():Bool;
	function canTestScene():Bool;
	function changeFilterOrder(oldIndex:Float, newIndex:Float):Void;
	function clipCopy():Void;
	function clipCut():Void;
	function clipPaste(?bInPlace:Bool):Void;
	function close(?bPromptToSaveChanges:Bool):Void;
	function convertLinesToFills():Void;
	function convertToSymbol(type:String, name:String, registrationPoint:String):FlashSymbolInstance;
	function crop():Void;
	function debugMovie(?abortIfErrorsExist:Bool):Void;
	function deleteEnvelope():Bool;
	function deletePublishProfile():Bool;
	function deleteScene():Bool;
	function deleteSelection():Void;
	function disableAllFilters():Void;
	function disableFilter(filterIndex:Float):Void;
	function disableOtherFilters(enabledFilterIndex:Float):Void;
	function distribute(distributemode:String, ?bUseDocumentBounds:Bool):Void;
	function distributeToLayers():Void;
	function documentHasData(name:String):Bool;
	function duplicatePublishProfile(?profileName:String):Float;
	function duplicateScene():Bool;
	function duplicateSelection():Void;
	function editScene(index:Float):Void;
	function enableAllFilters():Void;
	function enableFilter(filterIndex:Float):Void;
	function enterEditMode(?editMode:String):Void;
	function exitEditMode():Void;
	function exportPNG(fileURI:String, ?bCurrentPNGSettings:Bool, ?bCurrentFrame:Bool):Bool;
	function exportPublishProfile(fileURI:String):Void;
	function exportPublishProfileString(?profileName:String):String;
	function exportSWF(fileURI:String, ?bCurrentSettings:Bool):Void;
	function getAlignToDocument():Bool;
	function getBlendMode():String;
	function getCustomFill(?objectToFill:String):FlashFill;
	function getCustomStroke(?locationOfStroke:String):FlashStroke;
	function getDataFromDocument(name:String):Dynamic;
	function getElementProperty(propertyName:String):Dynamic;
	function getElementTextAttr(attrName:String, ?startIndex:Float, ?endIndex:Float):FlashTextAttrs;
	function getFilters():Array<FlashFilter>;
	function getMetadata():String;
	function getMobileSettings():String;
	function getPlayerVersion():String;
	function getSelectionRect():FlashRectangle;
	function getTextString(?startIndex:Float, ?endIndex:Float):String;
	function getTimeline():FlashTimeline;
	function getTransformationPoint():FlashPoint;
	function group():Void;
	function importFile(fileURI:String, ?importToLibrary:Bool):Void;
	function importPublishProfile(fileURI:String):Float;
	function importPublishProfileString(xmlString:String):Float;
	function importSWF(fileURI:String):Void;
	function intersect():Bool;
	function loadCuepointXML(uri:String):Array<Dynamic>;
	function match(bWidth:Bool, bHeight:Bool, ?bUseDocumentBounds:Bool):Void;
	function mouseClick(position:FlashPoint, bToggleSel:Bool, bShiftSel:Bool):Void;
	function mouseDblClk(position:FlashPoint, bAltDown:Bool, bShiftDown:Bool, bShiftSelect:Bool):Void;
	function moveSelectedBezierPointsBy(delta:FlashPoint):Void;
	function moveSelectionBy(distanceToMove:FlashPoint):Void;
	function optimizeCurves(smoothing:Float, bUseMultiplePasses:Bool):Void;
	function publish():Void;
	function punch():Bool;
	function removeAllFilters():Void;
	function removeDataFromDocument(name:String):Void;
	function removeDataFromSelection(name:String):Void;
	function removeFilter(filterIndex:Float):Void;
	function renamePublishProfile(?profileNewName:String):Bool;
	function renameScene(name:String):Bool;
	function reorderScene(sceneToMove:Float, sceneToPutItBefore:Float):Void;
	function resetOvalObject():Void;
	function resetRectangleObject():Void;
	function resetTransformation():Void;
	function revert():Void;
	function rotate3DSelection(xyzCoordinate:FlashPoint3D, bGlobalTransform:Bool):Void;
	function rotateSelection(angle:Float, ?rotationPoint:String):Void;
	function save(?bOkToSaveAs:Bool):Bool;
	function saveAndCompact(?bOkToSaveAs:Bool):Bool;
	function scaleSelection(xScale:Float, yScale:Float, ?whichCorner:String):Void;
	function selectAll():Void;
	function selectNone():Void;
	function setAlignToDocument(?bToStage:Bool):Void;
	function setBlendMode(mode:String):Void;
	function setCustomFill(fill:FlashFill):Void;
	function setCustomStroke(stroke:FlashStroke):Void;
	function setElementProperty(property:String, value:Float):Void;
	function setElementTextAttr(attrName:String, attrValue:FlashTextAttrs, ?startIndex:Float, ?endIndex:Float):Bool;
	function setFillColor(color:Dynamic):Void;
	function setFilterProperty(property:String, filterIndex:Float, value:Dynamic):Void;
	function setFilters(filterArray:Array<FlashFilter>):Void;
	function setInstanceAlpha(opacity:Float):Void;
	function setInstanceBrightness(brightness:Float):Void;
	function setInstanceTint(color:Dynamic, strength:Float):Void;
	function setMetadata(strMetadata:String):Bool;
	function setMobileSettings(xmlString:String):Bool;
	function setOvalObjectProperty(propertyName:String, value:Dynamic):Void;
	function setPlayerVersion(version:String):Bool;
	function setRectangleObjectProperty(propertyName:String, value:Dynamic):Void;
	function setSelectionBounds(boundingRectangle:FlashRectangle, ?bContactSensitiveSelection:Bool):Void;
	function setSelectionRect(rect:FlashRectangle, ?bReplaceCurrentSelection:Bool, ?bContactSensitiveSelection:Bool):Void;
	function setStageVanishingPoint(point:FlashPoint):Void;
	function setStageViewAngle(angle:Float):Void;
	function setStroke(color:Dynamic, size:Float, strokeType:String):Void;
	function setStrokeColor(color:Dynamic):Void;
	function setStrokeSize(size:Float):Void;
	function setStrokeStyle(strokeType:String):Void;
	function setTextRectangle(boundingRectangle:FlashRectangle):Bool;
	function setTextSelection(startIndex:Float, endIndex:Float):Bool;
	function setTextString(text:String, ?startIndex:Float, ?endIndex:Float):Bool;
	function setTransformationPoint(transformationPoint:FlashPoint):Void;
	function skewSelection(xSkew:Float, ySkew:Float, ?whichEdge:String):Void;
	function smoothSelection():Void;
	function space(direction:String, ?bUseDocumentBounds:Bool):Void;
	function straightenSelection():Void;
	function swapElement(name:String):Void;
	function swapStrokeAndFill():Void;
	function testMovie():Void;
	function testScene():Void;
	function traceBitmap(threshold:Float, minimumArea:Float, curveFit:String, cornerThreshold:String):Void;
	function transformSelection(a:Float, b:Float, c:Float, d:Float):Void;
	function unGroup():Void;
	function union():Void;
	function unlockAllElements():Void;
	function xmlPanel(fileURI:String):Dynamic;
	var accName : String;
	var as3AutoDeclare : Bool;
	var as3Dialect : String;
	var as3ExportFrame : Float;
	var as3StrictMode : Bool;
	var as3WarningsMode : Bool;
	var asVersion : Float;
	var autoLabel : Bool;
	var backgroundColor : Dynamic;
	var currentPublishProfile : String;
	var currentTimeline : FlashTimeline;
	var description : String;
	var docClass : Dynamic;
	var forceSimple : Bool;
	var frameRate : Float;
	var height : Float;
	var id : Float;
	var library : FlashLibrary;
	var livePreview : Bool;
	var name : String;
	var path : String;
	var pathURI : String;
	var publishProfiles : Array<String>;
	var selection : Array<FlashElement>;
	var silent : Bool;
	var timelines : Array<FlashTimeline>;
	var viewMatrix : FlashMatrix;
	var width : Float;
	var zoomFactor : Float;
};
typedef FlashText = {
	function getTextAttr():Dynamic;
	function getTextString():Dynamic;
	function setTextAttr():Dynamic;
	function setTextString():Dynamic;
	var accName : String;
	var antiAliasSharpness : Float;
	var antiAliasThickness : Float;
	var autoExpand : Bool;
	var border : Bool;
	var description : String;
	var embeddedCharacters : String;
};
typedef FlashTextAttrs = {
	>FlashText,
	var aliasText : Bool;
	var alignment : String;
	var autoKern : Bool;
	var bold : Bool;
	var characterPosition : String;
	var characterSpacing : Float;
	var face : String;
	var fillColor : Dynamic;
	var indent : Float;
	var italic : Bool;
	var leftMargin : Float;
	var letterSpacing : Float;
	var lineSpacing : Float;
	var rightMargin : Float;
	var rotation : Bool;
	var size : Float;
	var target : String;
	var url : String;
};
typedef FlashFLfile = {
	function copy(fileURI:String, copyURI:String):Bool;
	function createFolder(folderURI:String):Bool;
	function exists(fileURI:String):Bool;
	function getAttributes(fileOrFolderURI:String):String;
	function getCreationDate(fileOrFolderURI:String):String;
	function getCreationDateObj(fileOrFolderURI:String):Date;
	function getModificationDate(fileOrFolderURI:String):String;
	function getModificationDateObj(fileOrFolderURI:String):Date;
	function getSize(fileURI:String):Float;
	function listFolder(folderURI:String, ?filesOrDirectories:Bool):Array<String>;
	function platformPathToURI(fileName:String):String;
	function read(fileOrFolderURI:String):String;
	function remove(fileOrFolderURI:String):Bool;
	function setAttributes(fileURI:String, strAttrs:String):Bool;
	function uriToPlatformPath(fileURI:String):String;
	function write(fileURI:String, textToWrite:String, ?strAppendMode:String):Bool;
};
typedef FlashSoundItem = { };
typedef FlashInstance = {
	@:optional
	var instanceType : String;
	@:optional
	var libraryItem : FlashItem;
};
typedef _FlashBitmap = {
	var width : Dynamic;
	var height : Dynamic;
	var depth : Dynamic;
	var bits : Dynamic;
	@:optional
	var cTab : Array<String>;
};
typedef FlashBitmapInstance = {
	function getBits():_FlashBitmap;
	function setBits(bitmap:_FlashBitmap):Void;
	var hPixels : Float;
	var vPixels : Float;
};
typedef FlashCompiledClipInstance = {
	var accName : String;
	var actionScript : String;
	var description : String;
	var forceSimple : Bool;
	var shortcut : String;
	var silent : Bool;
	var tabIndex : Float;
};
typedef FlashSymbolInstance = {
	var accName : String;
	var actionScript : String;
	var backgroundColor : String;
	var bitmapRenderMode : String;
	var blendMode : String;
	var buttonTracking : String;
	var cacheAsBitmap : Bool;
	var colorAlphaAmount : Float;
	var colorAlphaPercent : Float;
	var colorBlueAmount : Float;
	var colorBluePercent : Float;
	var colorGreenAmount : Float;
	var colorGreenPercent : Float;
	var colorMode : String;
	var colorRedAmount : Float;
	var colorRedPercent : Float;
	var description : String;
	var filters : Array<FlashFilter>;
	var firstFrame : Float;
	var forceSimple : Bool;
	var loop : String;
	var shortcut : String;
	var silent : Bool;
	var symbolType : String;
	var tabIndex : Float;
	var useBackgroundColor : Bool;
	var visible : Bool;
};
typedef FlashComponentInstance = {
	var parameters : Array<Dynamic>;
};
typedef FlashShape = {
	>FlashOval,
	function getCubicSegmentPoints(cubicSegmentIndex:Float):Array<FlashPoint>;
	function beginEdit():Void;
	function deleteEdge(index:Float):Void;
	function endEdit():Void;
	var contours : Array<FlashContour>;
	var edges : Array<FlashEdge>;
	var isDrawingObject : Bool;
	var isGroup : Bool;
	var isOvalObject : Bool;
	var isRectangleObject : Bool;
	var members : Array<FlashShape>;
	var numCubicSegments : Float;
	var vertices : Array<FlashVertex>;
};
typedef FlashElement = {
	>FlashInstance,
	>FlashBitmapInstance,
	>FlashCompiledClipInstance,
	>FlashSymbolInstance,
	>FlashComponentInstance,
	>FlashShape,
	function getPersistentData(name:String):Dynamic;
	function getTransformationPoint():FlashPoint;
	function hasPersistentData(name:String):Bool;
	function removePersistentData(name:String):Void;
	function setPersistentData(name:String, type:String, value:Dynamic):Void;
	function setTransformationPoint(transformationPoint:FlashPoint):Void;
	var depth : Float;
	var elementType : String;
	var height : Float;
	var layer : FlashLayer;
	var left : Float;
	var locked : Bool;
	var matrix : FlashMatrix;
	var name : String;
	var rotation : Float;
	var scaleX : Float;
	var scaleY : Float;
	var selected : Bool;
	var skewX : Float;
	var skewY : Float;
	var top : Float;
	var transformX : Float;
	var transformY : Float;
	var width : Float;
	var x : Float;
	var y : Float;
};
typedef FlashFrame = {
	function getCustomEase():Dynamic;
	function setCustomEase():Dynamic;
	var actionScript : Dynamic;
	var duration : Dynamic;
	var elements : Array<FlashElement>;
	var hasCustomEase : Dynamic;
	var labelType : Dynamic;
	var motionTweenOrientToPath : Dynamic;
	var motionTweenRotate : Dynamic;
	var motionTweenRotateTimes : Dynamic;
	var motionTweenScale : Dynamic;
	var motionTweenSnap : Dynamic;
	var motionTweenSync : Dynamic;
	var name : Dynamic;
	var shapeTweenBlend : Dynamic;
	var soundEffect : Dynamic;
	var soundLibraryItem : FlashSoundItem;
	var soundLoop : Dynamic;
	var soundLoopMode : Dynamic;
	var soundName : Dynamic;
	var soundSync : Dynamic;
	var startFrame : Dynamic;
	var tweenEasing : Dynamic;
	var tweenType : Dynamic;
	var useSingleEaseCurve : Dynamic;
};
typedef FlashSymbolItem = {
	function convertToCompiledClip():Void;
	function exportSWC(outputURI:String):Void;
	function exportSWF(outputURI:String):Void;
	var scalingGrid : Bool;
	var scalingGridRect : FlashRectangle;
	var sourceAutoUpdate : Bool;
	var sourceFilePath : String;
	var sourceLibraryName : String;
	var symbolType : String;
	var timeline : FlashTimeline;
};
typedef FlashFolderItem = { };
typedef FlashFontItem = {
	var bitmap : Bool;
	var bold : Bool;
	var embeddedCharacters : String;
	var embedRanges : String;
	var embedVariantGlyphs : Bool;
	var font : String;
	var isDefineFont4Symbol : Bool;
	var italic : Bool;
	var size : Float;
};
typedef FlashSoundItem = {
	function exportToFile(fileURI:String):Bool;
	var bitRate : String;
	var bits : String;
	var compressionType : String;
	var convertStereoToMono : Bool;
	var fileLastModifiedDate : String;
	var originalCompressionType : String;
	var quality : String;
	var sampleRate : String;
	var sourceFileExists : Bool;
};
typedef FlashVideoItem = {
	function exportToFLV(fileURI:String):Bool;
	var fileLastModifiedDate : String;
	var sourceFileExists : Bool;
	var sourceFileIsCurrent : Bool;
	var sourceFilePath : String;
	var videoType : String;
};
typedef FlashBitmapItem = {
	function exportToFile(fileURI:String):Bool;
	var allowSmoothing : Bool;
	var compressionType : String;
	var fileLastModifiedDate : String;
	var originalCompressionType : String;
	var sourceFileExists : Bool;
	var sourceFileIsCurrent : Bool;
	var sourceFilePath : String;
	var useDeblocking : Bool;
	var useImportedJPEGQuality : Bool;
};
typedef FlashItem = {
	>FlashSymbolItem,
	>FlashFolderItem,
	>FlashFontItem,
	>FlashSoundItem,
	>FlashVideoItem,
	>FlashBitmapItem,
	>FlashBitmapItem,
	function addData(name:String, type:String, data:Dynamic):Void;
	function getData(name:String):Dynamic;
	function hasData(name:String):Bool;
	function removeData(name:String):Void;
	var itemType : String;
	var linkageBaseClass : String;
	var linkageClassName : String;
	var linkageExportForAS : Bool;
	var linkageExportForRS : Bool;
	var linkageExportInFirstFrame : Bool;
	var linkageIdentifier : String;
	var linkageImportForRS : Bool;
	var linkageURL : String;
	var name : String;
};
typedef FlashLayer = {
	var color : Dynamic;
	var frameCount : Float;
	var frames : Array<FlashFrame>;
	var height : Float;
	var layerType : String;
	var locked : Bool;
	var name : String;
	var outline : Bool;
	var parentLayer : FlashLayer;
	var visible : Bool;
};
typedef FlashLibrary = {
	function addItemToDocument(position:FlashPoint, ?namePath:String):Bool;
	function addNewItem(type:String, ?namePath:String):Bool;
	function deleteItem(?namePath:String):Bool;
	function duplicateItem(namePath:String):Bool;
	function editItem(?namePath:String):Bool;
	function expandFolder(bExpand:Bool, ?bRecurseNestedParents:Bool, ?namePath:String):Bool;
	function findItemIndex(namePath:String):Float;
	function getItemProperty(property:String):String;
	function getItemType(?namePath:String):String;
	function getSelectedItems():Array<FlashItem>;
	function importEmbeddedSWF(linkageName:String, swfData:Array<Dynamic>, ?libName:String):Void;
	function itemExists(namePath:String):Bool;
	function moveToFolder(folderPath:String, ?itemToMove:String, ?bReplace:Bool):Bool;
	function newFolder(?folderPath:String):Bool;
	function renameItem(name:String):Bool;
	function selectAll(?bSelectAll:Bool):Void;
	function selectItem(namePath:String, ?bReplaceCurrentSelection:Bool, ?bSelect:Bool):Bool;
	function selectNone():Void;
	function setItemProperty(property:String, value:Dynamic):Void;
	function updateItem(namePath:String):Bool;
	var items : Array<FlashItem>;
};
typedef FlashMath = {
	function concatMatrix(mat1:FlashMatrix, mat2:FlashMatrix):FlashMatrix;
	function invertMatrix(mat:FlashMatrix):FlashMatrix;
	function pointDistance(pt1:FlashPoint, pt2:FlashPoint):Float;
};
typedef FlashOutputPanel = {
	function clear():Void;
	function save(fileURI:String, ?bAppendToFile:Bool, ?bUseSystemEncoding:Bool):Void;
	function trace(message:String):Void;
};
typedef FlashHalfEdge = {
	function getEdge():FlashEdge;
	function getNext():FlashHalfEdge;
	function getOppositeHalfEdge():FlashHalfEdge;
	function getPrev():FlashHalfEdge;
	function getVertex():FlashVertex;
	var id : Float;
	var index : Float;
};
typedef FlashOval = {
	var closePath : Bool;
	var endAngle : Float;
	var innerRadius : Float;
	var startAngle : Float;
};
typedef FlashFill = {
	var bitmapIsClipped : Bool;
	var bitmapPath : String;
	var color : Dynamic;
	var colorArray : Array<Dynamic>;
	var focalPoint : Float;
	var linearRGB : Bool;
	var matrix : FlashMatrix;
	var overflow : String;
	var posArray : Array<Float>;
	var style : String;
};
typedef FlashContour = {
	function getHalfEdge():FlashHalfEdge;
	var fill : FlashFill;
	var interior : Bool;
	var orientation : Float;
};
typedef FlashStroke = {
	var breakAtCorners : Bool;
	var capType : String;
	var color : Dynamic;
	var curve : String;
	var dash1 : Float;
	var dash2 : Float;
	var density : String;
	var dotSize : String;
	var dotSpace : Float;
	var hatchThickness : String;
	var jiggle : String;
	var joinType : String;
	var length : String;
	var miterLimit : Float;
	var pattern : String;
	var rotate : String;
	var scaleType : String;
	var shapeFill : FlashFill;
	var space : String;
	var strokeHinting : Bool;
	var style : String;
	var thickness : Float;
	var variation : String;
	var waveHeight : String;
	var waveLength : String;
};
typedef FlashEdge = {
	function getControl(i:Float):FlashPoint;
	function getHalfEdge(index:Float):FlashHalfEdge;
	function setControl(index:Float, x:Float, y:Float):Void;
	function splitEdge(t:Float):Void;
	var cubicSegmentIndex : Float;
	var id : Float;
	var isLine : Bool;
	var stroke : FlashStroke;
};
typedef FlashVertex = {
	function getHalfEdge():FlashHalfEdge;
	function setLocation(x:Float, y:Float):Dynamic;
	var x : Float;
	var y : Float;
};
typedef FlashTimeline = {
	function addMotionGuide():Float;
	function addNewLayer(?name:String, ?layerType:String, ?bAddAbove:Bool):Dynamic;
	function clearFrames(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function clearKeyframes(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function convertToBlankKeyframes(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function convertToKeyframes(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function copyFrames(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function copyLayers(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function copyMotion():Void;
	function copyMotionAsAS3():Void;
	function createMotionObject(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function createMotionTween(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function cutFrames(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function cutLayers(?startLayerIndex:Float, ?endLayerIndex:Float):Void;
	function deleteLayer(index:Float):Void;
	function duplicateLayers(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function expandFolder(bExpand:Bool, ?bRecurseNestedParents:Bool, ?index:Float):Void;
	function findLayerIndex(name:String):Array<Float>;
	function getFrameProperty(property:String, ?startframeIndex:Float, ?endFrameIndex:Float):Dynamic;
	function getGuidelines():String;
	function getLayerProperty(property:String):Dynamic;
	function getSelectedFrames():Array<FlashFrame>;
	function getSelectedLayers():Array<FlashLayer>;
	function insertBlankKeyframe(?frameNumIndex:Float):Void;
	function insertFrames(?numFrames:Float, ?bAllLayers:Bool, ?frameNumIndex:Float):Void;
	function insertKeyframe(?frameNumIndex:Float):Void;
	function pasteFrames(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function pasteLayers(layerIndex:Float):Float;
	function pasteMotion():Void;
	function removeFrames(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function removeMotionObject(startFrame:Float, endFrame:Float):Void;
	function reorderLayer(layerToMove:Float, layerToPutItBy:Float, ?bAddBefore:Bool):Void;
	function reverseFrames(?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function selectAllFrames():Void;
	function setFrameProperty(property:String, value:Dynamic, ?startFrameIndex:Float, ?endFrameIndex:Float):Void;
	function setGuidelines(xmlString:String):Bool;
	function setLayerProperty(property:String, value:Dynamic, ?layersToChange:String):Void;
	@:overload(function(selectionList:Array<Float>, ?bReplaceCurrentSelection:Bool):Void { })
	function setSelectedFrames(startFrameIndex:Float, endFrameIndex:Float, ?bReplaceCurrentSelection:Bool):Void;
	function setSelectedLayers(index:Float, ?bReplaceCurrentSelection:Bool):Void;
	function showLayerMasking(layer:Float):Void;
	function startPlayback():Void;
	function stopPlayback():Void;
	var currentFrame : Float;
	var currentLayer : Float;
	var frameCount : Float;
	var layerCount : Float;
	var layers : Array<FlashLayer>;
	var name : String;
	var libraryItem : FlashItem;
};
typedef FlashPath = {
	function addCubicCurve(xAnchor:Float, yAnchor:Float, x2:Float, y2:Float, x3:Float, y3:Float, x4:Float, y4:Float):Void;
	function addCurve(xAnchor:Float, yAnchor:Float, x2:Float, y2:Float, x3:Float, y3:Float):Void;
	function addPoint(x:Float, y:Float):Void;
	function clear():Void;
	function close():Dynamic;
	var void : Dynamic;
	function makeShape(?bSupressFill:Bool, ?bSupressStroke:Bool):Void;
	function newContour():Void;
	var nPts : Float;
};
typedef FlashDrawingLayer = {
	function beginDraw(?persistentDraw:Bool):Void;
	function beginFrame():Void;
	function cubicCurveTo(x1Ctrl:Float, y1Ctrl:Float, x2Ctl:Float, y2Ctl:Float, xEnd:Float, yEnd:Float):Void;
	function curveTo(xCtl:Float, yCtl:Float, xEnd:Float, yEnd:Float):Void;
	function drawPath(path:FlashPath):Void;
	function endDraw():Void;
	function endFrame():Void;
	function lineTo(x:Float, y:Float):Void;
	function moveTo(x:Float, y:Float):Void;
	function newPath():Void;
	function setColor(color:Dynamic):Void;
	function setFill():Void;
	function setStroke():Void;
};
typedef FlashXMLUI = {
	function accept():Dynamic;
	function cancel():Dynamic;
	function get():Dynamic;
	function getControlItemElement():Dynamic;
	function getEnabled():Dynamic;
	function getVisible():Dynamic;
	function set():Dynamic;
	function setControItemElement():Dynamic;
	function setControItemElements():Dynamic;
	function setEnabled():Dynamic;
	function setVisible():Dynamic;
};
typedef FlashActionsPanel = {
	function getClassForObject():Dynamic;
	function getScriptAssistMode():Dynamic;
	function getSelectedText():Dynamic;
	function getText():Dynamic;
	function hasSelection():Dynamic;
	function replaceSelectedText():Dynamic;
	function setScriptAssistMode():Dynamic;
	function setSelection():Dynamic;
	function setText():Dynamic;
};
typedef FlashCompilerErrors = {
	function clear():Dynamic;
	function save():Dynamic;
};
typedef FlashComponentsPanel = {
	function addItemToDocument():Dynamic;
	function reload():Dynamic;
};
typedef FlashPresetPanel = {
	function addNewItem():Dynamic;
	function applyPreset():Dynamic;
	function deleteFolder():Dynamic;
	function deleteItem():Dynamic;
	function expandFolder():Dynamic;
	function exportItem():Dynamic;
	function findItemIndex():Dynamic;
	function getSelectedItems():Dynamic;
	function importItem():Dynamic;
	function moveToFolder():Dynamic;
	function newFolder():Dynamic;
	function renameItem():Dynamic;
	function selectItem():Dynamic;
};
typedef FlashSwfPanel = {
	function call():Dynamic;
	function setFocus():Dynamic;
	var name : Dynamic;
	var path : Dynamic;
};
typedef FlashTools = {
	function constraintPoint():Dynamic;
	function getKeyDown():Dynamic;
	function setCreatingBbox():Dynamic;
	function setCursor():Dynamic;
	function snapPoint():Dynamic;
	var activeTool : Dynamic;
	var altIsDown : Dynamic;
	var ctlIsDown : Dynamic;
	var mouseIsDown : Dynamic;
	var penDownLoc : Dynamic;
	var penLoc : Dynamic;
	var shiftIsDown : Dynamic;
	var toolObjs : Dynamic;
};
extern class SpriteSheetExporter {
	function addBitmap(item:FlashItem):Dynamic;
	function addSymbol(item:FlashItem, ?name:String, ?beginFrame:Float, ?endFrame:Float):Dynamic;
	var algorithm : String;
	var allowRotate : Bool;
	var allowTrimming : Bool;
	var app : String;
	var autoSize : Bool;
	function beginExport():Dynamic;
	var borderPadding : Float;
	var canBorderPad : Bool;
	var canRotate : Bool;
	var canTrim : Bool;
	var canShapePad : Bool;
	var canStackDuplicateFrames : Bool;
	function changeSymbol():Dynamic;
	function exportSpriteSheet(fileURL:String, option:Dynamic, ?writeMetaData:Bool):String;
	var format : String;
	var image : String;
	var layoutFormat : String;
	var maxSheetHeight : Float;
	var maxSheetWidth : Float;
	var overflowed : Bool;
	function removeBitmap():Dynamic;
	function removeSymbol():Dynamic;
	var shapePadding : Float;
	var sheetHeight : Float;
	var sheetWidth : Float;
	var stackDuplicateFrames : Bool;
	var version : String;
}
typedef FlashFL = {
	function addEventListener(eventType:Dynamic, callbackFunction:Dynamic):Dynamic;
	function browseForFileURL(browseType:Dynamic, ?title:Dynamic, ?previewArea:Dynamic, ?fileFilter:Dynamic):Dynamic;
	function browseForFolderURL(description:String):Dynamic;
	function clearPublishCache():Void;
	function clipCopyString(string:String):Void;
	function closeAll(?bPromptToSave:Bool):Void;
	function closeAllPlayerDocuments():Bool;
	function closeDocument(documentObject:FlashDocument, ?bPromptToSaveChanges:Bool):Dynamic;
	function createDocument(?document:String):FlashDocument;
	function exportPublishProfileString(ucfURI:String, profileName:String):String;
	function fileExists(fileURI:String):Bool;
	function findDocumentDOM(id:Float):FlashDocument;
	function findDocumentIndex(name:String):Array<Float>;
	function findObjectInDocByName(instanceName:String, document:FlashDocument):Array<{ var keyframe : FlashFrame; var layer : FlashLayer; var timeline : FlashTimeline; var parent : Dynamic; }>;
	function findObjectInDocByType(elementType:String, document:FlashDocument):Array<Dynamic>;
	function getAppMemoryInfo(memType:Float):Dynamic;
	function getDocumentDOM():FlashDocument;
	function getSwfPanel():Dynamic;
	function isFontInstalled():Dynamic;
	function mapPlayerURL(URI:String, ?returnMBCS:Bool):String;
	function openDocument(fileURI:String):FlashDocument;
	function openScript(fileURI:String, ?createExtension:String, ?className:String):Void;
	function quit(?bPromptIfNeeded:Bool):Void;
	function reloadTools():Void;
	function removeEventListener(eventType:String):Bool;
	function resetAS3PackagePaths():Void;
	function resetPackagePaths():Void;
	function revertDocument(document:FlashDocument):Void;
	function runScript(fileURI:String, ?funcName:haxe.Constraints.Function, ?args:Array<Dynamic>):Dynamic;
	function saveAll():Void;
	function saveDocument(document:FlashDocument, ?fileURI:String):Bool;
	function saveDocumentAs(document:FlashDocument):Bool;
	function selectElement(elementObject:FlashElement, editMode:Bool):Bool;
	function selectTool(toolName:String):Void;
	function selectActiveWindow(document:FlashDocument, ?bActivateFrame:Bool):Void;
	function showIdleMessage(show:Bool):Void;
	function toggleBreakpoint():Dynamic;
	function trace(message:Dynamic):Void;
	var actionsPanel : FlashActionsPanel;
	var as3PackagePaths : String;
	var compilerErrors : FlashCompilerErrors;
	var componentsPanel : FlashComponentsPanel;
	var configDirectory : String;
	var configURI : String;
	var contactSensitiveSelection : Bool;
	var createNewDocList : Array<String>;
	var createNewDocListType : Array<String>;
	var createNewTemplateList : Array<String>;
	var documents : Array<FlashDocument>;
	var drawingLayer : FlashDrawingLayer;
	var externalLibraryPath : String;
	var flexSDKPath : String;
	var installedPlayers : Array<Dynamic>;
	var languageCode : String;
	var libraryPath : String;
	var Math : FlashMath;
	var mruRecentFileList : Array<String>;
	var mruRecentFileListType : Array<String>;
	var packagePaths : Array<String>;
	var publishCacheDiskSizeMax : Float;
	var publishCacheEnabled : Bool;
	var publishCacheMemoryEntrySizeLimit : Float;
	var publishCacheMemorySizeMax : Float;
	var objectDrawingMode : Float;
	var outputPanel : FlashOutputPanel;
	var presetPanel : FlashPresetPanel;
	var scriptURI : String;
	var sourcePath : String;
	var swfPanels : Array<FlashSwfPanel>;
	var tools : Array<FlashTools>;
	var version : String;
	var xmlui : FlashXMLUI;
};
extern class JsflTopLevel {
	static var fl : FlashFL;
	static var FLfile : FlashFLfile;
	static function alert(alertText:String):Void;
	static function confirm(strAlert:String):Bool;
	static function prompt(promptMsg:String, ?text:String):String;
}
