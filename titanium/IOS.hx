typedef Animator = {
	>Ti.Proxy,
	var behaviors : Array<Ti.Proxy>;
	var referenceView : Ti.UI.View;
	var running : Bool;
	function addBehavior(behavior:Ti.Proxy):Void;
	function getBehaviors():Array<Ti.Proxy>;
	function getReferenceView():Ti.UI.View;
	function getRunning():Bool;
	function removeAllBehaviors():Void;
	function removeBehavior(behavior:Ti.Proxy):Void;
	function setBehaviors(behaviors:Array<Ti.Proxy>):Void;
	function setReferenceView(referenceView:Ti.UI.View):Void;
	function startAnimator():Void;
	function stopAnimator():Void;
	function updateItemUsingCurrentState(item:Ti.UI.View):Void;
};
typedef DynamicItemBehavior = {
	>Ti.Proxy,
	var allowsRotation : Bool;
	var angularResistance : Float;
	var density : Float;
	var elasticity : Float;
	var friction : Float;
	var items : Array<Ti.UI.View>;
	var resistance : Float;
	function addAngularVelocityForItem(item:Ti.UI.View, velocity:Float):Void;
	function addItem(item:Ti.UI.View):Void;
	function addLinearVelocityForItem(item:Ti.UI.View, velocity:Point):Void;
	function angularVelocityForItem(item:Ti.UI.View):Float;
	function getAllowsRotation():Bool;
	function getAngularResistance():Float;
	function getDensity():Float;
	function getElasticity():Float;
	function getFriction():Float;
	function getItems():Array<Ti.UI.View>;
	function getResistance():Float;
	function linearVelocityForItem(item:Ti.UI.View):Point;
	function removeItem(item:Ti.UI.View):Void;
	function setAllowsRotation(allowsRotation:Bool):Void;
	function setAngularResistance(angularResistance:Float):Void;
	function setDensity(density:Float):Void;
	function setElasticity(elasticity:Float):Void;
	function setFriction(friction:Float):Void;
	function setResistance(resistance:Float):Void;
};
typedef SnapBehavior = {
	>Ti.Proxy,
	var damping : Float;
	var item : Ti.UI.View;
	var snapPoint : Point;
	function getDamping():Float;
	function getItem():Ti.UI.View;
	function getSnapPoint():Point;
	function setDamping(damping:Float):Void;
	function setItem(item:Ti.UI.View):Void;
	function setSnapPoint(snapPoint:Point):Void;
};
typedef GravityBehavior = {
	>Ti.Proxy,
	var angle : Float;
	var gravityDirection : Point;
	var items : Array<Ti.UI.View>;
	var magnitude : Float;
	function addItem(item:Ti.UI.View):Void;
	function getAngle():Float;
	function getGravityDirection():Point;
	function getItems():Array<Ti.UI.View>;
	function getMagnitude():Float;
	function removeItem(item:Ti.UI.View):Void;
	function setAngle(angle:Float):Void;
	function setGravityDirection(gravityDirection:Point):Void;
	function setMagnitude(magnitude:Float):Void;
};
typedef CollisionBehavior = {
	>Ti.Proxy,
	var boundaryIdentifiers : Array<BoundaryIdentifier>;
	var collisionMode : Float;
	var items : Array<Ti.UI.View>;
	var referenceInsets : ReferenceInsets;
	var treatReferenceAsBoundary : Bool;
	function addBoundary(boundary:BoundaryIdentifier):Void;
	function addItem(item:Ti.UI.View):Void;
	function getBoundaryIdentifiers():Array<BoundaryIdentifier>;
	function getCollisionMode():Float;
	function getItems():Array<Ti.UI.View>;
	function getReferenceInsets():ReferenceInsets;
	function getTreatReferenceAsBoundary():Bool;
	function removeAllBoundaries():Void;
	function removeBoundary(boundary:BoundaryIdentifier):Void;
	function removeItem(item:Ti.UI.View):Void;
	function setCollisionMode(collisionMode:Float):Void;
	function setReferenceInsets(referenceInsets:ReferenceInsets):Void;
	function setTreatReferenceAsBoundary(treatReferenceAsBoundary:Bool):Void;
};
typedef Toolbar = {
	>Ti.UI.View,
	var barColor : String;
	var borderBottom : Bool;
	var borderTop : Bool;
	var extendBackground : Bool;
	var items : Array<Ti.UI.View>;
	var translucent : Bool;
	function getBarColor():String;
	function getBorderBottom():Bool;
	function getBorderTop():Bool;
	function getExtendBackground():Bool;
	function getItems():Array<Ti.UI.View>;
	function getTranslucent():Bool;
	function setBarColor(barColor:String):Void;
	function setBorderBottom(borderBottom:Bool):Void;
	function setBorderTop(borderTop:Bool):Void;
	function setItems(items:Array<Ti.UI.View>):Void;
	function setTranslucent(translucent:Bool):Void;
};
typedef ViewAttachmentBehavior = {
	>Ti.Proxy,
	var anchorItem : Ti.UI.View;
	var anchorOffset : Point;
	var damping : Float;
	var distance : Float;
	var frequency : Float;
	var item : Ti.UI.View;
	var itemOffset : Point;
	function getAnchorItem():Ti.UI.View;
	function getAnchorOffset():Point;
	function getDamping():Float;
	function getDistance():Float;
	function getFrequency():Float;
	function getItem():Ti.UI.View;
	function getItemOffset():Point;
	function setAnchorItem(anchorItem:Ti.UI.View):Void;
	function setAnchorOffset(anchorOffset:Point):Void;
	function setDamping(damping:Float):Void;
	function setDistance(distance:Float):Void;
	function setFrequency(frequency:Float):Void;
	function setItem(item:Ti.UI.View):Void;
	function setItemOffset(itemOffset:Point):Void;
};
typedef PushBehavior = {
	>Ti.Proxy,
	var active : Bool;
	var angle : Float;
	var items : Array<Ti.UI.View>;
	var magnitude : Float;
	var pushDirection : Point;
	var pushMode : Float;
	function addItem(item:Ti.UI.View):Void;
	function getActive():Bool;
	function getAngle():Float;
	function getItems():Array<Ti.UI.View>;
	function getMagnitude():Float;
	function getPushDirection():Point;
	function getPushMode():Float;
	function removeItem(item:Ti.UI.View):Void;
	function setActive(active:Bool):Void;
	function setAngle(angle:Float):Void;
	function setMagnitude(magnitude:Float):Void;
	function setPushDirection(pushDirection:Point):Void;
	function setPushMode(pushMode:Float):Void;
};
typedef CoverFlowView = {
	>Ti.UI.View,
	var images : Dynamic;
	var selected : Float;
	function getImages():Dynamic;
	function getSelected():Float;
	@:overload(function(image:Ti.Blob):Void { })
	@:overload(function(image:Ti.Filesystem.File):Void { })
	@:overload(function(index:Float, image:CoverFlowImageType):Void { })
	function setImage(index:Float, image:String):Void;
	@:overload(function(images:Array<Ti.Blob>):Void { })
	@:overload(function(images:Array<Ti.Filesystem.File>):Void { })
	@:overload(function(images:Array<CoverFlowImageType>):Void { })
	function setImages(images:Array<String>):Void;
	function setSelected(selected:Float):Void;
};
typedef DocumentViewer = {
	>Ti.UI.View,
	var name : String;
	var url : String;
	function getName():String;
	function getUrl():String;
	function hide(?options:DocumentViewerOptions):Void;
	function setUrl(url:String):Void;
	function show(?options:DocumentViewerOptions):Void;
};
typedef NavigationWindow = {
	>Ti.UI.Window,
	var window : Ti.UI.Window;
	function closeWindow(window:Ti.UI.Window, options:Dictionary<Dynamic>):Void;
	function getWindow():Ti.UI.Window;
	function openWindow(window:Ti.UI.Window, options:Dictionary<Dynamic>):Void;
};
typedef AttributedString = {
	>Ti.Proxy,
	var attributes : Array<Attribute>;
	var text : String;
	function addAttribute(attribute:Attribute):Void;
	function getAttributes():Array<Attribute>;
	function getText():String;
	function setAttributes(attributes:Array<Attribute>):Void;
	function setText(text:String):Void;
};
typedef AnchorAttachmentBehavior = {
	>Ti.Proxy,
	var anchor : Point;
	var damping : Float;
	var distance : Float;
	var frequency : Float;
	var item : Ti.UI.View;
	var offset : Point;
	function getAnchor():Point;
	function getDamping():Float;
	function getDistance():Float;
	function getFrequency():Float;
	function getItem():Ti.UI.View;
	function getOffset():Point;
	function setAnchor(anchor:Point):Void;
	function setDamping(damping:Float):Void;
	function setDistance(distance:Float):Void;
	function setFrequency(frequency:Float):Void;
	function setItem(item:Ti.UI.View):Void;
	function setOffset(offset:Point):Void;
};
typedef TabbedBar = {
	>Ti.UI.View,
	var index : Float;
	var labels : Dynamic;
	var style : Float;
	function getIndex():Float;
	function getLabels():Dynamic;
	function getStyle():Float;
	function setIndex(index:Float):Void;
	@:overload(function(labels:Array<BarItemType>):Void { })
	function setLabels(labels:Array<String>):Void;
	function setStyle(style:Float):Void;
};
typedef _3DMatrix = {
	>Ti.Proxy,
	var m11 : Float;
	var m12 : Float;
	var m13 : Float;
	var m14 : Float;
	var m21 : Float;
	var m22 : Float;
	var m23 : Float;
	var m24 : Float;
	var m31 : Float;
	var m32 : Float;
	var m33 : Float;
	var m34 : Float;
	var m41 : Float;
	var m42 : Float;
	var m43 : Float;
	var m44 : Float;
	function getM11():Float;
	function getM12():Float;
	function getM13():Float;
	function getM14():Float;
	function getM21():Float;
	function getM22():Float;
	function getM23():Float;
	function getM24():Float;
	function getM31():Float;
	function getM32():Float;
	function getM33():Float;
	function getM34():Float;
	function getM41():Float;
	function getM42():Float;
	function getM43():Float;
	function getM44():Float;
	function invert():Ti.UI._3DMatrix;
	function multiply(t2:Ti.UI._3DMatrix):Ti.UI._3DMatrix;
	function rotate(angle:Float, x:Float, y:Float, z:Float):Ti.UI._3DMatrix;
	function scale(sx:Float, sy:Float, sz:Float):Ti.UI._3DMatrix;
	function setM11(m11:Float):Void;
	function setM12(m12:Float):Void;
	function setM13(m13:Float):Void;
	function setM14(m14:Float):Void;
	function setM21(m21:Float):Void;
	function setM22(m22:Float):Void;
	function setM23(m23:Float):Void;
	function setM24(m24:Float):Void;
	function setM31(m31:Float):Void;
	function setM32(m32:Float):Void;
	function setM33(m33:Float):Void;
	function setM34(m34:Float):Void;
	function setM41(m41:Float):Void;
	function setM42(m42:Float):Void;
	function setM43(m43:Float):Void;
	function setM44(m44:Float):Void;
	function translate(tx:Float, ty:Float, tz:Float):Ti.UI._3DMatrix;
};
typedef AdView = {
	>Ti.UI.View,
	var adSize : String;
	function cancelAction():Void;
	function getAdSize():String;
	function setAdSize(adSize:String):Void;
};
extern class IOSTopLevel {
	static var AD_SIZE_LANDSCAPE : String;
	static var AD_SIZE_PORTRAIT : String;
	static var ANIMATION_CURVE_EASE_IN : Float;
	static var ANIMATION_CURVE_EASE_IN_OUT : Float;
	static var ANIMATION_CURVE_EASE_OUT : Float;
	static var ANIMATION_CURVE_LINEAR : Float;
	static var ATTRIBUTE_BACKGROUND_COLOR : Float;
	static var ATTRIBUTE_BASELINE_OFFSET : Float;
	static var ATTRIBUTE_EXPANSION : Float;
	static var ATTRIBUTE_FONT : Float;
	static var ATTRIBUTE_FOREGROUND_COLOR : Float;
	static var ATTRIBUTE_KERN : Float;
	static var ATTRIBUTE_LETTERPRESS_STYLE : Float;
	static var ATTRIBUTE_LIGATURE : Float;
	static var ATTRIBUTE_LINK : Float;
	static var ATTRIBUTE_OBLIQUENESS : Float;
	static var ATTRIBUTE_SHADOW : Float;
	static var ATTRIBUTE_STRIKETHROUGH_COLOR : Float;
	static var ATTRIBUTE_STRIKETHROUGH_STYLE : Float;
	static var ATTRIBUTE_STROKE_COLOR : Float;
	static var ATTRIBUTE_STROKE_WIDTH : Float;
	static var ATTRIBUTE_TEXT_EFFECT : Float;
	static var ATTRIBUTE_UNDERLINES_STYLE : Float;
	static var ATTRIBUTE_UNDERLINE_BY_WORD : Float;
	static var ATTRIBUTE_UNDERLINE_COLOR : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_DASH : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT_DOT : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_DOT : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_SOLID : Float;
	static var ATTRIBUTE_UNDERLINE_STYLE_DOUBLE : Float;
	static var ATTRIBUTE_UNDERLINE_STYLE_NONE : Float;
	static var ATTRIBUTE_UNDERLINE_STYLE_SINGLE : Float;
	static var ATTRIBUTE_UNDERLINE_STYLE_THICK : Float;
	static var ATTRIBUTE_WRITING_DIRECTION : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_EMBEDDING : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_LEFT_TO_RIGHT : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_NATURAL : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_OVERRIDE : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_RIGHT_TO_LEFT : Float;
	static var AUTODETECT_ADDRESS : Float;
	static var AUTODETECT_ALL : Float;
	static var AUTODETECT_CALENDAR : Float;
	static var AUTODETECT_LINK : Float;
	static var AUTODETECT_NONE : Float;
	static var AUTODETECT_PHONE : Float;
	static var BLEND_MODE_CLEAR : Float;
	static var BLEND_MODE_COLOR : Float;
	static var BLEND_MODE_COLOR_BURN : Float;
	static var BLEND_MODE_COLOR_DODGE : Float;
	static var BLEND_MODE_COPY : Float;
	static var BLEND_MODE_DARKEN : Float;
	static var BLEND_MODE_DESTINATION_ATOP : Float;
	static var BLEND_MODE_DESTINATION_IN : Float;
	static var BLEND_MODE_DESTINATION_OUT : Float;
	static var BLEND_MODE_DESTINATION_OVER : Float;
	static var BLEND_MODE_DIFFERENCE : Float;
	static var BLEND_MODE_EXCLUSION : Float;
	static var BLEND_MODE_HARD_LIGHT : Float;
	static var BLEND_MODE_HUE : Float;
	static var BLEND_MODE_LIGHTEN : Float;
	static var BLEND_MODE_LUMINOSITY : Float;
	static var BLEND_MODE_MULTIPLY : Float;
	static var BLEND_MODE_NORMAL : Float;
	static var BLEND_MODE_OVERLAY : Float;
	static var BLEND_MODE_PLUS_DARKER : Float;
	static var BLEND_MODE_PLUS_LIGHTER : Float;
	static var BLEND_MODE_SATURATION : Float;
	static var BLEND_MODE_SCREEN : Float;
	static var BLEND_MODE_SOFT_LIGHT : Float;
	static var BLEND_MODE_SOURCE_ATOP : Float;
	static var BLEND_MODE_SOURCE_IN : Float;
	static var BLEND_MODE_SOURCE_OUT : Float;
	static var BLEND_MODE_XOR : Float;
	static var CLIP_MODE_DEFAULT : Float;
	static var CLIP_MODE_DISABLED : Float;
	static var CLIP_MODE_ENABLED : Float;
	static var COLLISION_MODE_ALL : Float;
	static var COLLISION_MODE_BOUNDARY : Float;
	static var COLLISION_MODE_ITEM : Float;
	static var COLOR_GROUP_TABLEVIEW_BACKGROUND : String;
	static var COLOR_SCROLLVIEW_BACKGROUND : String;
	static var COLOR_UNDER_PAGE_BACKGROUND : String;
	static var COLOR_VIEW_FLIPSIDE_BACKGROUND : String;
	static var PUSH_MODE_CONTINUOUS : Float;
	static var PUSH_MODE_INSTANTANEOUS : Float;
	static var SCROLL_DECELERATION_RATE_FAST : Float;
	static var SCROLL_DECELERATION_RATE_NORMAL : Float;
	static var WEBVIEW_NAVIGATIONTYPE_BACK_FORWARD : Float;
	static var WEBVIEW_NAVIGATIONTYPE_FORM_RESUBMITTED : Float;
	static var WEBVIEW_NAVIGATIONTYPE_FORM_SUBMITTED : Float;
	static var WEBVIEW_NAVIGATIONTYPE_LINK_CLICKED : Float;
	static var WEBVIEW_NAVIGATIONTYPE_OTHER : Float;
	static var WEBVIEW_NAVIGATIONTYPE_RELOAD : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function create3DMatrix(?parameters:Dictionary<Ti.UI.iOS._3DMatrix>):Ti.UI.iOS._3DMatrix;
	static function createAdView(?parameters:Dictionary<Ti.UI.iOS.AdView>):Ti.UI.iOS.AdView;
	static function createAnchorAttachmentBehavior(?parameters:Dictionary<Ti.UI.iOS.AnchorAttachmentBehavior>):Ti.UI.iOS.AnchorAttachmentBehavior;
	static function createAnimator(?parameters:Dictionary<Ti.UI.iOS.Animator>):Ti.UI.iOS.Animator;
	static function createAttributedString(?parameters:Dictionary<Ti.UI.iOS.AttributedString>):Ti.UI.iOS.AttributedString;
	static function createCollisionBehavior(?parameters:Dictionary<Ti.UI.iOS.CollisionBehavior>):Ti.UI.iOS.CollisionBehavior;
	static function createCoverFlowView(?parameters:Dictionary<Ti.UI.iOS.CoverFlowView>):Ti.UI.iOS.CoverFlowView;
	static function createDocumentViewer(?parameters:Dictionary<Ti.UI.iOS.DocumentViewer>):Ti.UI.iOS.DocumentViewer;
	static function createDynamicItemBehavior(?parameters:Dictionary<Ti.UI.iOS.DynamicItemBehavior>):Ti.UI.iOS.DynamicItemBehavior;
	static function createGravityBehavior(?parameters:Dictionary<Ti.UI.iOS.GravityBehavior>):Ti.UI.iOS.GravityBehavior;
	static function createNavigationWindow(?parameters:Dictionary<Ti.UI.iOS.NavigationWindow>):Ti.UI.iOS.NavigationWindow;
	static function createPushBehavior(?parameters:Dictionary<Ti.UI.iOS.PushBehavior>):Ti.UI.iOS.PushBehavior;
	static function createSnapBehavior(?parameters:Dictionary<Ti.UI.iOS.SnapBehavior>):Ti.UI.iOS.SnapBehavior;
	static function createTabbedBar(?parameters:Dictionary<Ti.UI.iOS.TabbedBar>):Ti.UI.iOS.TabbedBar;
	static function createToolbar(?parameters:Dictionary<Ti.UI.iOS.Toolbar>):Ti.UI.iOS.Toolbar;
	static function createTransitionAnimation(transition:TransitionAnimationParam):Ti.Proxy;
	static function createViewAttachmentBehavior(?parameters:Dictionary<Ti.UI.iOS.ViewAttachmentBehavior>):Ti.UI.iOS.ViewAttachmentBehavior;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var BACKGROUNDFETCHINTERVAL_MIN : Float;
	static var BACKGROUNDFETCHINTERVAL_NEVER : Float;
	static var EVENT_ACCESSIBILITY_LAYOUT_CHANGED : String;
	static var EVENT_ACCESSIBILITY_SCREEN_CHANGED : String;
	static var USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND : Float;
	static var USER_NOTIFICATION_ACTIVATION_MODE_FOREGROUND : Float;
	static var USER_NOTIFICATION_TYPE_ALERT : Float;
	static var USER_NOTIFICATION_TYPE_BADGE : Float;
	static var USER_NOTIFICATION_TYPE_NONE : Float;
	static var USER_NOTIFICATION_TYPE_SOUND : Float;
	static var apiName : String;
	static var applicationOpenSettingsURL : String;
	static var bubbleParent : Bool;
	static var currentUserNotificationSettings : UserNotificationSettings;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function cancelAllLocalNotifications():Void;
	static function cancelLocalNotification(id:Float):Void;
	static function cancelLocalNotification(id:String):Void;
	static function createUserNotificationAction(?parameters:Dictionary<Ti.App.iOS.UserNotificationAction>):Ti.App.iOS.UserNotificationAction;
	static function createUserNotificationCategory(?parameters:Dictionary<Ti.App.iOS.UserNotificationCategory>):Ti.App.iOS.UserNotificationCategory;
	static function endBackgroundHandler(handlerID:String):Void;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getApplicationOpenSettingsURL():String;
	static function getBubbleParent():Bool;
	static function getCurrentUserNotificationSettings():UserNotificationSettings;
	static function registerBackgroundService(params:Dictionary<Dynamic>):Ti.App.iOS.BackgroundService;
	static function registerUserNotificationSettings(params:UserNotificationSettings):Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function scheduleLocalNotification(params:NotificationParams):Ti.App.iOS.LocalNotification;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function setMinimumBackgroundFetchInterval(fetchInterval:Float):Void;
}
typedef UserNotificationAction = {
	>Ti.Proxy,
	var activationMode : Float;
	var authenticationRequired : Bool;
	var destructive : Bool;
	var identifier : String;
	var title : String;
	function getActivationMode():Float;
	function getAuthenticationRequired():Bool;
	function getDestructive():Bool;
	function getIdentifier():String;
	function getTitle():String;
};
typedef LocalNotification = {
	>Ti.Proxy,
	function cancel():Void;
};
typedef UserNotificationCategory = {
	>Ti.Proxy,
	var actionsForDefaultContext : Array<Ti.App.iOS.UserNotificationAction>;
	var actionsForMinimalContext : Array<Ti.App.iOS.UserNotificationAction>;
	var identifier : String;
	function getActionsForDefaultContext():Array<Ti.App.iOS.UserNotificationAction>;
	function getActionsForMinimalContext():Array<Ti.App.iOS.UserNotificationAction>;
	function getIdentifier():String;
};
typedef BackgroundService = {
	>Ti.Proxy,
	var url : String;
	function getUrl():String;
	function stop():Void;
	function unregister():Void;
};
extern class IOSTopLevel {
	static var AD_SIZE_LANDSCAPE : String;
	static var AD_SIZE_PORTRAIT : String;
	static var ANIMATION_CURVE_EASE_IN : Float;
	static var ANIMATION_CURVE_EASE_IN_OUT : Float;
	static var ANIMATION_CURVE_EASE_OUT : Float;
	static var ANIMATION_CURVE_LINEAR : Float;
	static var ATTRIBUTE_BACKGROUND_COLOR : Float;
	static var ATTRIBUTE_BASELINE_OFFSET : Float;
	static var ATTRIBUTE_EXPANSION : Float;
	static var ATTRIBUTE_FONT : Float;
	static var ATTRIBUTE_FOREGROUND_COLOR : Float;
	static var ATTRIBUTE_KERN : Float;
	static var ATTRIBUTE_LETTERPRESS_STYLE : Float;
	static var ATTRIBUTE_LIGATURE : Float;
	static var ATTRIBUTE_LINK : Float;
	static var ATTRIBUTE_OBLIQUENESS : Float;
	static var ATTRIBUTE_SHADOW : Float;
	static var ATTRIBUTE_STRIKETHROUGH_COLOR : Float;
	static var ATTRIBUTE_STRIKETHROUGH_STYLE : Float;
	static var ATTRIBUTE_STROKE_COLOR : Float;
	static var ATTRIBUTE_STROKE_WIDTH : Float;
	static var ATTRIBUTE_TEXT_EFFECT : Float;
	static var ATTRIBUTE_UNDERLINES_STYLE : Float;
	static var ATTRIBUTE_UNDERLINE_BY_WORD : Float;
	static var ATTRIBUTE_UNDERLINE_COLOR : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_DASH : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT_DOT : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_DOT : Float;
	static var ATTRIBUTE_UNDERLINE_PATTERN_SOLID : Float;
	static var ATTRIBUTE_UNDERLINE_STYLE_DOUBLE : Float;
	static var ATTRIBUTE_UNDERLINE_STYLE_NONE : Float;
	static var ATTRIBUTE_UNDERLINE_STYLE_SINGLE : Float;
	static var ATTRIBUTE_UNDERLINE_STYLE_THICK : Float;
	static var ATTRIBUTE_WRITING_DIRECTION : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_EMBEDDING : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_LEFT_TO_RIGHT : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_NATURAL : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_OVERRIDE : Float;
	static var ATTRIBUTE_WRITING_DIRECTION_RIGHT_TO_LEFT : Float;
	static var AUTODETECT_ADDRESS : Float;
	static var AUTODETECT_ALL : Float;
	static var AUTODETECT_CALENDAR : Float;
	static var AUTODETECT_LINK : Float;
	static var AUTODETECT_NONE : Float;
	static var AUTODETECT_PHONE : Float;
	static var BLEND_MODE_CLEAR : Float;
	static var BLEND_MODE_COLOR : Float;
	static var BLEND_MODE_COLOR_BURN : Float;
	static var BLEND_MODE_COLOR_DODGE : Float;
	static var BLEND_MODE_COPY : Float;
	static var BLEND_MODE_DARKEN : Float;
	static var BLEND_MODE_DESTINATION_ATOP : Float;
	static var BLEND_MODE_DESTINATION_IN : Float;
	static var BLEND_MODE_DESTINATION_OUT : Float;
	static var BLEND_MODE_DESTINATION_OVER : Float;
	static var BLEND_MODE_DIFFERENCE : Float;
	static var BLEND_MODE_EXCLUSION : Float;
	static var BLEND_MODE_HARD_LIGHT : Float;
	static var BLEND_MODE_HUE : Float;
	static var BLEND_MODE_LIGHTEN : Float;
	static var BLEND_MODE_LUMINOSITY : Float;
	static var BLEND_MODE_MULTIPLY : Float;
	static var BLEND_MODE_NORMAL : Float;
	static var BLEND_MODE_OVERLAY : Float;
	static var BLEND_MODE_PLUS_DARKER : Float;
	static var BLEND_MODE_PLUS_LIGHTER : Float;
	static var BLEND_MODE_SATURATION : Float;
	static var BLEND_MODE_SCREEN : Float;
	static var BLEND_MODE_SOFT_LIGHT : Float;
	static var BLEND_MODE_SOURCE_ATOP : Float;
	static var BLEND_MODE_SOURCE_IN : Float;
	static var BLEND_MODE_SOURCE_OUT : Float;
	static var BLEND_MODE_XOR : Float;
	static var CLIP_MODE_DEFAULT : Float;
	static var CLIP_MODE_DISABLED : Float;
	static var CLIP_MODE_ENABLED : Float;
	static var COLLISION_MODE_ALL : Float;
	static var COLLISION_MODE_BOUNDARY : Float;
	static var COLLISION_MODE_ITEM : Float;
	static var COLOR_GROUP_TABLEVIEW_BACKGROUND : String;
	static var COLOR_SCROLLVIEW_BACKGROUND : String;
	static var COLOR_UNDER_PAGE_BACKGROUND : String;
	static var COLOR_VIEW_FLIPSIDE_BACKGROUND : String;
	static var PUSH_MODE_CONTINUOUS : Float;
	static var PUSH_MODE_INSTANTANEOUS : Float;
	static var SCROLL_DECELERATION_RATE_FAST : Float;
	static var SCROLL_DECELERATION_RATE_NORMAL : Float;
	static var WEBVIEW_NAVIGATIONTYPE_BACK_FORWARD : Float;
	static var WEBVIEW_NAVIGATIONTYPE_FORM_RESUBMITTED : Float;
	static var WEBVIEW_NAVIGATIONTYPE_FORM_SUBMITTED : Float;
	static var WEBVIEW_NAVIGATIONTYPE_LINK_CLICKED : Float;
	static var WEBVIEW_NAVIGATIONTYPE_OTHER : Float;
	static var WEBVIEW_NAVIGATIONTYPE_RELOAD : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function create3DMatrix(?parameters:Dictionary<Ti.UI.iOS._3DMatrix>):Ti.UI.iOS._3DMatrix;
	static function createAdView(?parameters:Dictionary<Ti.UI.iOS.AdView>):Ti.UI.iOS.AdView;
	static function createAnchorAttachmentBehavior(?parameters:Dictionary<Ti.UI.iOS.AnchorAttachmentBehavior>):Ti.UI.iOS.AnchorAttachmentBehavior;
	static function createAnimator(?parameters:Dictionary<Ti.UI.iOS.Animator>):Ti.UI.iOS.Animator;
	static function createAttributedString(?parameters:Dictionary<Ti.UI.iOS.AttributedString>):Ti.UI.iOS.AttributedString;
	static function createCollisionBehavior(?parameters:Dictionary<Ti.UI.iOS.CollisionBehavior>):Ti.UI.iOS.CollisionBehavior;
	static function createCoverFlowView(?parameters:Dictionary<Ti.UI.iOS.CoverFlowView>):Ti.UI.iOS.CoverFlowView;
	static function createDocumentViewer(?parameters:Dictionary<Ti.UI.iOS.DocumentViewer>):Ti.UI.iOS.DocumentViewer;
	static function createDynamicItemBehavior(?parameters:Dictionary<Ti.UI.iOS.DynamicItemBehavior>):Ti.UI.iOS.DynamicItemBehavior;
	static function createGravityBehavior(?parameters:Dictionary<Ti.UI.iOS.GravityBehavior>):Ti.UI.iOS.GravityBehavior;
	static function createNavigationWindow(?parameters:Dictionary<Ti.UI.iOS.NavigationWindow>):Ti.UI.iOS.NavigationWindow;
	static function createPushBehavior(?parameters:Dictionary<Ti.UI.iOS.PushBehavior>):Ti.UI.iOS.PushBehavior;
	static function createSnapBehavior(?parameters:Dictionary<Ti.UI.iOS.SnapBehavior>):Ti.UI.iOS.SnapBehavior;
	static function createTabbedBar(?parameters:Dictionary<Ti.UI.iOS.TabbedBar>):Ti.UI.iOS.TabbedBar;
	static function createToolbar(?parameters:Dictionary<Ti.UI.iOS.Toolbar>):Ti.UI.iOS.Toolbar;
	static function createTransitionAnimation(transition:TransitionAnimationParam):Ti.Proxy;
	static function createViewAttachmentBehavior(?parameters:Dictionary<Ti.UI.iOS.ViewAttachmentBehavior>):Ti.UI.iOS.ViewAttachmentBehavior;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var BACKGROUNDFETCHINTERVAL_MIN : Float;
	static var BACKGROUNDFETCHINTERVAL_NEVER : Float;
	static var EVENT_ACCESSIBILITY_LAYOUT_CHANGED : String;
	static var EVENT_ACCESSIBILITY_SCREEN_CHANGED : String;
	static var USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND : Float;
	static var USER_NOTIFICATION_ACTIVATION_MODE_FOREGROUND : Float;
	static var USER_NOTIFICATION_TYPE_ALERT : Float;
	static var USER_NOTIFICATION_TYPE_BADGE : Float;
	static var USER_NOTIFICATION_TYPE_NONE : Float;
	static var USER_NOTIFICATION_TYPE_SOUND : Float;
	static var apiName : String;
	static var applicationOpenSettingsURL : String;
	static var bubbleParent : Bool;
	static var currentUserNotificationSettings : UserNotificationSettings;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function cancelAllLocalNotifications():Void;
	static function cancelLocalNotification(id:Float):Void;
	static function cancelLocalNotification(id:String):Void;
	static function createUserNotificationAction(?parameters:Dictionary<Ti.App.iOS.UserNotificationAction>):Ti.App.iOS.UserNotificationAction;
	static function createUserNotificationCategory(?parameters:Dictionary<Ti.App.iOS.UserNotificationCategory>):Ti.App.iOS.UserNotificationCategory;
	static function endBackgroundHandler(handlerID:String):Void;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getApplicationOpenSettingsURL():String;
	static function getBubbleParent():Bool;
	static function getCurrentUserNotificationSettings():UserNotificationSettings;
	static function registerBackgroundService(params:Dictionary<Dynamic>):Ti.App.iOS.BackgroundService;
	static function registerUserNotificationSettings(params:UserNotificationSettings):Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function scheduleLocalNotification(params:NotificationParams):Ti.App.iOS.LocalNotification;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function setMinimumBackgroundFetchInterval(fetchInterval:Float):Void;
}
typedef Properties = {
	function getBool(property:String, ?_default:Bool):Bool;
	function getDouble(property:String, ?_default:Float):Float;
	function getInt(property:String, ?_default:Float):Float;
	function getList(property:String, ?_default:Array<Dynamic>):Array<Dynamic>;
	function getObject(property:String, ?_default:Dynamic):Dynamic;
	function getString(property:String, ?_default:String):String;
	function hasProperty(property:String):Bool;
	function listProperties():Array<Dynamic>;
	function removeProperty(property:String):Void;
	function setBool(property:String, value:Bool):Void;
	function setDouble(property:String, value:Float):Void;
	function setInt(property:String, value:Float):Void;
	function setList(property:String, value:Array<Dynamic>):Void;
	function setObject(property:String, value:Dynamic):Void;
	function setString(property:String, value:String):Void;
};
typedef Tizen = {
	var categories : Array<String>;
	var iconPath : String;
	var id : String;
	var installDate : Date;
	var name : String;
	var show : Bool;
	var size : Float;
	function exit():Void;
	function getCategories():Array<String>;
	function getIconPath():String;
	function getId():String;
	function getInstallDate():Date;
	function getName():String;
	function getShow():Bool;
	function getSize():Float;
	function hide():Void;
};
