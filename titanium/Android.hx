typedef SearchView = {
	>Ti.UI.View,
	var hintText : String;
	var iconified : Bool;
	var iconifiedByDefault : Bool;
	var submitEnabled : Bool;
	var value : String;
	function blur():Void;
	function focus():Void;
	function getHintText():String;
	function getIconified():Bool;
	function getIconifiedByDefault():Bool;
	function getSubmitEnabled():Bool;
	function getValue():String;
	function setHintText(hintText:String):Void;
	function setIconified(iconified:Bool):Void;
	function setIconifiedByDefault(iconifiedByDefault:Bool):Void;
	function setSubmitEnabled(submitEnabled:Bool):Void;
	function setValue(value:String):Void;
};
typedef ProgressIndicator = {
	>Ti.Proxy,
	var cancelable : Bool;
	var location : Float;
	var max : Float;
	var message : String;
	var messageid : String;
	var min : Float;
	var type : Float;
	function getCancelable():Bool;
	function getLocation():Float;
	function getMax():Float;
	function getMessage():String;
	function getMessageid():String;
	function getMin():Float;
	function getType():Float;
	function hide():Void;
	function setCancelable(cancelable:Bool):Void;
	function setLocation(location:Float):Void;
	function setMax(max:Float):Void;
	function setMessage(message:String):Void;
	function setMessageid(messageid:String):Void;
	function setMin(min:Float):Void;
	function setType(type:Float):Void;
	function show():Void;
};
extern class AndroidTopLevel {
	static var LINKIFY_ALL : Float;
	static var LINKIFY_EMAIL_ADDRESSES : Float;
	static var LINKIFY_MAP_ADDRESSES : Float;
	static var LINKIFY_PHONE_NUMBERS : Float;
	static var LINKIFY_WEB_URLS : Float;
	static var OVER_SCROLL_ALWAYS : Float;
	static var OVER_SCROLL_IF_CONTENT_SCROLLS : Float;
	static var OVER_SCROLL_NEVER : Float;
	static var PIXEL_FORMAT_A_8 : Float;
	static var PIXEL_FORMAT_LA_88 : Float;
	static var PIXEL_FORMAT_L_8 : Float;
	static var PIXEL_FORMAT_OPAQUE : Float;
	static var PIXEL_FORMAT_RGBA_4444 : Float;
	static var PIXEL_FORMAT_RGBA_5551 : Float;
	static var PIXEL_FORMAT_RGBA_8888 : Float;
	static var PIXEL_FORMAT_RGBX_8888 : Float;
	static var PIXEL_FORMAT_RGB_332 : Float;
	static var PIXEL_FORMAT_RGB_565 : Float;
	static var PIXEL_FORMAT_RGB_888 : Float;
	static var PIXEL_FORMAT_TRANSLUCENT : Float;
	static var PIXEL_FORMAT_TRANSPARENT : Float;
	static var PIXEL_FORMAT_UNKNOWN : Float;
	static var PROGRESS_INDICATOR_DETERMINANT : Float;
	static var PROGRESS_INDICATOR_DIALOG : Float;
	static var PROGRESS_INDICATOR_INDETERMINANT : Float;
	static var PROGRESS_INDICATOR_STATUS_BAR : Float;
	static var SOFT_INPUT_ADJUST_PAN : Float;
	static var SOFT_INPUT_ADJUST_RESIZE : Float;
	static var SOFT_INPUT_ADJUST_UNSPECIFIED : Float;
	static var SOFT_INPUT_STATE_ALWAYS_HIDDEN : Float;
	static var SOFT_INPUT_STATE_ALWAYS_VISIBLE : Float;
	static var SOFT_INPUT_STATE_HIDDEN : Float;
	static var SOFT_INPUT_STATE_UNSPECIFIED : Float;
	static var SOFT_INPUT_STATE_VISIBLE : Float;
	static var SOFT_KEYBOARD_DEFAULT_ON_FOCUS : Float;
	static var SOFT_KEYBOARD_HIDE_ON_FOCUS : Float;
	static var SOFT_KEYBOARD_SHOW_ON_FOCUS : Float;
	static var SWITCH_STYLE_CHECKBOX : Float;
	static var SWITCH_STYLE_TOGGLEBUTTON : Float;
	static var WEBVIEW_LOAD_CACHE_ELSE_NETWORK : Float;
	static var WEBVIEW_LOAD_CACHE_ONLY : Float;
	static var WEBVIEW_LOAD_DEFAULT : Float;
	static var WEBVIEW_LOAD_NO_CACHE : Float;
	static var WEBVIEW_PLUGINS_OFF : Float;
	static var WEBVIEW_PLUGINS_ON : Float;
	static var WEBVIEW_PLUGINS_ON_DEMAND : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createProgressIndicator(?parameters:Dictionary<Ti.UI.Android.ProgressIndicator>):Ti.UI.Android.ProgressIndicator;
	static function createSearchView(?parameters:Dictionary<Ti.UI.Android.SearchView>):Ti.UI.Android.SearchView;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function hideSoftKeyboard():Void;
	static function openPreferences():Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var apiName : String;
	static var bubbleParent : Bool;
	static var manualMode : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function addLocationProvider(provider:Ti.Geolocation.Android.LocationProvider):Void;
	static function addLocationRule(rule:Ti.Geolocation.Android.LocationRule):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createLocationProvider(?parameters:Dictionary<Ti.Geolocation.Android.LocationProvider>):Ti.Geolocation.Android.LocationProvider;
	static function createLocationRule(?parameters:Dictionary<Ti.Geolocation.Android.LocationRule>):Ti.Geolocation.Android.LocationRule;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function getManualMode():Bool;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function removeLocationProvider(provider:Ti.Geolocation.Android.LocationProvider):Void;
	static function removeLocationRule(rule:Ti.Geolocation.Android.LocationRule):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function setManualMode(manualMode:Bool):Void;
	static var R : Ti.App.Android.R;
	static var apiName : String;
	static var appVersionCode : Float;
	static var appVersionName : String;
	static var bubbleParent : Bool;
	static var launchIntent : Ti.Android.Intent;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getAppVersionCode():Float;
	static function getAppVersionName():String;
	static function getBubbleParent():Bool;
	static function getLaunchIntent():Ti.Android.Intent;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var ACTION_AIRPLANE_MODE_CHANGED : String;
	static var ACTION_ALL_APPS : String;
	static var ACTION_ANSWER : String;
	static var ACTION_ATTACH_DATA : String;
	static var ACTION_BATTERY_CHANGED : String;
	static var ACTION_BATTERY_LOW : String;
	static var ACTION_BATTERY_OKAY : String;
	static var ACTION_BOOT_COMPLETED : String;
	static var ACTION_BUG_REPORT : String;
	static var ACTION_CALL : String;
	static var ACTION_CALL_BUTTON : String;
	static var ACTION_CAMERA_BUTTON : String;
	static var ACTION_CHOOSER : String;
	static var ACTION_CLOSE_SYSTEM_DIALOGS : String;
	static var ACTION_CONFIGURATION_CHANGED : String;
	static var ACTION_CREATE_SHORTCUT : String;
	static var ACTION_DATE_CHANGED : String;
	static var ACTION_DEFAULT : String;
	static var ACTION_DELETE : String;
	static var ACTION_DEVICE_STORAGE_LOW : String;
	static var ACTION_DIAL : String;
	static var ACTION_EDIT : String;
	static var ACTION_GET_CONTENT : String;
	static var ACTION_GTALK_SERVICE_CONNECTED : String;
	static var ACTION_GTALK_SERVICE_DISCONNECTED : String;
	static var ACTION_HEADSET_PLUG : String;
	static var ACTION_INPUT_METHOD_CHANGED : String;
	static var ACTION_INSERT : String;
	static var ACTION_INSERT_OR_EDIT : String;
	static var ACTION_MAIN : String;
	static var ACTION_MANAGE_PACKAGE_STORAGE : String;
	static var ACTION_MEDIA_BAD_REMOVAL : String;
	static var ACTION_MEDIA_BUTTON : String;
	static var ACTION_MEDIA_CHECKING : String;
	static var ACTION_MEDIA_EJECT : String;
	static var ACTION_MEDIA_MOUNTED : String;
	static var ACTION_MEDIA_NOFS : String;
	static var ACTION_MEDIA_REMOVED : String;
	static var ACTION_MEDIA_SCANNER_FINISHED : String;
	static var ACTION_MEDIA_SCANNER_SCAN_FILE : String;
	static var ACTION_MEDIA_SCANNER_STARTED : String;
	static var ACTION_MEDIA_SHARED : String;
	static var ACTION_MEDIA_UNMOUNTABLE : String;
	static var ACTION_MEDIA_UNMOUNTED : String;
	static var ACTION_NEW_OUTGOING_CALL : String;
	static var ACTION_PACKAGE_ADDED : String;
	static var ACTION_PACKAGE_CHANGED : String;
	static var ACTION_PACKAGE_DATA_CLEARED : String;
	static var ACTION_PACKAGE_INSTALL : String;
	static var ACTION_PACKAGE_REMOVED : String;
	static var ACTION_PACKAGE_REPLACED : String;
	static var ACTION_PACKAGE_RESTARTED : String;
	static var ACTION_PICK : String;
	static var ACTION_PICK_ACTIVITY : String;
	static var ACTION_POWER_CONNECTED : String;
	static var ACTION_POWER_DISCONNECTED : String;
	static var ACTION_POWER_USAGE_SUMMARY : String;
	static var ACTION_PROVIDER_CHANGED : String;
	static var ACTION_REBOOT : String;
	static var ACTION_RUN : String;
	static var ACTION_SCREEN_OFF : String;
	static var ACTION_SCREEN_ON : String;
	static var ACTION_SEARCH : String;
	static var ACTION_SEARCH_LONG_PRESS : String;
	static var ACTION_SEND : String;
	static var ACTION_SENDTO : String;
	static var ACTION_SEND_MULTIPLE : String;
	static var ACTION_SET_WALLPAPER : String;
	static var ACTION_SHUTDOWN : String;
	static var ACTION_SYNC : String;
	static var ACTION_SYSTEM_TUTORIAL : String;
	static var ACTION_TIME_CHANGED : String;
	static var ACTION_TIME_TICK : String;
	static var ACTION_UID_REMOVED : String;
	static var ACTION_UMS_CONNECTED : String;
	static var ACTION_UMS_DISCONNECTED : String;
	static var ACTION_USER_PRESENT : String;
	static var ACTION_VIEW : String;
	static var ACTION_VOICE_COMMAND : String;
	static var ACTION_WALLPAPER_CHANGED : String;
	static var ACTION_WEB_SEARCH : String;
	static var CATEGORY_ALTERNATIVE : String;
	static var CATEGORY_BROWSABLE : String;
	static var CATEGORY_DEFAULT : String;
	static var CATEGORY_DEVELOPMENT_PREFERENCE : String;
	static var CATEGORY_EMBED : String;
	static var CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST : String;
	static var CATEGORY_HOME : String;
	static var CATEGORY_INFO : String;
	static var CATEGORY_LAUNCHER : String;
	static var CATEGORY_MONKEY : String;
	static var CATEGORY_OPENABLE : String;
	static var CATEGORY_PREFERENCE : String;
	static var CATEGORY_SAMPLE_CODE : String;
	static var CATEGORY_SELECTED_ALTERNATIVE : String;
	static var CATEGORY_TAB : String;
	static var CATEGORY_TEST : String;
	static var CATEGORY_UNIT_TEST : String;
	static var DEFAULT_ALL : Float;
	static var DEFAULT_LIGHTS : Float;
	static var DEFAULT_SOUND : Float;
	static var DEFAULT_VIBRATE : Float;
	static var EXTRA_ALARM_COUNT : String;
	static var EXTRA_BCC : String;
	static var EXTRA_CC : String;
	static var EXTRA_DATA_REMOVED : String;
	static var EXTRA_DONT_KILL_APP : String;
	static var EXTRA_EMAIL : String;
	static var EXTRA_INTENT : String;
	static var EXTRA_KEY_EVENT : String;
	static var EXTRA_PHONE_NUMBER : String;
	static var EXTRA_REPLACING : String;
	static var EXTRA_SHORTCUT_ICON : String;
	static var EXTRA_SHORTCUT_ICON_RESOURCE : String;
	static var EXTRA_SHORTCUT_INTENT : String;
	static var EXTRA_SHORTCUT_NAME : String;
	static var EXTRA_STREAM : String;
	static var EXTRA_SUBJECT : String;
	static var EXTRA_TEMPLATE : String;
	static var EXTRA_TEXT : String;
	static var EXTRA_TITLE : String;
	static var EXTRA_UID : String;
	static var FILL_IN_ACTION : Float;
	static var FILL_IN_CATEGORIES : Float;
	static var FILL_IN_COMPONENT : Float;
	static var FILL_IN_DATA : Float;
	static var FILL_IN_PACKAGE : Float;
	static var FLAG_ACTIVITY_BROUGHT_TO_FRONT : Float;
	static var FLAG_ACTIVITY_CLEAR_TOP : Float;
	static var FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET : Float;
	static var FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS : Float;
	static var FLAG_ACTIVITY_FORWARD_RESULT : Float;
	static var FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY : Float;
	static var FLAG_ACTIVITY_MULTIPLE_TASK : Float;
	static var FLAG_ACTIVITY_NEW_TASK : Float;
	static var FLAG_ACTIVITY_NO_ANIMATION : Float;
	static var FLAG_ACTIVITY_NO_HISTORY : Float;
	static var FLAG_ACTIVITY_NO_USER_ACTION : Float;
	static var FLAG_ACTIVITY_PREVIOUS_IS_TOP : Float;
	static var FLAG_ACTIVITY_REORDER_TO_FRONT : Float;
	static var FLAG_ACTIVITY_RESET_TASK_IF_NEEDED : Float;
	static var FLAG_ACTIVITY_SINGLE_TOP : Float;
	static var FLAG_AUTO_CANCEL : Float;
	static var FLAG_CANCEL_CURRENT : Float;
	static var FLAG_DEBUG_LOG_RESOLUTION : Float;
	static var FLAG_FROM_BACKGROUND : Float;
	static var FLAG_GRANT_READ_URI_PERMISSION : Float;
	static var FLAG_GRANT_WRITE_URI_PERMISSION : Float;
	static var FLAG_INSISTENT : Float;
	static var FLAG_NO_CLEAR : Float;
	static var FLAG_NO_CREATE : Float;
	static var FLAG_ONE_SHOT : Float;
	static var FLAG_ONGOING_EVENT : Float;
	static var FLAG_ONLY_ALERT_ONCE : Float;
	static var FLAG_RECEIVER_REGISTERED_ONLY : Float;
	static var FLAG_SHOW_LIGHTS : Float;
	static var FLAG_UPDATE_CURRENT : Float;
	static var NAVIGATION_MODE_STANDARD : Float;
	static var NAVIGATION_MODE_TABS : Float;
	static var PENDING_INTENT_FOR_ACTIVITY : Float;
	static var PENDING_INTENT_FOR_BROADCAST : Float;
	static var PENDING_INTENT_FOR_SERVICE : Float;
	static var PENDING_INTENT_MAX_VALUE : Float;
	static var R : Ti.Android.R;
	static var RESULT_CANCELED : Float;
	static var RESULT_FIRST_USER : Float;
	static var RESULT_OK : Float;
	static var SCREEN_ORIENTATION_BEHIND : Float;
	static var SCREEN_ORIENTATION_LANDSCAPE : Float;
	static var SCREEN_ORIENTATION_NOSENSOR : Float;
	static var SCREEN_ORIENTATION_PORTRAIT : Float;
	static var SCREEN_ORIENTATION_SENSOR : Float;
	static var SCREEN_ORIENTATION_UNSPECIFIED : Float;
	static var SCREEN_ORIENTATION_USER : Float;
	static var SHOW_AS_ACTION_ALWAYS : Float;
	static var SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW : Float;
	static var SHOW_AS_ACTION_IF_ROOM : Float;
	static var SHOW_AS_ACTION_NEVER : Float;
	static var SHOW_AS_ACTION_WITH_TEXT : Float;
	static var START_NOT_STICKY : Float;
	static var START_REDELIVER_INTENT : Float;
	static var STREAM_ALARM : Float;
	static var STREAM_DEFAULT : Float;
	static var STREAM_MUSIC : Float;
	static var STREAM_NOTIFICATION : Float;
	static var STREAM_RING : Float;
	static var STREAM_SYSTEM : Float;
	static var STREAM_VOICE_CALL : Float;
	static var URI_INTENT_SCHEME : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static var currentActivity : Ti.Android.Activity;
	static var currentService : Ti.Android.Service;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createBroadcastIntent(options:BroadcastIntentOptions):Ti.Android.Intent;
	static function createBroadcastReceiver(?parameters:Dictionary<Ti.Android.BroadcastReceiver>):Ti.Android.BroadcastReceiver;
	static function createIntent(?parameters:Dictionary<Ti.Android.Intent>):Ti.Android.Intent;
	static function createIntentChooser(intent:Ti.Android.Intent, title:String):Ti.Android.Intent;
	static function createNotification(?parameters:Dictionary<Ti.Android.Notification>):Ti.Android.Notification;
	static function createPendingIntent(?parameters:Dictionary<Ti.Android.PendingIntent>):Ti.Android.PendingIntent;
	static function createRemoteViews(?parameters:Dictionary<Ti.Android.RemoteViews>):Ti.Android.RemoteViews;
	static function createService(intent:Ti.Android.Intent):Ti.Android.Service;
	static function createServiceIntent(options:ServiceIntentOptions):Ti.Android.Intent;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function getCurrentActivity():Ti.Android.Activity;
	static function getCurrentService():Ti.Android.Service;
	static function isServiceRunning(intent:Ti.Android.Intent):Bool;
	static function registerBroadcastReceiver(broadcastReceiver:Ti.Android.BroadcastReceiver, actions:Array<String>):Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function startService(intent:Ti.Android.Intent):Void;
	static function stopService(intent:Ti.Android.Intent):Void;
	static function unregisterBroadcastReceiver(broadcastReceiver:Ti.Android.BroadcastReceiver):Void;
}
typedef DashboardView = {
	>Ti.UI.View,
	var columnCount : Float;
	var data : Array<Ti.UI.DashboardItem>;
	var editable : Bool;
	var rowCount : Float;
	var wobble : Bool;
	function getColumnCount():Float;
	function getData():Array<Ti.UI.DashboardItem>;
	function getEditable():Bool;
	function getRowCount():Float;
	function getWobble():Bool;
	function setData(data:Array<Ti.UI.DashboardItem>):Void;
	function setEditable(editable:Bool):Void;
	function setWobble(wobble:Bool):Void;
	function startEditing():Void;
	function stopEditing():Void;
};
typedef ListItem = {
	>Ti.Proxy,
	var accessoryType : Float;
	var backgroundColor : String;
	var backgroundGradient : Gradient;
	var backgroundImage : String;
	var canEdit : Bool;
	var canMove : Bool;
	var color : String;
	var font : Font;
	var height : Dynamic;
	var image : String;
	var itemId : String;
	var searchableText : String;
	var selectedBackgroundColor : String;
	var selectedBackgroundGradient : Gradient;
	var selectedBackgroundImage : String;
	var selectionStyle : Float;
	var subtitle : String;
	var title : String;
};
typedef AlertDialog = {
	>Ti.Proxy,
	var androidView : Ti.UI.View;
	var buttonNames : Array<String>;
	var cancel : Float;
	var message : String;
	var messageid : String;
	var ok : String;
	var okid : String;
	var persistent : Bool;
	var style : Float;
	var title : String;
	var titleid : String;
	function getAndroidView():Ti.UI.View;
	function getButtonNames():Array<String>;
	function getCancel():Float;
	function getMessage():String;
	function getOk():String;
	function getPersistent():Bool;
	function getStyle():Float;
	function getTitle():String;
	function hide():Void;
	function setAndroidView(androidView:Ti.UI.View):Void;
	function setCancel(cancel:Float):Void;
	function setMessage(message:String):Void;
	function setOk(ok:String):Void;
	function setPersistent(persistent:Bool):Void;
	function setStyle(style:Float):Void;
	function setTitle(title:String):Void;
	function show():Void;
};
typedef _2DMatrix = {
	>Ti.Proxy,
	var a : Float;
	var b : Float;
	var c : Float;
	var d : Float;
	var tx : Float;
	var ty : Float;
	function getA():Float;
	function getB():Float;
	function getC():Float;
	function getD():Float;
	function getTx():Float;
	function getTy():Float;
	function invert():Ti.UI._2DMatrix;
	function multiply(t2:Ti.UI._2DMatrix):Ti.UI._2DMatrix;
	function rotate(angle:Float, ?toAngle:Float):Ti.UI._2DMatrix;
	function scale(sx:Float, sy:Float, ?toSx:Float, ?toSy:Float):Ti.UI._2DMatrix;
	function setA(a:Float):Void;
	function setB(b:Float):Void;
	function setC(c:Float):Void;
	function setD(d:Float):Void;
	function setTx(tx:Float):Void;
	function setTy(ty:Float):Void;
	function translate(tx:Float, ty:Float):Ti.UI._2DMatrix;
};
typedef TabbedBar = {
	>Ti.UI.View,
	var index : Float;
	var labels : Dynamic;
	var style : Float;
	function getIndex():Float;
	function getLabels():Dynamic;
	function getStyle():Float;
	function setIndex(index:Float):Void;
	@:overload(function(labels:Array<BarItemType>):Void { })
	function setLabels(labels:Array<String>):Void;
	function setStyle(style:Float):Void;
};
typedef Window = {
	>Ti.UI.View,
	var activity : Ti.Android.Activity;
	var autoAdjustScrollViewInsets : Bool;
	var backButtonTitle : String;
	var backButtonTitleImage : Dynamic;
	var barColor : String;
	var barImage : String;
	var exitOnClose : Bool;
	var extendEdges : Array<Number>;
	var flagSecure : Bool;
	var fullscreen : Bool;
	var hideShadow : Bool;
	var includeOpaqueBars : Bool;
	var leftNavButton : Ti.UI.View;
	var leftNavButtons : Array<Ti.UI.View>;
	var modal : Bool;
	var navBarHidden : Bool;
	var navTintColor : Dynamic;
	var orientation : Float;
	var orientationModes : Array<Number>;
	var rightNavButton : Ti.UI.View;
	var rightNavButtons : Array<Ti.UI.View>;
	var shadowImage : String;
	var statusBarStyle : Dynamic;
	var tabBarHidden : Bool;
	var theme : String;
	var title : String;
	var titleAttributes : TitleAttributesParams;
	var titleControl : Ti.UI.View;
	var titleImage : String;
	var titlePrompt : String;
	var titleid : String;
	var titlepromptid : String;
	var toolbar : Array<Dynamic>;
	var transitionAnimation : Ti.Proxy;
	var translucent : Bool;
	var url : String;
	var windowFlags : Float;
	var windowPixelFormat : Float;
	var windowSoftInputMode : Float;
	@:overload(function(?params:CloseWindowParams):Void { })
	function close(?params:Dictionary<Ti.UI.Animation>):Void;
	function getActivity():Ti.Android.Activity;
	function getAutoAdjustScrollViewInsets():Bool;
	function getBackButtonTitle():String;
	function getBackButtonTitleImage():Dynamic;
	function getBarColor():String;
	function getBarImage():String;
	function getExitOnClose():Bool;
	function getExtendEdges():Array<Number>;
	function getFlagSecure():Bool;
	function getFullscreen():Bool;
	function getHideShadow():Bool;
	function getIncludeOpaqueBars():Bool;
	function getLeftNavButton():Ti.UI.View;
	function getLeftNavButtons():Array<Ti.UI.View>;
	function getModal():Bool;
	function getNavBarHidden():Bool;
	function getNavTintColor():String;
	function getOrientation():Float;
	function getOrientationModes():Array<Number>;
	function getRightNavButton():Ti.UI.View;
	function getRightNavButtons():Array<Ti.UI.View>;
	function getShadowImage():String;
	function getStatusBarStyle():Float;
	function getTabBarHidden():Bool;
	function getTheme():String;
	function getTitle():String;
	function getTitleAttributes():TitleAttributesParams;
	function getTitleControl():Ti.UI.View;
	function getTitleImage():String;
	function getTitlePrompt():String;
	function getTitleid():String;
	function getTitlepromptid():String;
	function getToolbar():Array<Dynamic>;
	function getTransitionAnimation():Ti.Proxy;
	function getTranslucent():Bool;
	function getUrl():String;
	function getWindowFlags():Float;
	function getWindowPixelFormat():Float;
	function getWindowSoftInputMode():Float;
	function hideNavBar(?options:Dictionary<Dynamic>):Void;
	function hideTabBar():Void;
	function open(?params:OpenWindowParams):Void;
	function setAutoAdjustScrollViewInsets(autoAdjustScrollViewInsets:Bool):Void;
	function setBackButtonTitle(backButtonTitle:String):Void;
	@:overload(function(backButtonTitleImage:Ti.Blob):Void { })
	function setBackButtonTitleImage(backButtonTitleImage:String):Void;
	function setBarColor(barColor:String):Void;
	function setBarImage(barImage:String):Void;
	function setExitOnClose(exitOnClose:Bool):Void;
	function setExtendEdges(extendEdges:Array<Number>):Void;
	function setFullscreen(fullscreen:Bool):Void;
	function setHideShadow(hideShadow:Bool):Void;
	function setIncludeOpaqueBars(includeOpaqueBars:Bool):Void;
	function setLeftNavButton(leftNavButton:Ti.UI.View):Void;
	function setLeftNavButtons(leftNavButtons:Array<Ti.UI.View>):Void;
	function setModal(modal:Bool):Void;
	function setNavBarHidden(navBarHidden:Bool):Void;
	function setNavTintColor(navTintColor:String):Void;
	function setOrientationModes(orientationModes:Array<Number>):Void;
	function setRightNavButton(rightNavButton:Ti.UI.View):Void;
	function setRightNavButtons(rightNavButtons:Array<Ti.UI.View>):Void;
	function setShadowImage(shadowImage:String):Void;
	function setStatusBarStyle(statusBarStyle:Float):Void;
	function setTabBarHidden(tabBarHidden:Bool):Void;
	function setTitle(title:String):Void;
	function setTitleAttributes(titleAttributes:TitleAttributesParams):Void;
	function setTitleControl(titleControl:Ti.UI.View):Void;
	function setTitleImage(titleImage:String):Void;
	function setTitlePrompt(titlePrompt:String):Void;
	function setTitleid(titleid:String):Void;
	function setTitlepromptid(titlepromptid:String):Void;
	function setToolbar(items:Array<Dynamic>, ?params:WindowToolbarParam):Void;
	function setTransitionAnimation(transitionAnimation:Ti.Proxy):Void;
	function setTranslucent(translucent:Bool):Void;
	function setWindowPixelFormat(windowPixelFormat:Float):Void;
	function showNavBar(?options:Dictionary<Dynamic>):Void;
};
typedef TextField = {
	>Ti.UI.View,
	var appearance : Float;
	var attributedHintText : Ti.UI.iOS.AttributedString;
	var attributedString : Ti.UI.iOS.AttributedString;
	var autoLink : Float;
	var autocapitalization : Float;
	var autocorrect : Bool;
	var borderStyle : Float;
	var clearButtonMode : Float;
	var clearOnEdit : Bool;
	var color : String;
	var editable : Bool;
	var ellipsize : Bool;
	var enableReturnKey : Bool;
	var font : Font;
	var hintText : String;
	var keyboardToolbar : Dynamic;
	var keyboardToolbarColor : String;
	var keyboardToolbarHeight : Float;
	var keyboardType : Float;
	var leftButton : Dynamic;
	var leftButtonMode : Float;
	var leftButtonPadding : Float;
	var maxLength : Float;
	var minimumFontSize : Float;
	var paddingLeft : Float;
	var paddingRight : Float;
	var passwordMask : Bool;
	var returnKeyType : Float;
	var rightButton : Dynamic;
	var rightButtonMode : Float;
	var rightButtonPadding : Float;
	var selection : TextFieldSelectedParams;
	var suppressReturn : Bool;
	var textAlign : Dynamic;
	var value : String;
	var verticalAlign : Dynamic;
	function blur():Void;
	function focus():Void;
	function getAppearance():Float;
	function getAttributedHintText():Ti.UI.iOS.AttributedString;
	function getAttributedString():Ti.UI.iOS.AttributedString;
	function getAutoLink():Float;
	function getAutocapitalization():Float;
	function getAutocorrect():Bool;
	function getBorderStyle():Float;
	function getClearButtonMode():Float;
	function getClearOnEdit():Bool;
	function getColor():String;
	function getEditable():Bool;
	function getEllipsize():Bool;
	function getEnableReturnKey():Bool;
	function getFont():Font;
	function getHintText():String;
	function getKeyboardToolbar():Dynamic;
	function getKeyboardToolbarColor():String;
	function getKeyboardToolbarHeight():Float;
	function getKeyboardType():Float;
	function getLeftButton():Dynamic;
	function getLeftButtonMode():Float;
	function getLeftButtonPadding():Float;
	function getMaxLength():Float;
	function getMinimumFontSize():Float;
	function getPaddingLeft():Float;
	function getPaddingRight():Float;
	function getPasswordMask():Bool;
	function getReturnKeyType():Float;
	function getRightButton():Dynamic;
	function getRightButtonMode():Float;
	function getRightButtonPadding():Float;
	function getSelection():TextFieldSelectedParams;
	function getSuppressReturn():Bool;
	function getTextAlign():Dynamic;
	function getValue():String;
	function getVerticalAlign():Dynamic;
	function hasText():Bool;
	function setAppearance(appearance:Float):Void;
	function setAttributedHintText(attributedHintText:Ti.UI.iOS.AttributedString):Void;
	function setAttributedString(attributedString:Ti.UI.iOS.AttributedString):Void;
	function setAutoLink(autoLink:Float):Void;
	function setAutocapitalization(autocapitalization:Float):Void;
	function setAutocorrect(autocorrect:Bool):Void;
	function setBorderStyle(borderStyle:Float):Void;
	function setClearButtonMode(clearButtonMode:Float):Void;
	function setClearOnEdit(clearOnEdit:Bool):Void;
	function setColor(color:String):Void;
	function setEditable(editable:Bool):Void;
	function setEllipsize(ellipsize:Bool):Void;
	function setEnableReturnKey(enableReturnKey:Bool):Void;
	function setFont(font:Font):Void;
	function setHintText(hintText:String):Void;
	@:overload(function(keyboardToolbar:Ti.UI.iOS.Toolbar):Void { })
	function setKeyboardToolbar(keyboardToolbar:Array<Ti.UI.View>):Void;
	function setKeyboardToolbarColor(keyboardToolbarColor:String):Void;
	function setKeyboardToolbarHeight(keyboardToolbarHeight:Float):Void;
	function setKeyboardType(keyboardType:Float):Void;
	function setLeftButton(leftButton:Dynamic):Void;
	function setLeftButtonMode(leftButtonMode:Float):Void;
	function setLeftButtonPadding(leftButtonPadding:Float):Void;
	function setMaxLength(maxLength:Float):Void;
	function setMinimumFontSize(minimumFontSize:Float):Void;
	function setPaddingLeft(paddingLeft:Float):Void;
	function setPaddingRight(paddingRight:Float):Void;
	function setPasswordMask(passwordMask:Bool):Void;
	function setReturnKeyType(returnKeyType:Float):Void;
	function setRightButton(rightButton:Dynamic):Void;
	function setRightButtonMode(rightButtonMode:Float):Void;
	function setRightButtonPadding(rightButtonPadding:Float):Void;
	function setSelection(start:Float, end:Float):Void;
	function setSuppressReturn(suppressReturn:Bool):Void;
	@:overload(function(textAlign:Float):Void { })
	function setTextAlign(textAlign:String):Void;
	function setValue(value:String):Void;
	@:overload(function(verticalAlign:String):Void { })
	function setVerticalAlign(verticalAlign:Float):Void;
};
typedef _3DMatrix = {
	>Ti.Proxy,
	var m11 : Float;
	var m12 : Float;
	var m13 : Float;
	var m14 : Float;
	var m21 : Float;
	var m22 : Float;
	var m23 : Float;
	var m24 : Float;
	var m31 : Float;
	var m32 : Float;
	var m33 : Float;
	var m34 : Float;
	var m41 : Float;
	var m42 : Float;
	var m43 : Float;
	var m44 : Float;
	function getM11():Float;
	function getM12():Float;
	function getM13():Float;
	function getM14():Float;
	function getM21():Float;
	function getM22():Float;
	function getM23():Float;
	function getM24():Float;
	function getM31():Float;
	function getM32():Float;
	function getM33():Float;
	function getM34():Float;
	function getM41():Float;
	function getM42():Float;
	function getM43():Float;
	function getM44():Float;
	function invert():Ti.UI._3DMatrix;
	function multiply(t2:Ti.UI._3DMatrix):Ti.UI._3DMatrix;
	function rotate(angle:Float, x:Float, y:Float, z:Float):Ti.UI._3DMatrix;
	function scale(sx:Float, sy:Float, sz:Float):Ti.UI._3DMatrix;
	function setM11(m11:Float):Void;
	function setM12(m12:Float):Void;
	function setM13(m13:Float):Void;
	function setM14(m14:Float):Void;
	function setM21(m21:Float):Void;
	function setM22(m22:Float):Void;
	function setM23(m23:Float):Void;
	function setM24(m24:Float):Void;
	function setM31(m31:Float):Void;
	function setM32(m32:Float):Void;
	function setM33(m33:Float):Void;
	function setM34(m34:Float):Void;
	function setM41(m41:Float):Void;
	function setM42(m42:Float):Void;
	function setM43(m43:Float):Void;
	function setM44(m44:Float):Void;
	function translate(tx:Float, ty:Float, tz:Float):Ti.UI._3DMatrix;
};
typedef WebView = {
	>Ti.UI.View,
	var cacheMode : Float;
	var data : Dynamic;
	var disableBounce : Bool;
	var enableZoomControls : Bool;
	var handlePlatformUrl : Bool;
	var hideLoadIndicator : Bool;
	var html : String;
	var ignoreSslError : Bool;
	var lightTouchEnabled : Bool;
	var loading : Bool;
	var onCreateWindow : haxe.extern.Rest<Dynamic> -> Dynamic;
	var overScrollMode : Float;
	var pluginState : Float;
	var scalesPageToFit : Bool;
	var scrollsToTop : Bool;
	var showScrollbars : Bool;
	var url : String;
	var userAgent : String;
	var willHandleTouches : Bool;
	function canGoBack():Bool;
	function canGoForward():Bool;
	function evalJS(code:String):String;
	function getCacheMode():Float;
	function getData():Dynamic;
	function getDisableBounce():Bool;
	function getEnableZoomControls():Bool;
	function getHandlePlatformUrl():Bool;
	function getHideLoadIndicator():Bool;
	function getHtml():String;
	function getIgnoreSslError():Bool;
	function getLightTouchEnabled():Bool;
	function getLoading():Bool;
	function getOnCreateWindow():haxe.extern.Rest<Dynamic> -> Dynamic;
	function getOverScrollMode():Float;
	function getPluginState():Float;
	function getScalesPageToFit():Bool;
	function getScrollsToTop():Bool;
	function getShowScrollbars():Bool;
	function getUrl():String;
	function getUserAgent():String;
	function getWillHandleTouches():Bool;
	function goBack():Void;
	function goForward():Void;
	function pause():Void;
	function release():Void;
	function reload():Void;
	function repaint():Void;
	function resume():Void;
	function setBasicAuthentication(username:String, password:String):Void;
	function setCacheMode(cacheMode:Float):Void;
	@:overload(function(data:Ti.Filesystem.File):Void { })
	function setData(data:Ti.Blob):Void;
	function setDisableBounce(disableBounce:Bool):Void;
	function setEnableZoomControls(enableZoomControls:Bool):Void;
	function setHandlePlatformUrl(handlePlatformUrl:Bool):Void;
	function setHideLoadIndicator(hideLoadIndicator:Bool):Void;
	function setHtml(html:Dynamic, ?options:Dictionary<Dynamic>):Void;
	function setIgnoreSslError(ignoreSslError:Bool):Void;
	function setLightTouchEnabled(lightTouchEnabled:Bool):Void;
	function setLoading(loading:Bool):Void;
	function setOnCreateWindow(onCreateWindow:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	function setOverScrollMode(overScrollMode:Float):Void;
	function setPluginState(pluginState:Float):Void;
	function setScalesPageToFit(scalesPageToFit:Bool):Void;
	function setScrollsToTop(scrollsToTop:Bool):Void;
	function setShowScrollbars(showScrollbars:Bool):Void;
	function setUrl(url:String):Void;
	function setUserAgent(userAgent:String):Void;
	function setWillHandleTouches(willHandleTouches:Bool):Void;
	function stopLoading(hardStop:Bool):Void;
};
typedef Clipboard = {
	function clearData(?type:String):Void;
	function clearText():Void;
	function getData(type:String):Dynamic;
	function getText():String;
	function hasData(type:String):Bool;
	function hasText():Dynamic;
	function setData(type:String, data:Dynamic):Void;
	function setText(text:String):Void;
};
typedef ScrollableView = {
	>Ti.UI.View,
	var cacheSize : Float;
	var clipViews : Bool;
	var currentPage : Float;
	var disableBounce : Bool;
	var hitRect : Dimension;
	var overScrollMode : Float;
	var overlayEnabled : Bool;
	var pagingControlAlpha : Float;
	var pagingControlColor : String;
	var pagingControlHeight : Float;
	var pagingControlOnTop : Bool;
	var pagingControlTimeout : Float;
	var scrollingEnabled : Bool;
	var showPagingControl : Bool;
	var views : Array<Ti.UI.View>;
	function addView(view:Ti.UI.View):Void;
	function getCacheSize():Float;
	function getClipViews():Bool;
	function getCurrentPage():Float;
	function getDisableBounce():Bool;
	function getHitRect():Dimension;
	function getOverScrollMode():Float;
	function getOverlayEnabled():Bool;
	function getPagingControlAlpha():Float;
	function getPagingControlColor():String;
	function getPagingControlHeight():Float;
	function getPagingControlOnTop():Bool;
	function getPagingControlTimeout():Float;
	function getScrollingEnabled():Bool;
	function getShowPagingControl():Bool;
	function getViews():Array<Ti.UI.View>;
	function moveNext():Void;
	function movePrevious():Void;
	@:overload(function(view:Ti.UI.View):Void { })
	function removeView(view:Float):Void;
	@:overload(function(view:Ti.UI.View):Void { })
	function scrollToView(view:Float):Void;
	function setCacheSize(cacheSize:Float):Void;
	function setCurrentPage(currentPage:Float):Void;
	function setDisableBounce(disableBounce:Bool):Void;
	function setHitRect(hitRect:Dimension):Void;
	function setOverScrollMode(overScrollMode:Float):Void;
	function setOverlayEnabled(overlayEnabled:Bool):Void;
	function setPagingControlAlpha(pagingControlAlpha:Float):Void;
	function setPagingControlColor(pagingControlColor:String):Void;
	function setPagingControlHeight(pagingControlHeight:Float):Void;
	function setPagingControlOnTop(pagingControlOnTop:Bool):Void;
	function setScrollingEnabled(scrollingEnabled:Bool):Void;
	function setShowPagingControl(showPagingControl:Bool):Void;
	function setViews(views:Array<Ti.UI.View>):Void;
};
typedef ListSection = {
	>Ti.Proxy,
	var footerTitle : String;
	var footerView : Ti.UI.View;
	var headerTitle : String;
	var headerView : Ti.UI.View;
	var items : Array<ListDataItem>;
	function appendItems(dataItems:Array<ListDataItem>, ?animation:ListViewAnimationProperties):Void;
	function deleteItemsAt(itemIndex:Float, count:Float, ?animation:ListViewAnimationProperties):Void;
	function getFooterTitle():String;
	function getFooterView():Ti.UI.View;
	function getHeaderTitle():String;
	function getHeaderView():Ti.UI.View;
	function getItemAt(itemIndex:Float):ListDataItem;
	function getItems():Array<ListDataItem>;
	function insertItemsAt(itemIndex:Float, dataItems:Array<ListDataItem>, ?animation:ListViewAnimationProperties):Void;
	function replaceItemsAt(index:Float, count:Float, dataItems:Array<ListDataItem>, ?animation:ListViewAnimationProperties):Void;
	function setFooterTitle(footerTitle:String):Void;
	function setFooterView(footerView:Ti.UI.View):Void;
	function setHeaderTitle(headerTitle:String):Void;
	function setHeaderView(headerView:Ti.UI.View):Void;
	function setItems(dataItems:Array<ListDataItem>, ?animation:ListViewAnimationProperties):Void;
	function updateItemAt(index:Float, dataItem:ListDataItem, ?animation:ListViewAnimationProperties):Void;
};
typedef ScrollView = {
	>Ti.UI.View,
	var canCancelEvents : Bool;
	var contentHeight : Dynamic;
	var contentOffset : Dictionary<Dynamic>;
	var contentWidth : Dynamic;
	var decelerationRate : Float;
	var disableBounce : Bool;
	var horizontalBounce : Bool;
	var maxZoomScale : Float;
	var minZoomScale : Float;
	var overScrollMode : Float;
	var scrollIndicatorStyle : Float;
	var scrollType : String;
	var scrollingEnabled : Bool;
	var scrollsToTop : Bool;
	var showHorizontalScrollIndicator : Bool;
	var showVerticalScrollIndicator : Bool;
	var verticalBounce : Bool;
	var zoomScale : Float;
	function getCanCancelEvents():Bool;
	function getContentHeight():Dynamic;
	function getContentOffset():Dictionary<Dynamic>;
	function getContentWidth():Dynamic;
	function getDecelerationRate():Float;
	function getDisableBounce():Bool;
	function getHorizontalBounce():Bool;
	function getMaxZoomScale():Float;
	function getMinZoomScale():Float;
	function getOverScrollMode():Float;
	function getScrollIndicatorStyle():Float;
	function getScrollType():String;
	function getScrollingEnabled():Bool;
	function getScrollsToTop():Bool;
	function getShowHorizontalScrollIndicator():Bool;
	function getShowVerticalScrollIndicator():Bool;
	function getVerticalBounce():Bool;
	function getZoomScale():Float;
	function scrollTo(x:Float, y:Float):Void;
	function scrollToBottom():Void;
	function setCanCancelEvents(canCancelEvents:Bool):Void;
	@:overload(function(contentHeight:String):Void { })
	function setContentHeight(contentHeight:Float):Void;
	function setContentOffset(contentOffset:Dictionary<Dynamic>, ?animated:ContentOffsetOption):Void;
	@:overload(function(contentWidth:String):Void { })
	function setContentWidth(contentWidth:Float):Void;
	function setDecelerationRate(decelerationRate:Float):Void;
	function setDisableBounce(disableBounce:Bool):Void;
	function setHorizontalBounce(horizontalBounce:Bool):Void;
	function setMaxZoomScale(maxZoomScale:Float):Void;
	function setMinZoomScale(minZoomScale:Float):Void;
	function setOverScrollMode(overScrollMode:Float):Void;
	function setScrollIndicatorStyle(scrollIndicatorStyle:Float):Void;
	function setScrollingEnabled(scrollingEnabled:Bool):Void;
	function setScrollsToTop(scrollsToTop:Bool):Void;
	function setShowHorizontalScrollIndicator(showHorizontalScrollIndicator:Bool):Void;
	function setShowVerticalScrollIndicator(showVerticalScrollIndicator:Bool):Void;
	function setVerticalBounce(verticalBounce:Bool):Void;
	function setZoomScale(zoomScale:Float, ?animated:ZoomScaleOption):Void;
};
typedef ListView = {
	>Ti.UI.View,
	var allowsSelection : Bool;
	var canScroll : Bool;
	var caseInsensitiveSearch : Bool;
	var defaultItemTemplate : Dynamic;
	var editing : Bool;
	var footerDividersEnabled : Bool;
	var footerTitle : String;
	var footerView : Ti.UI.View;
	var headerDividersEnabled : Bool;
	var headerTitle : String;
	var headerView : Ti.UI.View;
	var keepSectionsInSearch : Bool;
	var pruneSectionsOnEdit : Bool;
	var pullView : Ti.UI.View;
	var refreshControl : Ti.UI.RefreshControl;
	var scrollIndicatorStyle : Float;
	var searchText : String;
	var searchView : Dynamic;
	var sectionCount : Float;
	var sectionIndexTitles : Array<ListViewIndexEntry>;
	var sections : Array<Ti.UI.ListSection>;
	var separatorColor : String;
	var separatorInsets : Dictionary<Dynamic>;
	var separatorStyle : Float;
	var showVerticalScrollIndicator : Bool;
	var style : Float;
	var templates : Dictionary<Dynamic>;
	var willScrollOnStatusTap : Bool;
	@:overload(function(section:Array<Ti.UI.ListSection>, ?animation:ListViewAnimationProperties):Void { })
	function appendSection(section:Ti.UI.ListSection, ?animation:ListViewAnimationProperties):Void;
	function deleteSectionAt(sectionIndex:Float, ?animation:ListViewAnimationProperties):Void;
	function deselectItem(sectionIndex:Float, itemIndex:Float):Void;
	function getAllowsSelection():Bool;
	function getCanScroll():Bool;
	function getCaseInsensitiveSearch():Bool;
	function getDefaultItemTemplate():Dynamic;
	function getEditing():Bool;
	function getFooterDividersEnabled():Bool;
	function getFooterTitle():String;
	function getFooterView():Ti.UI.View;
	function getHeaderDividersEnabled():Bool;
	function getHeaderTitle():String;
	function getHeaderView():Ti.UI.View;
	function getKeepSectionsInSearch():Bool;
	function getPruneSectionsOnEdit():Bool;
	function getPullView():Ti.UI.View;
	function getRefreshControl():Ti.UI.RefreshControl;
	function getScrollIndicatorStyle():Float;
	function getSearchText():String;
	function getSearchView():Dynamic;
	function getSectionCount():Float;
	function getSectionIndexTitles():Array<ListViewIndexEntry>;
	function getSections():Array<Ti.UI.ListSection>;
	function getSeparatorColor():String;
	function getSeparatorInsets():Dictionary<Dynamic>;
	function getSeparatorStyle():Float;
	function getShowVerticalScrollIndicator():Bool;
	function getStyle():Float;
	function getTemplates():Dictionary<Dynamic>;
	function getWillScrollOnStatusTap():Bool;
	@:overload(function(sectionIndex:Float, section:Array<Ti.UI.ListSection>, ?animation:ListViewAnimationProperties):Void { })
	function insertSectionAt(sectionIndex:Float, section:Ti.UI.ListSection, ?animation:ListViewAnimationProperties):Void;
	function replaceSectionAt(sectionIndex:Float, section:Ti.UI.ListSection, animation:ListViewAnimationProperties):Void;
	function scrollToItem(sectionIndex:Float, itemIndex:Float, ?animation:ListViewAnimationProperties):Void;
	function selectItem(sectionIndex:Float, itemIndex:Float):Void;
	function setAllowsSelection(allowsSelection:Bool):Void;
	function setCanScroll(canScroll:Bool):Void;
	function setCaseInsensitiveSearch(caseInsensitiveSearch:Bool):Void;
	function setContentInsets(edgeInsets:ListViewEdgeInsets, ?animated:ListViewContentInsetOption):Void;
	@:overload(function(defaultItemTemplate:Float):Void { })
	function setDefaultItemTemplate(defaultItemTemplate:String):Void;
	function setEditing(editing:Bool):Void;
	function setFooterTitle(footerTitle:String):Void;
	function setFooterView(footerView:Ti.UI.View):Void;
	function setHeaderTitle(headerTitle:String):Void;
	function setHeaderView(headerView:Ti.UI.View):Void;
	function setKeepSectionsInSearch(keepSectionsInSearch:Bool):Void;
	function setMarker(markerProps:ListViewMarkerProps):Void;
	function setPruneSectionsOnEdit(pruneSectionsOnEdit:Bool):Void;
	function setPullView(pullView:Ti.UI.View):Void;
	function setRefreshControl(refreshControl:Ti.UI.RefreshControl):Void;
	function setScrollIndicatorStyle(scrollIndicatorStyle:Float):Void;
	function setSearchText(searchText:String):Void;
	@:overload(function(searchView:Ti.UI.Android.SearchView):Void { })
	function setSearchView(searchView:Ti.UI.SearchBar):Void;
	function setSectionIndexTitles(sectionIndexTitles:Array<ListViewIndexEntry>):Void;
	function setSections(sections:Array<Ti.UI.ListSection>):Void;
	function setSeparatorColor(separatorColor:String):Void;
	function setSeparatorInsets(separatorInsets:Dictionary<Dynamic>):Void;
	function setSeparatorStyle(separatorStyle:Float):Void;
	function setShowVerticalScrollIndicator(showVerticalScrollIndicator:Bool):Void;
	function setWillScrollOnStatusTap(willScrollOnStatusTap:Bool):Void;
};
typedef TabGroup = {
	>Ti.UI.View,
	var activeTab : Ti.UI.Tab;
	var activeTabBackgroundColor : String;
	var activeTabBackgroundDisabledColor : String;
	var activeTabBackgroundDisabledImage : String;
	var activeTabBackgroundFocusedColor : String;
	var activeTabBackgroundFocusedImage : String;
	var activeTabBackgroundImage : String;
	var activeTabBackgroundSelectedColor : String;
	var activeTabBackgroundSelectedImage : String;
	var activeTabIconTint : String;
	var activity : Ti.Android.Activity;
	var allowUserCustomization : Bool;
	var barColor : String;
	var editButtonTitle : String;
	var exitOnClose : Bool;
	var navBarHidden : Bool;
	var navTintColor : Dynamic;
	var shadowImage : String;
	var tabDividerColor : String;
	var tabDividerWidth : Dynamic;
	var tabHeight : Dynamic;
	var tabs : Array<Ti.UI.Tab>;
	var tabsAtBottom : Bool;
	var tabsBackgroundColor : String;
	var tabsBackgroundDisabledColor : String;
	var tabsBackgroundDisabledImage : String;
	var tabsBackgroundFocusedColor : String;
	var tabsBackgroundFocusedImage : String;
	var tabsBackgroundImage : String;
	var tabsBackgroundSelectedColor : String;
	var tabsBackgroundSelectedImage : String;
	var tabsTintColor : Dynamic;
	var title : String;
	var titleAttributes : TitleAttributesParams;
	var translucent : Bool;
	var windowSoftInputMode : Float;
	function addTab(tab:Ti.UI.Tab):Void;
	function close():Void;
	function getActiveTab():Ti.UI.Tab;
	function getActiveTabBackgroundColor():String;
	function getActiveTabBackgroundDisabledColor():String;
	function getActiveTabBackgroundDisabledImage():String;
	function getActiveTabBackgroundFocusedColor():String;
	function getActiveTabBackgroundFocusedImage():String;
	function getActiveTabBackgroundImage():String;
	function getActiveTabBackgroundSelectedColor():String;
	function getActiveTabBackgroundSelectedImage():String;
	function getActiveTabIconTint():String;
	function getActivity():Ti.Android.Activity;
	function getAllowUserCustomization():Bool;
	function getBarColor():String;
	function getEditButtonTitle():String;
	function getExitOnClose():Bool;
	function getNavBarHidden():Bool;
	function getNavTintColor():String;
	function getShadowImage():String;
	function getTabDividerColor():String;
	function getTabDividerWidth():Dynamic;
	function getTabHeight():Dynamic;
	function getTabs():Array<Ti.UI.Tab>;
	function getTabsAtBottom():Bool;
	function getTabsBackgroundColor():String;
	function getTabsBackgroundDisabledColor():String;
	function getTabsBackgroundDisabledImage():String;
	function getTabsBackgroundFocusedColor():String;
	function getTabsBackgroundFocusedImage():String;
	function getTabsBackgroundImage():String;
	function getTabsBackgroundSelectedColor():String;
	function getTabsBackgroundSelectedImage():String;
	function getTabsTintColor():String;
	function getTitle():String;
	function getTitleAttributes():TitleAttributesParams;
	function getTranslucent():Bool;
	function getWindowSoftInputMode():Float;
	function open():Void;
	function removeTab(tab:Ti.UI.Tab):Void;
	@:overload(function(indexOrObject:Ti.UI.Tab):Void { })
	function setActiveTab(indexOrObject:Float):Void;
	function setActiveTabBackgroundColor(activeTabBackgroundColor:String):Void;
	function setActiveTabBackgroundDisabledColor(activeTabBackgroundDisabledColor:String):Void;
	function setActiveTabBackgroundDisabledImage(activeTabBackgroundDisabledImage:String):Void;
	function setActiveTabBackgroundFocusedColor(activeTabBackgroundFocusedColor:String):Void;
	function setActiveTabBackgroundFocusedImage(activeTabBackgroundFocusedImage:String):Void;
	function setActiveTabBackgroundImage(activeTabBackgroundImage:String):Void;
	function setActiveTabBackgroundSelectedColor(activeTabBackgroundSelectedColor:String):Void;
	function setActiveTabBackgroundSelectedImage(activeTabBackgroundSelectedImage:String):Void;
	function setActiveTabIconTint(activeTabIconTint:String):Void;
	function setAllowUserCustomization(allowUserCustomization:Bool):Void;
	function setBarColor(barColor:String):Void;
	function setEditButtonTitle(editButtonTitle:String):Void;
	function setExitOnClose(exitOnClose:Bool):Void;
	function setNavBarHidden(navBarHidden:Bool):Void;
	function setNavTintColor(navTintColor:String):Void;
	function setShadowImage(shadowImage:String):Void;
	function setTabDividerColor(tabDividerColor:String):Void;
	@:overload(function(tabDividerWidth:String):Void { })
	function setTabDividerWidth(tabDividerWidth:Float):Void;
	@:overload(function(tabHeight:String):Void { })
	function setTabHeight(tabHeight:Float):Void;
	function setTabs(tabs:Array<Ti.UI.Tab>):Void;
	function setTabsAtBottom(tabsAtBottom:Bool):Void;
	function setTabsBackgroundColor(tabsBackgroundColor:String):Void;
	function setTabsBackgroundDisabledColor(tabsBackgroundDisabledColor:String):Void;
	function setTabsBackgroundDisabledImage(tabsBackgroundDisabledImage:String):Void;
	function setTabsBackgroundFocusedColor(tabsBackgroundFocusedColor:String):Void;
	function setTabsBackgroundFocusedImage(tabsBackgroundFocusedImage:String):Void;
	function setTabsBackgroundImage(tabsBackgroundImage:String):Void;
	function setTabsBackgroundSelectedColor(tabsBackgroundSelectedColor:String):Void;
	function setTabsBackgroundSelectedImage(tabsBackgroundSelectedImage:String):Void;
	function setTabsTintColor(tabsTintColor:String):Void;
	function setTitle(title:String):Void;
	function setTitleAttributes(titleAttributes:TitleAttributesParams):Void;
	function setTranslucent(translucent:Bool):Void;
};
typedef TableView = {
	>Ti.UI.View,
	var allowsSelection : Bool;
	var allowsSelectionDuringEditing : Bool;
	var data : Dynamic;
	var editable : Bool;
	var editing : Bool;
	var filterAnchored : Bool;
	var filterAttribute : String;
	var filterCaseInsensitive : Bool;
	var footerDividersEnabled : Bool;
	var footerTitle : String;
	var footerView : Ti.UI.View;
	var headerDividersEnabled : Bool;
	var headerPullView : Ti.UI.View;
	var headerTitle : String;
	var headerView : Ti.UI.View;
	var hideSearchOnSelection : Bool;
	var index : Array<TableViewIndexEntry>;
	var maxRowHeight : Float;
	var minRowHeight : Float;
	var moveable : Bool;
	var moving : Bool;
	var overScrollMode : Float;
	var refreshControl : Ti.UI.RefreshControl;
	var rowHeight : Float;
	var scrollIndicatorStyle : Float;
	var scrollable : Bool;
	var scrollsToTop : Bool;
	var search : Dynamic;
	var searchAsChild : Bool;
	var searchHidden : Bool;
	var sectionCount : Float;
	var sections : Array<Ti.UI.TableViewSection>;
	var separatorColor : String;
	var separatorInsets : Dictionary<Dynamic>;
	var separatorStyle : Float;
	var showVerticalScrollIndicator : Bool;
	var style : Float;
	@:overload(function(row:Dictionary<Ti.UI.TableViewRow>, ?animation:TableViewAnimationProperties):Void { })
	@:overload(function(row:Array<Ti.UI.TableViewRow>, ?animation:TableViewAnimationProperties):Void { })
	@:overload(function(row:Array<Dictionary<Ti.UI.TableViewRow>>, ?animation:TableViewAnimationProperties):Void { })
	function appendRow(row:Ti.UI.TableViewRow, ?animation:TableViewAnimationProperties):Void;
	@:overload(function(section:Dictionary<Ti.UI.TableViewSection>, ?animation:TableViewAnimationProperties):Void { })
	@:overload(function(section:Array<Ti.UI.TableViewSection>, ?animation:TableViewAnimationProperties):Void { })
	@:overload(function(section:Array<Dictionary<Ti.UI.TableViewSection>>, ?animation:TableViewAnimationProperties):Void { })
	function appendSection(section:Ti.UI.TableViewSection, ?animation:TableViewAnimationProperties):Void;
	@:overload(function(row:Ti.UI.TableViewRow, ?animation:TableViewAnimationProperties):Void { })
	function deleteRow(row:Float, ?animation:TableViewAnimationProperties):Void;
	function deleteSection(section:Float, ?animation:TableViewAnimationProperties):Void;
	function deselectRow(row:Float):Void;
	function getAllowsSelection():Bool;
	function getAllowsSelectionDuringEditing():Bool;
	function getData():Dynamic;
	function getEditable():Bool;
	function getEditing():Bool;
	function getFilterAnchored():Bool;
	function getFilterAttribute():String;
	function getFilterCaseInsensitive():Bool;
	function getFooterDividersEnabled():Bool;
	function getFooterTitle():String;
	function getFooterView():Ti.UI.View;
	function getHeaderDividersEnabled():Bool;
	function getHeaderPullView():Ti.UI.View;
	function getHeaderTitle():String;
	function getHeaderView():Ti.UI.View;
	function getHideSearchOnSelection():Bool;
	function getIndex():Array<TableViewIndexEntry>;
	function getMaxRowHeight():Float;
	function getMinRowHeight():Float;
	function getMoveable():Bool;
	function getMoving():Bool;
	function getOverScrollMode():Float;
	function getRefreshControl():Ti.UI.RefreshControl;
	function getRowHeight():Float;
	function getScrollIndicatorStyle():Float;
	function getScrollable():Bool;
	function getScrollsToTop():Bool;
	function getSearch():Dynamic;
	function getSearchAsChild():Bool;
	function getSearchHidden():Bool;
	function getSectionCount():Float;
	function getSections():Array<Ti.UI.TableViewSection>;
	function getSeparatorColor():String;
	function getSeparatorInsets():Dictionary<Dynamic>;
	function getSeparatorStyle():Float;
	function getShowVerticalScrollIndicator():Bool;
	function getStyle():Float;
	@:overload(function(index:Float, row:Dictionary<Ti.UI.TableViewRow>, ?animation:TableViewAnimationProperties):Void { })
	function insertRowAfter(index:Float, row:Ti.UI.TableViewRow, ?animation:TableViewAnimationProperties):Void;
	@:overload(function(index:Float, row:Dictionary<Ti.UI.TableViewRow>, ?animation:TableViewAnimationProperties):Void { })
	function insertRowBefore(index:Float, row:Ti.UI.TableViewRow, ?animation:TableViewAnimationProperties):Void;
	@:overload(function(index:Float, section:Dictionary<Ti.UI.TableViewSection>, ?animation:TableViewAnimationProperties):Void { })
	function insertSectionAfter(index:Float, section:Ti.UI.TableViewSection, ?animation:TableViewAnimationProperties):Void;
	@:overload(function(index:Float, section:Dictionary<Ti.UI.TableViewSection>, ?animation:TableViewAnimationProperties):Void { })
	function insertSectionBefore(index:Float, section:Ti.UI.TableViewSection, ?animation:TableViewAnimationProperties):Void;
	function scrollToIndex(index:Float, ?animation:TableViewAnimationProperties):Void;
	function scrollToTop(top:Float, ?animation:TableViewAnimationProperties):Void;
	function selectRow(row:Float):Void;
	function setAllowsSelection(allowsSelection:Bool):Void;
	function setAllowsSelectionDuringEditing(allowsSelectionDuringEditing:Bool):Void;
	function setContentInsets(edgeInsets:TableViewEdgeInsets, ?animated:TableViewContentInsetOption):Void;
	@:overload(function(data:Array<Dictionary<Ti.UI.TableViewRow>>, animation:TableViewAnimationProperties):Void { })
	@:overload(function(data:Array<Ti.UI.TableViewSection>, animation:TableViewAnimationProperties):Void { })
	function setData(data:Array<Ti.UI.TableViewRow>, animation:TableViewAnimationProperties):Void;
	function setEditable(editable:Bool):Void;
	function setEditing(editing:Bool):Void;
	function setFilterAnchored(filterAnchored:Bool):Void;
	function setFilterAttribute(filterAttribute:String):Void;
	function setFilterCaseInsensitive(filterCaseInsensitive:Bool):Void;
	function setFooterTitle(footerTitle:String):Void;
	function setFooterView(footerView:Ti.UI.View):Void;
	function setHeaderPullView(view:Ti.UI.View):Void;
	function setHeaderTitle(headerTitle:String):Void;
	function setHeaderView(headerView:Ti.UI.View):Void;
	function setHideSearchOnSelection(hideSearchOnSelection:Bool):Void;
	function setIndex(index:Array<TableViewIndexEntry>):Void;
	function setMaxRowHeight(maxRowHeight:Float):Void;
	function setMinRowHeight(minRowHeight:Float):Void;
	function setMoveable(moveable:Bool):Void;
	function setMoving(moving:Bool):Void;
	function setOverScrollMode(overScrollMode:Float):Void;
	function setRefreshControl(refreshControl:Ti.UI.RefreshControl):Void;
	function setRowHeight(rowHeight:Float):Void;
	function setScrollIndicatorStyle(scrollIndicatorStyle:Float):Void;
	function setScrollable(scrollable:Bool):Void;
	function setScrollsToTop(scrollsToTop:Bool):Void;
	@:overload(function(search:Ti.UI.Android.SearchView):Void { })
	function setSearch(search:Ti.UI.SearchBar):Void;
	function setSearchAsChild(searchAsChild:Bool):Void;
	function setSearchHidden(searchHidden:Bool):Void;
	function setSections(sections:Array<Ti.UI.TableViewSection>):Void;
	function setSeparatorColor(separatorColor:String):Void;
	function setSeparatorInsets(separatorInsets:Dictionary<Dynamic>):Void;
	function setSeparatorStyle(separatorStyle:Float):Void;
	function setShowVerticalScrollIndicator(showVerticalScrollIndicator:Bool):Void;
	function setStyle(style:Float):Void;
	function updateRow(index:Float, row:Ti.UI.TableViewRow, animation:TableViewAnimationProperties):Void;
	function updateSection(index:Float, section:Ti.UI.TableViewSection, animation:TableViewAnimationProperties):Void;
};
typedef Button = {
	>Ti.UI.View,
	var color : String;
	var disabledColor : String;
	var font : Font;
	var image : Dynamic;
	var selectedColor : String;
	var shadowColor : String;
	var shadowOffset : Dictionary<Dynamic>;
	var shadowRadius : Float;
	var style : Float;
	var systemButton : Float;
	var textAlign : Dynamic;
	var title : String;
	var titleid : String;
	var verticalAlign : Dynamic;
	function getColor():String;
	function getDisabledColor():String;
	function getFont():Font;
	function getImage():Dynamic;
	function getSelectedColor():String;
	function getShadowColor():String;
	function getShadowOffset():Dictionary<Dynamic>;
	function getShadowRadius():Float;
	function getStyle():Float;
	function getSystemButton():Float;
	function getTextAlign():Dynamic;
	function getTitle():String;
	function getTitleid():String;
	function getVerticalAlign():Dynamic;
	function setColor(color:String):Void;
	function setDisabledColor(disabledColor:String):Void;
	function setFont(font:Font):Void;
	@:overload(function(image:Ti.Blob):Void { })
	function setImage(image:String):Void;
	function setSelectedColor(selectedColor:String):Void;
	function setShadowColor(shadowColor:String):Void;
	function setShadowOffset(shadowOffset:Dictionary<Dynamic>):Void;
	function setShadowRadius(shadowRadius:Float):Void;
	function setStyle(style:Float):Void;
	function setSystemButton(systemButton:Float):Void;
	@:overload(function(textAlign:Float):Void { })
	function setTextAlign(textAlign:String):Void;
	function setTitle(title:String):Void;
	function setTitleid(titleid:String):Void;
	@:overload(function(verticalAlign:String):Void { })
	function setVerticalAlign(verticalAlign:Float):Void;
};
typedef OptionDialog = {
	>Ti.Proxy,
	var androidView : Ti.UI.View;
	var buttonNames : Array<String>;
	var cancel : Float;
	var destructive : Float;
	var opaquebackground : Bool;
	var options : Array<String>;
	var persistent : Bool;
	var selectedIndex : Float;
	var title : String;
	var titleid : String;
	function getAndroidView():Ti.UI.View;
	function getButtonNames():Array<String>;
	function getCancel():Float;
	function getDestructive():Float;
	function getOpaquebackground():Bool;
	function getOptions():Array<String>;
	function getPersistent():Bool;
	function getSelectedIndex():Float;
	function getTitle():String;
	function getTitleid():String;
	function hide(?params:HideParams):Void;
	function setAndroidView(androidView:Ti.UI.View):Void;
	function setCancel(cancel:Float):Void;
	function setOpaquebackground(opaquebackground:Bool):Void;
	function setPersistent(persistent:Bool):Void;
	function setTitle(title:String):Void;
	function setTitleid(titleid:String):Void;
	function show(?params:ShowParams):Void;
};
typedef RefreshControl = {
	>Ti.Proxy,
	var tintColor : String;
	var title : Ti.UI.iOS.AttributedString;
	function beginRefreshing():Void;
	function endRefreshing():Void;
	function getTintColor():String;
	function getTitle():Ti.UI.iOS.AttributedString;
	function setTintColor(tintColor:String):Void;
	function setTitle(title:Ti.UI.iOS.AttributedString):Void;
};
typedef EmailDialog = {
	>Ti.Proxy,
	var CANCELLED : Float;
	var FAILED : Float;
	var SAVED : Float;
	var SENT : Float;
	var barColor : String;
	var bccRecipients : Array<String>;
	var ccRecipients : Array<String>;
	var html : Bool;
	var messageBody : String;
	var subject : String;
	var toRecipients : Array<String>;
	@:overload(function(attachment:Ti.Filesystem.File):Void { })
	function addAttachment(attachment:Ti.Blob):Void;
	function getBarColor():String;
	function getBccRecipients():Array<String>;
	function getCcRecipients():Array<String>;
	function getHtml():Bool;
	function getMessageBody():String;
	function getSubject():String;
	function getToRecipients():Array<String>;
	function isSupported():Bool;
	function open(properties:Dynamic):Void;
	function setBarColor(barColor:String):Void;
	function setBccRecipients(bccRecipients:Array<String>):Void;
	function setCcRecipients(ccRecipients:Array<String>):Void;
	function setHtml(html:Bool):Void;
	function setMessageBody(messageBody:String):Void;
	function setSubject(subject:String):Void;
	function setToRecipients(toRecipients:Array<String>):Void;
};
typedef CoverFlowView = {
	>Ti.UI.View,
	var images : Dynamic;
	var selected : Float;
	function getImages():Dynamic;
	function getSelected():Float;
	@:overload(function(image:Ti.Blob):Void { })
	@:overload(function(image:Ti.Filesystem.File):Void { })
	@:overload(function(index:Float, image:CoverFlowImageType):Void { })
	function setImage(index:Float, image:String):Void;
	@:overload(function(images:Array<Ti.Blob>):Void { })
	@:overload(function(images:Array<Ti.Filesystem.File>):Void { })
	@:overload(function(images:Array<CoverFlowImageType>):Void { })
	function setImages(images:Array<String>):Void;
	function setSelected(selected:Float):Void;
};
typedef ImageView = {
	>Ti.UI.View,
	var animating : Bool;
	var autorotate : Bool;
	var decodeRetries : Float;
	var defaultImage : String;
	var duration : Float;
	var enableZoomControls : Bool;
	var hires : Bool;
	var image : Dynamic;
	var images : Dynamic;
	var paused : Bool;
	var preventDefaultImage : Bool;
	var repeatCount : Float;
	var reverse : Bool;
	var url : String;
	function getAnimating():Bool;
	function getAutorotate():Bool;
	function getDecodeRetries():Float;
	function getDefaultImage():String;
	function getDuration():Float;
	function getEnableZoomControls():Bool;
	function getHires():Bool;
	function getImage():Dynamic;
	function getImages():Dynamic;
	function getPaused():Bool;
	function getPreventDefaultImage():Bool;
	function getRepeatCount():Float;
	function getReverse():Bool;
	function getUrl():String;
	function pause():Void;
	function resume():Void;
	function setDecodeRetries(decodeRetries:Float):Void;
	function setDefaultImage(defaultImage:String):Void;
	function setDuration(duration:Float):Void;
	function setEnableZoomControls(enableZoomControls:Bool):Void;
	function setHires(hires:Bool):Void;
	@:overload(function(image:Ti.Blob):Void { })
	@:overload(function(image:Ti.Filesystem.File):Void { })
	function setImage(image:String):Void;
	@:overload(function(images:Array<Ti.Blob>):Void { })
	@:overload(function(images:Array<Ti.Filesystem.File>):Void { })
	function setImages(images:Array<String>):Void;
	function setPreventDefaultImage(preventDefaultImage:Bool):Void;
	function setRepeatCount(repeatCount:Float):Void;
	function setReverse(reverse:Bool):Void;
	function setUrl(url:String):Void;
	function start():Void;
	function stop():Void;
	function toBlob():Void;
};
typedef MaskedImage = {
	>Ti.UI.View,
	var image : String;
	var mask : String;
	var mode : Float;
	var tint : String;
	function getImage():String;
	function getMask():String;
	function getMode():Float;
	function getTint():String;
	function setImage(image:String):Void;
	function setMask(mask:String):Void;
	function setMode(mode:Float):Void;
	function setTint(tint:String):Void;
};
typedef ProgressBar = {
	>Ti.UI.View,
	var color : String;
	var font : Font;
	var max : Float;
	var message : String;
	var min : Float;
	var style : Float;
	var value : Float;
	function getColor():String;
	function getFont():Font;
	function getMax():Float;
	function getMessage():String;
	function getMin():Float;
	function getStyle():Float;
	function getValue():Float;
	function setColor(color:String):Void;
	function setFont(font:Font):Void;
	function setMax(max:Float):Void;
	function setMessage(message:String):Void;
	function setMin(min:Float):Void;
	function setStyle(style:Float):Void;
	function setValue(value:Float):Void;
};
typedef LocationProvider = {
	>Ti.Proxy,
	var minUpdateDistance : Float;
	var minUpdateTime : Float;
	var name : String;
	function getMinUpdateDistance():Float;
	function getMinUpdateTime():Float;
	function getName():String;
	function setMinUpdateDistance(minUpdateDistance:Float):Void;
	function setMinUpdateTime(minUpdateTime:Float):Void;
	function setName(name:String):Void;
};
typedef LocationRule = {
	>Ti.Proxy,
	var accuracy : Float;
	var maxAge : Float;
	var minAge : Float;
	var name : String;
	function getAccuracy():Float;
	function getMaxAge():Float;
	function getMinAge():Float;
	function getName():String;
	function setAccuracy(accuracy:Float):Void;
	function setMaxAge(maxAge:Float):Void;
	function setMinAge(minAge:Float):Void;
	function setName(name:String):Void;
};
extern class AndroidTopLevel {
	static var LINKIFY_ALL : Float;
	static var LINKIFY_EMAIL_ADDRESSES : Float;
	static var LINKIFY_MAP_ADDRESSES : Float;
	static var LINKIFY_PHONE_NUMBERS : Float;
	static var LINKIFY_WEB_URLS : Float;
	static var OVER_SCROLL_ALWAYS : Float;
	static var OVER_SCROLL_IF_CONTENT_SCROLLS : Float;
	static var OVER_SCROLL_NEVER : Float;
	static var PIXEL_FORMAT_A_8 : Float;
	static var PIXEL_FORMAT_LA_88 : Float;
	static var PIXEL_FORMAT_L_8 : Float;
	static var PIXEL_FORMAT_OPAQUE : Float;
	static var PIXEL_FORMAT_RGBA_4444 : Float;
	static var PIXEL_FORMAT_RGBA_5551 : Float;
	static var PIXEL_FORMAT_RGBA_8888 : Float;
	static var PIXEL_FORMAT_RGBX_8888 : Float;
	static var PIXEL_FORMAT_RGB_332 : Float;
	static var PIXEL_FORMAT_RGB_565 : Float;
	static var PIXEL_FORMAT_RGB_888 : Float;
	static var PIXEL_FORMAT_TRANSLUCENT : Float;
	static var PIXEL_FORMAT_TRANSPARENT : Float;
	static var PIXEL_FORMAT_UNKNOWN : Float;
	static var PROGRESS_INDICATOR_DETERMINANT : Float;
	static var PROGRESS_INDICATOR_DIALOG : Float;
	static var PROGRESS_INDICATOR_INDETERMINANT : Float;
	static var PROGRESS_INDICATOR_STATUS_BAR : Float;
	static var SOFT_INPUT_ADJUST_PAN : Float;
	static var SOFT_INPUT_ADJUST_RESIZE : Float;
	static var SOFT_INPUT_ADJUST_UNSPECIFIED : Float;
	static var SOFT_INPUT_STATE_ALWAYS_HIDDEN : Float;
	static var SOFT_INPUT_STATE_ALWAYS_VISIBLE : Float;
	static var SOFT_INPUT_STATE_HIDDEN : Float;
	static var SOFT_INPUT_STATE_UNSPECIFIED : Float;
	static var SOFT_INPUT_STATE_VISIBLE : Float;
	static var SOFT_KEYBOARD_DEFAULT_ON_FOCUS : Float;
	static var SOFT_KEYBOARD_HIDE_ON_FOCUS : Float;
	static var SOFT_KEYBOARD_SHOW_ON_FOCUS : Float;
	static var SWITCH_STYLE_CHECKBOX : Float;
	static var SWITCH_STYLE_TOGGLEBUTTON : Float;
	static var WEBVIEW_LOAD_CACHE_ELSE_NETWORK : Float;
	static var WEBVIEW_LOAD_CACHE_ONLY : Float;
	static var WEBVIEW_LOAD_DEFAULT : Float;
	static var WEBVIEW_LOAD_NO_CACHE : Float;
	static var WEBVIEW_PLUGINS_OFF : Float;
	static var WEBVIEW_PLUGINS_ON : Float;
	static var WEBVIEW_PLUGINS_ON_DEMAND : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createProgressIndicator(?parameters:Dictionary<Ti.UI.Android.ProgressIndicator>):Ti.UI.Android.ProgressIndicator;
	static function createSearchView(?parameters:Dictionary<Ti.UI.Android.SearchView>):Ti.UI.Android.SearchView;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function hideSoftKeyboard():Void;
	static function openPreferences():Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var apiName : String;
	static var bubbleParent : Bool;
	static var manualMode : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function addLocationProvider(provider:Ti.Geolocation.Android.LocationProvider):Void;
	static function addLocationRule(rule:Ti.Geolocation.Android.LocationRule):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createLocationProvider(?parameters:Dictionary<Ti.Geolocation.Android.LocationProvider>):Ti.Geolocation.Android.LocationProvider;
	static function createLocationRule(?parameters:Dictionary<Ti.Geolocation.Android.LocationRule>):Ti.Geolocation.Android.LocationRule;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function getManualMode():Bool;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function removeLocationProvider(provider:Ti.Geolocation.Android.LocationProvider):Void;
	static function removeLocationRule(rule:Ti.Geolocation.Android.LocationRule):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function setManualMode(manualMode:Bool):Void;
	static var R : Ti.App.Android.R;
	static var apiName : String;
	static var appVersionCode : Float;
	static var appVersionName : String;
	static var bubbleParent : Bool;
	static var launchIntent : Ti.Android.Intent;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getAppVersionCode():Float;
	static function getAppVersionName():String;
	static function getBubbleParent():Bool;
	static function getLaunchIntent():Ti.Android.Intent;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var ACTION_AIRPLANE_MODE_CHANGED : String;
	static var ACTION_ALL_APPS : String;
	static var ACTION_ANSWER : String;
	static var ACTION_ATTACH_DATA : String;
	static var ACTION_BATTERY_CHANGED : String;
	static var ACTION_BATTERY_LOW : String;
	static var ACTION_BATTERY_OKAY : String;
	static var ACTION_BOOT_COMPLETED : String;
	static var ACTION_BUG_REPORT : String;
	static var ACTION_CALL : String;
	static var ACTION_CALL_BUTTON : String;
	static var ACTION_CAMERA_BUTTON : String;
	static var ACTION_CHOOSER : String;
	static var ACTION_CLOSE_SYSTEM_DIALOGS : String;
	static var ACTION_CONFIGURATION_CHANGED : String;
	static var ACTION_CREATE_SHORTCUT : String;
	static var ACTION_DATE_CHANGED : String;
	static var ACTION_DEFAULT : String;
	static var ACTION_DELETE : String;
	static var ACTION_DEVICE_STORAGE_LOW : String;
	static var ACTION_DIAL : String;
	static var ACTION_EDIT : String;
	static var ACTION_GET_CONTENT : String;
	static var ACTION_GTALK_SERVICE_CONNECTED : String;
	static var ACTION_GTALK_SERVICE_DISCONNECTED : String;
	static var ACTION_HEADSET_PLUG : String;
	static var ACTION_INPUT_METHOD_CHANGED : String;
	static var ACTION_INSERT : String;
	static var ACTION_INSERT_OR_EDIT : String;
	static var ACTION_MAIN : String;
	static var ACTION_MANAGE_PACKAGE_STORAGE : String;
	static var ACTION_MEDIA_BAD_REMOVAL : String;
	static var ACTION_MEDIA_BUTTON : String;
	static var ACTION_MEDIA_CHECKING : String;
	static var ACTION_MEDIA_EJECT : String;
	static var ACTION_MEDIA_MOUNTED : String;
	static var ACTION_MEDIA_NOFS : String;
	static var ACTION_MEDIA_REMOVED : String;
	static var ACTION_MEDIA_SCANNER_FINISHED : String;
	static var ACTION_MEDIA_SCANNER_SCAN_FILE : String;
	static var ACTION_MEDIA_SCANNER_STARTED : String;
	static var ACTION_MEDIA_SHARED : String;
	static var ACTION_MEDIA_UNMOUNTABLE : String;
	static var ACTION_MEDIA_UNMOUNTED : String;
	static var ACTION_NEW_OUTGOING_CALL : String;
	static var ACTION_PACKAGE_ADDED : String;
	static var ACTION_PACKAGE_CHANGED : String;
	static var ACTION_PACKAGE_DATA_CLEARED : String;
	static var ACTION_PACKAGE_INSTALL : String;
	static var ACTION_PACKAGE_REMOVED : String;
	static var ACTION_PACKAGE_REPLACED : String;
	static var ACTION_PACKAGE_RESTARTED : String;
	static var ACTION_PICK : String;
	static var ACTION_PICK_ACTIVITY : String;
	static var ACTION_POWER_CONNECTED : String;
	static var ACTION_POWER_DISCONNECTED : String;
	static var ACTION_POWER_USAGE_SUMMARY : String;
	static var ACTION_PROVIDER_CHANGED : String;
	static var ACTION_REBOOT : String;
	static var ACTION_RUN : String;
	static var ACTION_SCREEN_OFF : String;
	static var ACTION_SCREEN_ON : String;
	static var ACTION_SEARCH : String;
	static var ACTION_SEARCH_LONG_PRESS : String;
	static var ACTION_SEND : String;
	static var ACTION_SENDTO : String;
	static var ACTION_SEND_MULTIPLE : String;
	static var ACTION_SET_WALLPAPER : String;
	static var ACTION_SHUTDOWN : String;
	static var ACTION_SYNC : String;
	static var ACTION_SYSTEM_TUTORIAL : String;
	static var ACTION_TIME_CHANGED : String;
	static var ACTION_TIME_TICK : String;
	static var ACTION_UID_REMOVED : String;
	static var ACTION_UMS_CONNECTED : String;
	static var ACTION_UMS_DISCONNECTED : String;
	static var ACTION_USER_PRESENT : String;
	static var ACTION_VIEW : String;
	static var ACTION_VOICE_COMMAND : String;
	static var ACTION_WALLPAPER_CHANGED : String;
	static var ACTION_WEB_SEARCH : String;
	static var CATEGORY_ALTERNATIVE : String;
	static var CATEGORY_BROWSABLE : String;
	static var CATEGORY_DEFAULT : String;
	static var CATEGORY_DEVELOPMENT_PREFERENCE : String;
	static var CATEGORY_EMBED : String;
	static var CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST : String;
	static var CATEGORY_HOME : String;
	static var CATEGORY_INFO : String;
	static var CATEGORY_LAUNCHER : String;
	static var CATEGORY_MONKEY : String;
	static var CATEGORY_OPENABLE : String;
	static var CATEGORY_PREFERENCE : String;
	static var CATEGORY_SAMPLE_CODE : String;
	static var CATEGORY_SELECTED_ALTERNATIVE : String;
	static var CATEGORY_TAB : String;
	static var CATEGORY_TEST : String;
	static var CATEGORY_UNIT_TEST : String;
	static var DEFAULT_ALL : Float;
	static var DEFAULT_LIGHTS : Float;
	static var DEFAULT_SOUND : Float;
	static var DEFAULT_VIBRATE : Float;
	static var EXTRA_ALARM_COUNT : String;
	static var EXTRA_BCC : String;
	static var EXTRA_CC : String;
	static var EXTRA_DATA_REMOVED : String;
	static var EXTRA_DONT_KILL_APP : String;
	static var EXTRA_EMAIL : String;
	static var EXTRA_INTENT : String;
	static var EXTRA_KEY_EVENT : String;
	static var EXTRA_PHONE_NUMBER : String;
	static var EXTRA_REPLACING : String;
	static var EXTRA_SHORTCUT_ICON : String;
	static var EXTRA_SHORTCUT_ICON_RESOURCE : String;
	static var EXTRA_SHORTCUT_INTENT : String;
	static var EXTRA_SHORTCUT_NAME : String;
	static var EXTRA_STREAM : String;
	static var EXTRA_SUBJECT : String;
	static var EXTRA_TEMPLATE : String;
	static var EXTRA_TEXT : String;
	static var EXTRA_TITLE : String;
	static var EXTRA_UID : String;
	static var FILL_IN_ACTION : Float;
	static var FILL_IN_CATEGORIES : Float;
	static var FILL_IN_COMPONENT : Float;
	static var FILL_IN_DATA : Float;
	static var FILL_IN_PACKAGE : Float;
	static var FLAG_ACTIVITY_BROUGHT_TO_FRONT : Float;
	static var FLAG_ACTIVITY_CLEAR_TOP : Float;
	static var FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET : Float;
	static var FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS : Float;
	static var FLAG_ACTIVITY_FORWARD_RESULT : Float;
	static var FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY : Float;
	static var FLAG_ACTIVITY_MULTIPLE_TASK : Float;
	static var FLAG_ACTIVITY_NEW_TASK : Float;
	static var FLAG_ACTIVITY_NO_ANIMATION : Float;
	static var FLAG_ACTIVITY_NO_HISTORY : Float;
	static var FLAG_ACTIVITY_NO_USER_ACTION : Float;
	static var FLAG_ACTIVITY_PREVIOUS_IS_TOP : Float;
	static var FLAG_ACTIVITY_REORDER_TO_FRONT : Float;
	static var FLAG_ACTIVITY_RESET_TASK_IF_NEEDED : Float;
	static var FLAG_ACTIVITY_SINGLE_TOP : Float;
	static var FLAG_AUTO_CANCEL : Float;
	static var FLAG_CANCEL_CURRENT : Float;
	static var FLAG_DEBUG_LOG_RESOLUTION : Float;
	static var FLAG_FROM_BACKGROUND : Float;
	static var FLAG_GRANT_READ_URI_PERMISSION : Float;
	static var FLAG_GRANT_WRITE_URI_PERMISSION : Float;
	static var FLAG_INSISTENT : Float;
	static var FLAG_NO_CLEAR : Float;
	static var FLAG_NO_CREATE : Float;
	static var FLAG_ONE_SHOT : Float;
	static var FLAG_ONGOING_EVENT : Float;
	static var FLAG_ONLY_ALERT_ONCE : Float;
	static var FLAG_RECEIVER_REGISTERED_ONLY : Float;
	static var FLAG_SHOW_LIGHTS : Float;
	static var FLAG_UPDATE_CURRENT : Float;
	static var NAVIGATION_MODE_STANDARD : Float;
	static var NAVIGATION_MODE_TABS : Float;
	static var PENDING_INTENT_FOR_ACTIVITY : Float;
	static var PENDING_INTENT_FOR_BROADCAST : Float;
	static var PENDING_INTENT_FOR_SERVICE : Float;
	static var PENDING_INTENT_MAX_VALUE : Float;
	static var R : Ti.Android.R;
	static var RESULT_CANCELED : Float;
	static var RESULT_FIRST_USER : Float;
	static var RESULT_OK : Float;
	static var SCREEN_ORIENTATION_BEHIND : Float;
	static var SCREEN_ORIENTATION_LANDSCAPE : Float;
	static var SCREEN_ORIENTATION_NOSENSOR : Float;
	static var SCREEN_ORIENTATION_PORTRAIT : Float;
	static var SCREEN_ORIENTATION_SENSOR : Float;
	static var SCREEN_ORIENTATION_UNSPECIFIED : Float;
	static var SCREEN_ORIENTATION_USER : Float;
	static var SHOW_AS_ACTION_ALWAYS : Float;
	static var SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW : Float;
	static var SHOW_AS_ACTION_IF_ROOM : Float;
	static var SHOW_AS_ACTION_NEVER : Float;
	static var SHOW_AS_ACTION_WITH_TEXT : Float;
	static var START_NOT_STICKY : Float;
	static var START_REDELIVER_INTENT : Float;
	static var STREAM_ALARM : Float;
	static var STREAM_DEFAULT : Float;
	static var STREAM_MUSIC : Float;
	static var STREAM_NOTIFICATION : Float;
	static var STREAM_RING : Float;
	static var STREAM_SYSTEM : Float;
	static var STREAM_VOICE_CALL : Float;
	static var URI_INTENT_SCHEME : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static var currentActivity : Ti.Android.Activity;
	static var currentService : Ti.Android.Service;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createBroadcastIntent(options:BroadcastIntentOptions):Ti.Android.Intent;
	static function createBroadcastReceiver(?parameters:Dictionary<Ti.Android.BroadcastReceiver>):Ti.Android.BroadcastReceiver;
	static function createIntent(?parameters:Dictionary<Ti.Android.Intent>):Ti.Android.Intent;
	static function createIntentChooser(intent:Ti.Android.Intent, title:String):Ti.Android.Intent;
	static function createNotification(?parameters:Dictionary<Ti.Android.Notification>):Ti.Android.Notification;
	static function createPendingIntent(?parameters:Dictionary<Ti.Android.PendingIntent>):Ti.Android.PendingIntent;
	static function createRemoteViews(?parameters:Dictionary<Ti.Android.RemoteViews>):Ti.Android.RemoteViews;
	static function createService(intent:Ti.Android.Intent):Ti.Android.Service;
	static function createServiceIntent(options:ServiceIntentOptions):Ti.Android.Intent;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function getCurrentActivity():Ti.Android.Activity;
	static function getCurrentService():Ti.Android.Service;
	static function isServiceRunning(intent:Ti.Android.Intent):Bool;
	static function registerBroadcastReceiver(broadcastReceiver:Ti.Android.BroadcastReceiver, actions:Array<String>):Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function startService(intent:Ti.Android.Intent):Void;
	static function stopService(intent:Ti.Android.Intent):Void;
	static function unregisterBroadcastReceiver(broadcastReceiver:Ti.Android.BroadcastReceiver):Void;
}
typedef MobileWeb = {
	var forwardGeocoderTimeout : Float;
	var locationTimeout : Float;
	var maximumHeadingAge : Float;
	var maximumLocationAge : Float;
	var reverseGeocoderTimeout : Float;
	function getForwardGeocoderTimeout():Float;
	function getLocationTimeout():Float;
	function getMaximumHeadingAge():Float;
	function getMaximumLocationAge():Float;
	function getReverseGeocoderTimeout():Float;
	function setForwardGeocoderTimeout(forwardGeocoderTimeout:Float):Void;
	function setLocationTimeout(locationTimeout:Float):Void;
	function setMaximumHeadingAge(maximumHeadingAge:Float):Void;
	function setMaximumLocationAge(maximumLocationAge:Float):Void;
	function setReverseGeocoderTimeout(reverseGeocoderTimeout:Float):Void;
};
typedef Proxy = {
	var apiName : String;
	var bubbleParent : Bool;
	function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	function applyProperties(props:Dictionary<Dynamic>):Void;
	function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	function getApiName():String;
	function getBubbleParent():Bool;
	function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	function setBubbleParent(bubbleParent:Bool):Void;
};
typedef R = { };
extern class AndroidTopLevel {
	static var LINKIFY_ALL : Float;
	static var LINKIFY_EMAIL_ADDRESSES : Float;
	static var LINKIFY_MAP_ADDRESSES : Float;
	static var LINKIFY_PHONE_NUMBERS : Float;
	static var LINKIFY_WEB_URLS : Float;
	static var OVER_SCROLL_ALWAYS : Float;
	static var OVER_SCROLL_IF_CONTENT_SCROLLS : Float;
	static var OVER_SCROLL_NEVER : Float;
	static var PIXEL_FORMAT_A_8 : Float;
	static var PIXEL_FORMAT_LA_88 : Float;
	static var PIXEL_FORMAT_L_8 : Float;
	static var PIXEL_FORMAT_OPAQUE : Float;
	static var PIXEL_FORMAT_RGBA_4444 : Float;
	static var PIXEL_FORMAT_RGBA_5551 : Float;
	static var PIXEL_FORMAT_RGBA_8888 : Float;
	static var PIXEL_FORMAT_RGBX_8888 : Float;
	static var PIXEL_FORMAT_RGB_332 : Float;
	static var PIXEL_FORMAT_RGB_565 : Float;
	static var PIXEL_FORMAT_RGB_888 : Float;
	static var PIXEL_FORMAT_TRANSLUCENT : Float;
	static var PIXEL_FORMAT_TRANSPARENT : Float;
	static var PIXEL_FORMAT_UNKNOWN : Float;
	static var PROGRESS_INDICATOR_DETERMINANT : Float;
	static var PROGRESS_INDICATOR_DIALOG : Float;
	static var PROGRESS_INDICATOR_INDETERMINANT : Float;
	static var PROGRESS_INDICATOR_STATUS_BAR : Float;
	static var SOFT_INPUT_ADJUST_PAN : Float;
	static var SOFT_INPUT_ADJUST_RESIZE : Float;
	static var SOFT_INPUT_ADJUST_UNSPECIFIED : Float;
	static var SOFT_INPUT_STATE_ALWAYS_HIDDEN : Float;
	static var SOFT_INPUT_STATE_ALWAYS_VISIBLE : Float;
	static var SOFT_INPUT_STATE_HIDDEN : Float;
	static var SOFT_INPUT_STATE_UNSPECIFIED : Float;
	static var SOFT_INPUT_STATE_VISIBLE : Float;
	static var SOFT_KEYBOARD_DEFAULT_ON_FOCUS : Float;
	static var SOFT_KEYBOARD_HIDE_ON_FOCUS : Float;
	static var SOFT_KEYBOARD_SHOW_ON_FOCUS : Float;
	static var SWITCH_STYLE_CHECKBOX : Float;
	static var SWITCH_STYLE_TOGGLEBUTTON : Float;
	static var WEBVIEW_LOAD_CACHE_ELSE_NETWORK : Float;
	static var WEBVIEW_LOAD_CACHE_ONLY : Float;
	static var WEBVIEW_LOAD_DEFAULT : Float;
	static var WEBVIEW_LOAD_NO_CACHE : Float;
	static var WEBVIEW_PLUGINS_OFF : Float;
	static var WEBVIEW_PLUGINS_ON : Float;
	static var WEBVIEW_PLUGINS_ON_DEMAND : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createProgressIndicator(?parameters:Dictionary<Ti.UI.Android.ProgressIndicator>):Ti.UI.Android.ProgressIndicator;
	static function createSearchView(?parameters:Dictionary<Ti.UI.Android.SearchView>):Ti.UI.Android.SearchView;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function hideSoftKeyboard():Void;
	static function openPreferences():Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var apiName : String;
	static var bubbleParent : Bool;
	static var manualMode : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function addLocationProvider(provider:Ti.Geolocation.Android.LocationProvider):Void;
	static function addLocationRule(rule:Ti.Geolocation.Android.LocationRule):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createLocationProvider(?parameters:Dictionary<Ti.Geolocation.Android.LocationProvider>):Ti.Geolocation.Android.LocationProvider;
	static function createLocationRule(?parameters:Dictionary<Ti.Geolocation.Android.LocationRule>):Ti.Geolocation.Android.LocationRule;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function getManualMode():Bool;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function removeLocationProvider(provider:Ti.Geolocation.Android.LocationProvider):Void;
	static function removeLocationRule(rule:Ti.Geolocation.Android.LocationRule):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function setManualMode(manualMode:Bool):Void;
	static var R : Ti.App.Android.R;
	static var apiName : String;
	static var appVersionCode : Float;
	static var appVersionName : String;
	static var bubbleParent : Bool;
	static var launchIntent : Ti.Android.Intent;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getAppVersionCode():Float;
	static function getAppVersionName():String;
	static function getBubbleParent():Bool;
	static function getLaunchIntent():Ti.Android.Intent;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var ACTION_AIRPLANE_MODE_CHANGED : String;
	static var ACTION_ALL_APPS : String;
	static var ACTION_ANSWER : String;
	static var ACTION_ATTACH_DATA : String;
	static var ACTION_BATTERY_CHANGED : String;
	static var ACTION_BATTERY_LOW : String;
	static var ACTION_BATTERY_OKAY : String;
	static var ACTION_BOOT_COMPLETED : String;
	static var ACTION_BUG_REPORT : String;
	static var ACTION_CALL : String;
	static var ACTION_CALL_BUTTON : String;
	static var ACTION_CAMERA_BUTTON : String;
	static var ACTION_CHOOSER : String;
	static var ACTION_CLOSE_SYSTEM_DIALOGS : String;
	static var ACTION_CONFIGURATION_CHANGED : String;
	static var ACTION_CREATE_SHORTCUT : String;
	static var ACTION_DATE_CHANGED : String;
	static var ACTION_DEFAULT : String;
	static var ACTION_DELETE : String;
	static var ACTION_DEVICE_STORAGE_LOW : String;
	static var ACTION_DIAL : String;
	static var ACTION_EDIT : String;
	static var ACTION_GET_CONTENT : String;
	static var ACTION_GTALK_SERVICE_CONNECTED : String;
	static var ACTION_GTALK_SERVICE_DISCONNECTED : String;
	static var ACTION_HEADSET_PLUG : String;
	static var ACTION_INPUT_METHOD_CHANGED : String;
	static var ACTION_INSERT : String;
	static var ACTION_INSERT_OR_EDIT : String;
	static var ACTION_MAIN : String;
	static var ACTION_MANAGE_PACKAGE_STORAGE : String;
	static var ACTION_MEDIA_BAD_REMOVAL : String;
	static var ACTION_MEDIA_BUTTON : String;
	static var ACTION_MEDIA_CHECKING : String;
	static var ACTION_MEDIA_EJECT : String;
	static var ACTION_MEDIA_MOUNTED : String;
	static var ACTION_MEDIA_NOFS : String;
	static var ACTION_MEDIA_REMOVED : String;
	static var ACTION_MEDIA_SCANNER_FINISHED : String;
	static var ACTION_MEDIA_SCANNER_SCAN_FILE : String;
	static var ACTION_MEDIA_SCANNER_STARTED : String;
	static var ACTION_MEDIA_SHARED : String;
	static var ACTION_MEDIA_UNMOUNTABLE : String;
	static var ACTION_MEDIA_UNMOUNTED : String;
	static var ACTION_NEW_OUTGOING_CALL : String;
	static var ACTION_PACKAGE_ADDED : String;
	static var ACTION_PACKAGE_CHANGED : String;
	static var ACTION_PACKAGE_DATA_CLEARED : String;
	static var ACTION_PACKAGE_INSTALL : String;
	static var ACTION_PACKAGE_REMOVED : String;
	static var ACTION_PACKAGE_REPLACED : String;
	static var ACTION_PACKAGE_RESTARTED : String;
	static var ACTION_PICK : String;
	static var ACTION_PICK_ACTIVITY : String;
	static var ACTION_POWER_CONNECTED : String;
	static var ACTION_POWER_DISCONNECTED : String;
	static var ACTION_POWER_USAGE_SUMMARY : String;
	static var ACTION_PROVIDER_CHANGED : String;
	static var ACTION_REBOOT : String;
	static var ACTION_RUN : String;
	static var ACTION_SCREEN_OFF : String;
	static var ACTION_SCREEN_ON : String;
	static var ACTION_SEARCH : String;
	static var ACTION_SEARCH_LONG_PRESS : String;
	static var ACTION_SEND : String;
	static var ACTION_SENDTO : String;
	static var ACTION_SEND_MULTIPLE : String;
	static var ACTION_SET_WALLPAPER : String;
	static var ACTION_SHUTDOWN : String;
	static var ACTION_SYNC : String;
	static var ACTION_SYSTEM_TUTORIAL : String;
	static var ACTION_TIME_CHANGED : String;
	static var ACTION_TIME_TICK : String;
	static var ACTION_UID_REMOVED : String;
	static var ACTION_UMS_CONNECTED : String;
	static var ACTION_UMS_DISCONNECTED : String;
	static var ACTION_USER_PRESENT : String;
	static var ACTION_VIEW : String;
	static var ACTION_VOICE_COMMAND : String;
	static var ACTION_WALLPAPER_CHANGED : String;
	static var ACTION_WEB_SEARCH : String;
	static var CATEGORY_ALTERNATIVE : String;
	static var CATEGORY_BROWSABLE : String;
	static var CATEGORY_DEFAULT : String;
	static var CATEGORY_DEVELOPMENT_PREFERENCE : String;
	static var CATEGORY_EMBED : String;
	static var CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST : String;
	static var CATEGORY_HOME : String;
	static var CATEGORY_INFO : String;
	static var CATEGORY_LAUNCHER : String;
	static var CATEGORY_MONKEY : String;
	static var CATEGORY_OPENABLE : String;
	static var CATEGORY_PREFERENCE : String;
	static var CATEGORY_SAMPLE_CODE : String;
	static var CATEGORY_SELECTED_ALTERNATIVE : String;
	static var CATEGORY_TAB : String;
	static var CATEGORY_TEST : String;
	static var CATEGORY_UNIT_TEST : String;
	static var DEFAULT_ALL : Float;
	static var DEFAULT_LIGHTS : Float;
	static var DEFAULT_SOUND : Float;
	static var DEFAULT_VIBRATE : Float;
	static var EXTRA_ALARM_COUNT : String;
	static var EXTRA_BCC : String;
	static var EXTRA_CC : String;
	static var EXTRA_DATA_REMOVED : String;
	static var EXTRA_DONT_KILL_APP : String;
	static var EXTRA_EMAIL : String;
	static var EXTRA_INTENT : String;
	static var EXTRA_KEY_EVENT : String;
	static var EXTRA_PHONE_NUMBER : String;
	static var EXTRA_REPLACING : String;
	static var EXTRA_SHORTCUT_ICON : String;
	static var EXTRA_SHORTCUT_ICON_RESOURCE : String;
	static var EXTRA_SHORTCUT_INTENT : String;
	static var EXTRA_SHORTCUT_NAME : String;
	static var EXTRA_STREAM : String;
	static var EXTRA_SUBJECT : String;
	static var EXTRA_TEMPLATE : String;
	static var EXTRA_TEXT : String;
	static var EXTRA_TITLE : String;
	static var EXTRA_UID : String;
	static var FILL_IN_ACTION : Float;
	static var FILL_IN_CATEGORIES : Float;
	static var FILL_IN_COMPONENT : Float;
	static var FILL_IN_DATA : Float;
	static var FILL_IN_PACKAGE : Float;
	static var FLAG_ACTIVITY_BROUGHT_TO_FRONT : Float;
	static var FLAG_ACTIVITY_CLEAR_TOP : Float;
	static var FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET : Float;
	static var FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS : Float;
	static var FLAG_ACTIVITY_FORWARD_RESULT : Float;
	static var FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY : Float;
	static var FLAG_ACTIVITY_MULTIPLE_TASK : Float;
	static var FLAG_ACTIVITY_NEW_TASK : Float;
	static var FLAG_ACTIVITY_NO_ANIMATION : Float;
	static var FLAG_ACTIVITY_NO_HISTORY : Float;
	static var FLAG_ACTIVITY_NO_USER_ACTION : Float;
	static var FLAG_ACTIVITY_PREVIOUS_IS_TOP : Float;
	static var FLAG_ACTIVITY_REORDER_TO_FRONT : Float;
	static var FLAG_ACTIVITY_RESET_TASK_IF_NEEDED : Float;
	static var FLAG_ACTIVITY_SINGLE_TOP : Float;
	static var FLAG_AUTO_CANCEL : Float;
	static var FLAG_CANCEL_CURRENT : Float;
	static var FLAG_DEBUG_LOG_RESOLUTION : Float;
	static var FLAG_FROM_BACKGROUND : Float;
	static var FLAG_GRANT_READ_URI_PERMISSION : Float;
	static var FLAG_GRANT_WRITE_URI_PERMISSION : Float;
	static var FLAG_INSISTENT : Float;
	static var FLAG_NO_CLEAR : Float;
	static var FLAG_NO_CREATE : Float;
	static var FLAG_ONE_SHOT : Float;
	static var FLAG_ONGOING_EVENT : Float;
	static var FLAG_ONLY_ALERT_ONCE : Float;
	static var FLAG_RECEIVER_REGISTERED_ONLY : Float;
	static var FLAG_SHOW_LIGHTS : Float;
	static var FLAG_UPDATE_CURRENT : Float;
	static var NAVIGATION_MODE_STANDARD : Float;
	static var NAVIGATION_MODE_TABS : Float;
	static var PENDING_INTENT_FOR_ACTIVITY : Float;
	static var PENDING_INTENT_FOR_BROADCAST : Float;
	static var PENDING_INTENT_FOR_SERVICE : Float;
	static var PENDING_INTENT_MAX_VALUE : Float;
	static var R : Ti.Android.R;
	static var RESULT_CANCELED : Float;
	static var RESULT_FIRST_USER : Float;
	static var RESULT_OK : Float;
	static var SCREEN_ORIENTATION_BEHIND : Float;
	static var SCREEN_ORIENTATION_LANDSCAPE : Float;
	static var SCREEN_ORIENTATION_NOSENSOR : Float;
	static var SCREEN_ORIENTATION_PORTRAIT : Float;
	static var SCREEN_ORIENTATION_SENSOR : Float;
	static var SCREEN_ORIENTATION_UNSPECIFIED : Float;
	static var SCREEN_ORIENTATION_USER : Float;
	static var SHOW_AS_ACTION_ALWAYS : Float;
	static var SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW : Float;
	static var SHOW_AS_ACTION_IF_ROOM : Float;
	static var SHOW_AS_ACTION_NEVER : Float;
	static var SHOW_AS_ACTION_WITH_TEXT : Float;
	static var START_NOT_STICKY : Float;
	static var START_REDELIVER_INTENT : Float;
	static var STREAM_ALARM : Float;
	static var STREAM_DEFAULT : Float;
	static var STREAM_MUSIC : Float;
	static var STREAM_NOTIFICATION : Float;
	static var STREAM_RING : Float;
	static var STREAM_SYSTEM : Float;
	static var STREAM_VOICE_CALL : Float;
	static var URI_INTENT_SCHEME : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static var currentActivity : Ti.Android.Activity;
	static var currentService : Ti.Android.Service;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createBroadcastIntent(options:BroadcastIntentOptions):Ti.Android.Intent;
	static function createBroadcastReceiver(?parameters:Dictionary<Ti.Android.BroadcastReceiver>):Ti.Android.BroadcastReceiver;
	static function createIntent(?parameters:Dictionary<Ti.Android.Intent>):Ti.Android.Intent;
	static function createIntentChooser(intent:Ti.Android.Intent, title:String):Ti.Android.Intent;
	static function createNotification(?parameters:Dictionary<Ti.Android.Notification>):Ti.Android.Notification;
	static function createPendingIntent(?parameters:Dictionary<Ti.Android.PendingIntent>):Ti.Android.PendingIntent;
	static function createRemoteViews(?parameters:Dictionary<Ti.Android.RemoteViews>):Ti.Android.RemoteViews;
	static function createService(intent:Ti.Android.Intent):Ti.Android.Service;
	static function createServiceIntent(options:ServiceIntentOptions):Ti.Android.Intent;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function getCurrentActivity():Ti.Android.Activity;
	static function getCurrentService():Ti.Android.Service;
	static function isServiceRunning(intent:Ti.Android.Intent):Bool;
	static function registerBroadcastReceiver(broadcastReceiver:Ti.Android.BroadcastReceiver, actions:Array<String>):Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function startService(intent:Ti.Android.Intent):Void;
	static function stopService(intent:Ti.Android.Intent):Void;
	static function unregisterBroadcastReceiver(broadcastReceiver:Ti.Android.BroadcastReceiver):Void;
}
typedef Intent = {
	>Ti.Proxy,
	var action : String;
	var className : String;
	var data : String;
	var flags : Float;
	var packageName : String;
	var type : String;
	var url : String;
	function addCategory(name:String):Void;
	function addFlags(flags:Float):Void;
	function getAction():String;
	function getBlobExtra(name:String):Ti.Blob;
	function getBooleanExtra(name:String):Bool;
	function getClassName():String;
	function getData():String;
	function getDoubleExtra(name:String):Float;
	function getFlags():Float;
	function getIntExtra(name:String):Float;
	function getLongExtra(name:String):Float;
	function getPackageName():String;
	function getStringExtra(name:String):String;
	function getType():String;
	function getUrl():String;
	function hasExtra(name:String):Bool;
	function putExtra(name:String, value:Dynamic):Void;
	function putExtraUri(name:String, value:String):Void;
	function setFlags(flags:Float):Void;
};
typedef Notification = {
	>Ti.Proxy,
	var audioStreamType : Float;
	var contentIntent : Ti.Android.PendingIntent;
	var contentText : String;
	var contentTitle : String;
	var contentView : Ti.Android.RemoteViews;
	var defaults : Float;
	var deleteIntent : Ti.Android.PendingIntent;
	var flags : Float;
	var icon : Dynamic;
	var ledARGB : Float;
	var ledOffMS : Float;
	var ledOnMS : Float;
	var number : Float;
	var sound : String;
	var tickerText : String;
	var when : Dynamic;
	function getAudioStreamType():Float;
	function getContentIntent():Ti.Android.PendingIntent;
	function getContentText():String;
	function getContentTitle():String;
	function getDefaults():Float;
	function getDeleteIntent():Ti.Android.PendingIntent;
	function getFlags():Float;
	function getIcon():Dynamic;
	function getLedARGB():Float;
	function getLedOffMS():Float;
	function getLedOnMS():Float;
	function getNumber():Float;
	function getSound():String;
	function getTickerText():String;
	function getWhen():Dynamic;
	function setAudioStreamType(audioStreamType:Float):Void;
	function setContentIntent(contentIntent:Ti.Android.PendingIntent):Void;
	function setContentText(contentText:String):Void;
	function setContentTitle(contentTitle:String):Void;
	function setContentView(contentView:Ti.Android.RemoteViews):Void;
	function setDefaults(defaults:Float):Void;
	function setDeleteIntent(deleteIntent:Ti.Android.PendingIntent):Void;
	function setFlags(flags:Float):Void;
	@:overload(function(icon:String):Void { })
	function setIcon(icon:Float):Void;
	function setLatestEventInfo(contentTitle:String, contentText:String, contentIntent:Ti.Android.PendingIntent):Void;
	function setLedARGB(ledARGB:Float):Void;
	function setLedOffMS(ledOffMS:Float):Void;
	function setLedOnMS(ledOnMS:Float):Void;
	function setNumber(number:Float):Void;
	function setSound(sound:String):Void;
	function setTickerText(tickerText:String):Void;
	@:overload(function(when:Float):Void { })
	function setWhen(when:Date):Void;
};
extern class AndroidTopLevel {
	static var LINKIFY_ALL : Float;
	static var LINKIFY_EMAIL_ADDRESSES : Float;
	static var LINKIFY_MAP_ADDRESSES : Float;
	static var LINKIFY_PHONE_NUMBERS : Float;
	static var LINKIFY_WEB_URLS : Float;
	static var OVER_SCROLL_ALWAYS : Float;
	static var OVER_SCROLL_IF_CONTENT_SCROLLS : Float;
	static var OVER_SCROLL_NEVER : Float;
	static var PIXEL_FORMAT_A_8 : Float;
	static var PIXEL_FORMAT_LA_88 : Float;
	static var PIXEL_FORMAT_L_8 : Float;
	static var PIXEL_FORMAT_OPAQUE : Float;
	static var PIXEL_FORMAT_RGBA_4444 : Float;
	static var PIXEL_FORMAT_RGBA_5551 : Float;
	static var PIXEL_FORMAT_RGBA_8888 : Float;
	static var PIXEL_FORMAT_RGBX_8888 : Float;
	static var PIXEL_FORMAT_RGB_332 : Float;
	static var PIXEL_FORMAT_RGB_565 : Float;
	static var PIXEL_FORMAT_RGB_888 : Float;
	static var PIXEL_FORMAT_TRANSLUCENT : Float;
	static var PIXEL_FORMAT_TRANSPARENT : Float;
	static var PIXEL_FORMAT_UNKNOWN : Float;
	static var PROGRESS_INDICATOR_DETERMINANT : Float;
	static var PROGRESS_INDICATOR_DIALOG : Float;
	static var PROGRESS_INDICATOR_INDETERMINANT : Float;
	static var PROGRESS_INDICATOR_STATUS_BAR : Float;
	static var SOFT_INPUT_ADJUST_PAN : Float;
	static var SOFT_INPUT_ADJUST_RESIZE : Float;
	static var SOFT_INPUT_ADJUST_UNSPECIFIED : Float;
	static var SOFT_INPUT_STATE_ALWAYS_HIDDEN : Float;
	static var SOFT_INPUT_STATE_ALWAYS_VISIBLE : Float;
	static var SOFT_INPUT_STATE_HIDDEN : Float;
	static var SOFT_INPUT_STATE_UNSPECIFIED : Float;
	static var SOFT_INPUT_STATE_VISIBLE : Float;
	static var SOFT_KEYBOARD_DEFAULT_ON_FOCUS : Float;
	static var SOFT_KEYBOARD_HIDE_ON_FOCUS : Float;
	static var SOFT_KEYBOARD_SHOW_ON_FOCUS : Float;
	static var SWITCH_STYLE_CHECKBOX : Float;
	static var SWITCH_STYLE_TOGGLEBUTTON : Float;
	static var WEBVIEW_LOAD_CACHE_ELSE_NETWORK : Float;
	static var WEBVIEW_LOAD_CACHE_ONLY : Float;
	static var WEBVIEW_LOAD_DEFAULT : Float;
	static var WEBVIEW_LOAD_NO_CACHE : Float;
	static var WEBVIEW_PLUGINS_OFF : Float;
	static var WEBVIEW_PLUGINS_ON : Float;
	static var WEBVIEW_PLUGINS_ON_DEMAND : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createProgressIndicator(?parameters:Dictionary<Ti.UI.Android.ProgressIndicator>):Ti.UI.Android.ProgressIndicator;
	static function createSearchView(?parameters:Dictionary<Ti.UI.Android.SearchView>):Ti.UI.Android.SearchView;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function hideSoftKeyboard():Void;
	static function openPreferences():Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var apiName : String;
	static var bubbleParent : Bool;
	static var manualMode : Bool;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function addLocationProvider(provider:Ti.Geolocation.Android.LocationProvider):Void;
	static function addLocationRule(rule:Ti.Geolocation.Android.LocationRule):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createLocationProvider(?parameters:Dictionary<Ti.Geolocation.Android.LocationProvider>):Ti.Geolocation.Android.LocationProvider;
	static function createLocationRule(?parameters:Dictionary<Ti.Geolocation.Android.LocationRule>):Ti.Geolocation.Android.LocationRule;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function getManualMode():Bool;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function removeLocationProvider(provider:Ti.Geolocation.Android.LocationProvider):Void;
	static function removeLocationRule(rule:Ti.Geolocation.Android.LocationRule):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function setManualMode(manualMode:Bool):Void;
	static var R : Ti.App.Android.R;
	static var apiName : String;
	static var appVersionCode : Float;
	static var appVersionName : String;
	static var bubbleParent : Bool;
	static var launchIntent : Ti.Android.Intent;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getAppVersionCode():Float;
	static function getAppVersionName():String;
	static function getBubbleParent():Bool;
	static function getLaunchIntent():Ti.Android.Intent;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static var ACTION_AIRPLANE_MODE_CHANGED : String;
	static var ACTION_ALL_APPS : String;
	static var ACTION_ANSWER : String;
	static var ACTION_ATTACH_DATA : String;
	static var ACTION_BATTERY_CHANGED : String;
	static var ACTION_BATTERY_LOW : String;
	static var ACTION_BATTERY_OKAY : String;
	static var ACTION_BOOT_COMPLETED : String;
	static var ACTION_BUG_REPORT : String;
	static var ACTION_CALL : String;
	static var ACTION_CALL_BUTTON : String;
	static var ACTION_CAMERA_BUTTON : String;
	static var ACTION_CHOOSER : String;
	static var ACTION_CLOSE_SYSTEM_DIALOGS : String;
	static var ACTION_CONFIGURATION_CHANGED : String;
	static var ACTION_CREATE_SHORTCUT : String;
	static var ACTION_DATE_CHANGED : String;
	static var ACTION_DEFAULT : String;
	static var ACTION_DELETE : String;
	static var ACTION_DEVICE_STORAGE_LOW : String;
	static var ACTION_DIAL : String;
	static var ACTION_EDIT : String;
	static var ACTION_GET_CONTENT : String;
	static var ACTION_GTALK_SERVICE_CONNECTED : String;
	static var ACTION_GTALK_SERVICE_DISCONNECTED : String;
	static var ACTION_HEADSET_PLUG : String;
	static var ACTION_INPUT_METHOD_CHANGED : String;
	static var ACTION_INSERT : String;
	static var ACTION_INSERT_OR_EDIT : String;
	static var ACTION_MAIN : String;
	static var ACTION_MANAGE_PACKAGE_STORAGE : String;
	static var ACTION_MEDIA_BAD_REMOVAL : String;
	static var ACTION_MEDIA_BUTTON : String;
	static var ACTION_MEDIA_CHECKING : String;
	static var ACTION_MEDIA_EJECT : String;
	static var ACTION_MEDIA_MOUNTED : String;
	static var ACTION_MEDIA_NOFS : String;
	static var ACTION_MEDIA_REMOVED : String;
	static var ACTION_MEDIA_SCANNER_FINISHED : String;
	static var ACTION_MEDIA_SCANNER_SCAN_FILE : String;
	static var ACTION_MEDIA_SCANNER_STARTED : String;
	static var ACTION_MEDIA_SHARED : String;
	static var ACTION_MEDIA_UNMOUNTABLE : String;
	static var ACTION_MEDIA_UNMOUNTED : String;
	static var ACTION_NEW_OUTGOING_CALL : String;
	static var ACTION_PACKAGE_ADDED : String;
	static var ACTION_PACKAGE_CHANGED : String;
	static var ACTION_PACKAGE_DATA_CLEARED : String;
	static var ACTION_PACKAGE_INSTALL : String;
	static var ACTION_PACKAGE_REMOVED : String;
	static var ACTION_PACKAGE_REPLACED : String;
	static var ACTION_PACKAGE_RESTARTED : String;
	static var ACTION_PICK : String;
	static var ACTION_PICK_ACTIVITY : String;
	static var ACTION_POWER_CONNECTED : String;
	static var ACTION_POWER_DISCONNECTED : String;
	static var ACTION_POWER_USAGE_SUMMARY : String;
	static var ACTION_PROVIDER_CHANGED : String;
	static var ACTION_REBOOT : String;
	static var ACTION_RUN : String;
	static var ACTION_SCREEN_OFF : String;
	static var ACTION_SCREEN_ON : String;
	static var ACTION_SEARCH : String;
	static var ACTION_SEARCH_LONG_PRESS : String;
	static var ACTION_SEND : String;
	static var ACTION_SENDTO : String;
	static var ACTION_SEND_MULTIPLE : String;
	static var ACTION_SET_WALLPAPER : String;
	static var ACTION_SHUTDOWN : String;
	static var ACTION_SYNC : String;
	static var ACTION_SYSTEM_TUTORIAL : String;
	static var ACTION_TIME_CHANGED : String;
	static var ACTION_TIME_TICK : String;
	static var ACTION_UID_REMOVED : String;
	static var ACTION_UMS_CONNECTED : String;
	static var ACTION_UMS_DISCONNECTED : String;
	static var ACTION_USER_PRESENT : String;
	static var ACTION_VIEW : String;
	static var ACTION_VOICE_COMMAND : String;
	static var ACTION_WALLPAPER_CHANGED : String;
	static var ACTION_WEB_SEARCH : String;
	static var CATEGORY_ALTERNATIVE : String;
	static var CATEGORY_BROWSABLE : String;
	static var CATEGORY_DEFAULT : String;
	static var CATEGORY_DEVELOPMENT_PREFERENCE : String;
	static var CATEGORY_EMBED : String;
	static var CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST : String;
	static var CATEGORY_HOME : String;
	static var CATEGORY_INFO : String;
	static var CATEGORY_LAUNCHER : String;
	static var CATEGORY_MONKEY : String;
	static var CATEGORY_OPENABLE : String;
	static var CATEGORY_PREFERENCE : String;
	static var CATEGORY_SAMPLE_CODE : String;
	static var CATEGORY_SELECTED_ALTERNATIVE : String;
	static var CATEGORY_TAB : String;
	static var CATEGORY_TEST : String;
	static var CATEGORY_UNIT_TEST : String;
	static var DEFAULT_ALL : Float;
	static var DEFAULT_LIGHTS : Float;
	static var DEFAULT_SOUND : Float;
	static var DEFAULT_VIBRATE : Float;
	static var EXTRA_ALARM_COUNT : String;
	static var EXTRA_BCC : String;
	static var EXTRA_CC : String;
	static var EXTRA_DATA_REMOVED : String;
	static var EXTRA_DONT_KILL_APP : String;
	static var EXTRA_EMAIL : String;
	static var EXTRA_INTENT : String;
	static var EXTRA_KEY_EVENT : String;
	static var EXTRA_PHONE_NUMBER : String;
	static var EXTRA_REPLACING : String;
	static var EXTRA_SHORTCUT_ICON : String;
	static var EXTRA_SHORTCUT_ICON_RESOURCE : String;
	static var EXTRA_SHORTCUT_INTENT : String;
	static var EXTRA_SHORTCUT_NAME : String;
	static var EXTRA_STREAM : String;
	static var EXTRA_SUBJECT : String;
	static var EXTRA_TEMPLATE : String;
	static var EXTRA_TEXT : String;
	static var EXTRA_TITLE : String;
	static var EXTRA_UID : String;
	static var FILL_IN_ACTION : Float;
	static var FILL_IN_CATEGORIES : Float;
	static var FILL_IN_COMPONENT : Float;
	static var FILL_IN_DATA : Float;
	static var FILL_IN_PACKAGE : Float;
	static var FLAG_ACTIVITY_BROUGHT_TO_FRONT : Float;
	static var FLAG_ACTIVITY_CLEAR_TOP : Float;
	static var FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET : Float;
	static var FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS : Float;
	static var FLAG_ACTIVITY_FORWARD_RESULT : Float;
	static var FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY : Float;
	static var FLAG_ACTIVITY_MULTIPLE_TASK : Float;
	static var FLAG_ACTIVITY_NEW_TASK : Float;
	static var FLAG_ACTIVITY_NO_ANIMATION : Float;
	static var FLAG_ACTIVITY_NO_HISTORY : Float;
	static var FLAG_ACTIVITY_NO_USER_ACTION : Float;
	static var FLAG_ACTIVITY_PREVIOUS_IS_TOP : Float;
	static var FLAG_ACTIVITY_REORDER_TO_FRONT : Float;
	static var FLAG_ACTIVITY_RESET_TASK_IF_NEEDED : Float;
	static var FLAG_ACTIVITY_SINGLE_TOP : Float;
	static var FLAG_AUTO_CANCEL : Float;
	static var FLAG_CANCEL_CURRENT : Float;
	static var FLAG_DEBUG_LOG_RESOLUTION : Float;
	static var FLAG_FROM_BACKGROUND : Float;
	static var FLAG_GRANT_READ_URI_PERMISSION : Float;
	static var FLAG_GRANT_WRITE_URI_PERMISSION : Float;
	static var FLAG_INSISTENT : Float;
	static var FLAG_NO_CLEAR : Float;
	static var FLAG_NO_CREATE : Float;
	static var FLAG_ONE_SHOT : Float;
	static var FLAG_ONGOING_EVENT : Float;
	static var FLAG_ONLY_ALERT_ONCE : Float;
	static var FLAG_RECEIVER_REGISTERED_ONLY : Float;
	static var FLAG_SHOW_LIGHTS : Float;
	static var FLAG_UPDATE_CURRENT : Float;
	static var NAVIGATION_MODE_STANDARD : Float;
	static var NAVIGATION_MODE_TABS : Float;
	static var PENDING_INTENT_FOR_ACTIVITY : Float;
	static var PENDING_INTENT_FOR_BROADCAST : Float;
	static var PENDING_INTENT_FOR_SERVICE : Float;
	static var PENDING_INTENT_MAX_VALUE : Float;
	static var R : Ti.Android.R;
	static var RESULT_CANCELED : Float;
	static var RESULT_FIRST_USER : Float;
	static var RESULT_OK : Float;
	static var SCREEN_ORIENTATION_BEHIND : Float;
	static var SCREEN_ORIENTATION_LANDSCAPE : Float;
	static var SCREEN_ORIENTATION_NOSENSOR : Float;
	static var SCREEN_ORIENTATION_PORTRAIT : Float;
	static var SCREEN_ORIENTATION_SENSOR : Float;
	static var SCREEN_ORIENTATION_UNSPECIFIED : Float;
	static var SCREEN_ORIENTATION_USER : Float;
	static var SHOW_AS_ACTION_ALWAYS : Float;
	static var SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW : Float;
	static var SHOW_AS_ACTION_IF_ROOM : Float;
	static var SHOW_AS_ACTION_NEVER : Float;
	static var SHOW_AS_ACTION_WITH_TEXT : Float;
	static var START_NOT_STICKY : Float;
	static var START_REDELIVER_INTENT : Float;
	static var STREAM_ALARM : Float;
	static var STREAM_DEFAULT : Float;
	static var STREAM_MUSIC : Float;
	static var STREAM_NOTIFICATION : Float;
	static var STREAM_RING : Float;
	static var STREAM_SYSTEM : Float;
	static var STREAM_VOICE_CALL : Float;
	static var URI_INTENT_SCHEME : Float;
	static var apiName : String;
	static var bubbleParent : Bool;
	static var currentActivity : Ti.Android.Activity;
	static var currentService : Ti.Android.Service;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function createBroadcastIntent(options:BroadcastIntentOptions):Ti.Android.Intent;
	static function createBroadcastReceiver(?parameters:Dictionary<Ti.Android.BroadcastReceiver>):Ti.Android.BroadcastReceiver;
	static function createIntent(?parameters:Dictionary<Ti.Android.Intent>):Ti.Android.Intent;
	static function createIntentChooser(intent:Ti.Android.Intent, title:String):Ti.Android.Intent;
	static function createNotification(?parameters:Dictionary<Ti.Android.Notification>):Ti.Android.Notification;
	static function createPendingIntent(?parameters:Dictionary<Ti.Android.PendingIntent>):Ti.Android.PendingIntent;
	static function createRemoteViews(?parameters:Dictionary<Ti.Android.RemoteViews>):Ti.Android.RemoteViews;
	static function createService(intent:Ti.Android.Intent):Ti.Android.Service;
	static function createServiceIntent(options:ServiceIntentOptions):Ti.Android.Intent;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getApiName():String;
	static function getBubbleParent():Bool;
	static function getCurrentActivity():Ti.Android.Activity;
	static function getCurrentService():Ti.Android.Service;
	static function isServiceRunning(intent:Ti.Android.Intent):Bool;
	static function registerBroadcastReceiver(broadcastReceiver:Ti.Android.BroadcastReceiver, actions:Array<String>):Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function setBubbleParent(bubbleParent:Bool):Void;
	static function startService(intent:Ti.Android.Intent):Void;
	static function stopService(intent:Ti.Android.Intent):Void;
	static function unregisterBroadcastReceiver(broadcastReceiver:Ti.Android.BroadcastReceiver):Void;
}
