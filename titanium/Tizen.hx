typedef Group = {
	function members(group:Ti.Contacts.Group, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	function sortedMembers(sortBy:Float, group:Ti.Contacts.Group, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
};
extern class TizenTopLevel {
	static var apiName : String;
	static function addEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function applyProperties(props:Dictionary<Dynamic>):Void;
	static function fireEvent(name:String, event:Dictionary<Dynamic>):Void;
	static function getAllPeople(callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function getApiName():String;
	static function getPeopleWithName(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
	static function removeEventListener(name:String, callback:haxe.extern.Rest<Dynamic> -> Dynamic):Void;
}
typedef Group = {
	>Ti.Proxy,
	var name : String;
	var recordId : Float;
	function add(person:Ti.Contacts.Person):Void;
	function getName():String;
	function getRecordId():Float;
	function members():Array<Ti.Contacts.Person>;
	function remove(person:Ti.Contacts.Person):Void;
	function setName(name:String):Void;
	function setRecordId(recordId:Float):Void;
	function sortedMembers(sortBy:Float):Array<Ti.Contacts.Person>;
};
typedef Person = {
	>Ti.Proxy,
	var address : Dictionary<Dynamic>;
	var birthday : String;
	var created : String;
	var date : Dictionary<Dynamic>;
	var department : String;
	var email : Dictionary<Dynamic>;
	var firstName : String;
	var firstPhonetic : String;
	var fullName : String;
	var id : Float;
	var image : Ti.Blob;
	var instantMessage : Dictionary<Dynamic>;
	var jobTitle : String;
	var kind : Float;
	var lastName : String;
	var lastPhonetic : String;
	var middleName : String;
	var middlePhonetic : String;
	var modified : String;
	var nickname : String;
	var note : String;
	var organization : String;
	var phone : Dictionary<Dynamic>;
	var prefix : String;
	var recordId : Float;
	var relatedNames : Dictionary<Dynamic>;
	var suffix : String;
	var url : Dictionary<Dynamic>;
	function getAddress():Dictionary<Dynamic>;
	function getBirthday():String;
	function getCreated():String;
	function getDate():Dictionary<Dynamic>;
	function getDepartment():String;
	function getEmail():Dictionary<Dynamic>;
	function getFirstName():String;
	function getFirstPhonetic():String;
	function getFullName():String;
	function getId():Float;
	function getImage():Ti.Blob;
	function getInstantMessage():Dictionary<Dynamic>;
	function getJobTitle():String;
	function getKind():Float;
	function getLastName():String;
	function getLastPhonetic():String;
	function getMiddleName():String;
	function getMiddlePhonetic():String;
	function getModified():String;
	function getNickname():String;
	function getNote():String;
	function getOrganization():String;
	function getPhone():Dictionary<Dynamic>;
	function getPrefix():String;
	function getRecordId():Float;
	function getRelatedNames():Dictionary<Dynamic>;
	function getSuffix():String;
	function getUrl():Dictionary<Dynamic>;
	function setAddress(address:Dictionary<Dynamic>):Void;
	function setBirthday(birthday:String):Void;
	function setDate(date:Dictionary<Dynamic>):Void;
	function setDepartment(department:String):Void;
	function setEmail(email:Dictionary<Dynamic>):Void;
	function setFirstName(firstName:String):Void;
	function setFirstPhonetic(firstPhonetic:String):Void;
	function setImage(image:Ti.Blob):Void;
	function setInstantMessage(instantMessage:Dictionary<Dynamic>):Void;
	function setJobTitle(jobTitle:String):Void;
	function setKind(kind:Float):Void;
	function setLastName(lastName:String):Void;
	function setLastPhonetic(lastPhonetic:String):Void;
	function setMiddleName(middleName:String):Void;
	function setMiddlePhonetic(middlePhonetic:String):Void;
	function setNickname(nickname:String):Void;
	function setNote(note:String):Void;
	function setOrganization(organization:String):Void;
	function setPhone(phone:Dictionary<Dynamic>):Void;
	function setRecordId(recordId:Float):Void;
	function setRelatedNames(relatedNames:Dictionary<Dynamic>):Void;
	function setUrl(url:Dictionary<Dynamic>):Void;
};
typedef CloudPush = {
	var SERVICE_DISABLED : Float;
	var SERVICE_INVALID : Float;
	var SERVICE_MISSING : Float;
	var SERVICE_VERSION_UPDATE_REQUIRED : Float;
	var SUCCESS : Float;
	var enabled : Bool;
	var focusAppOnPush : Bool;
	var showAppOnTrayClick : Bool;
	var showTrayNotification : Bool;
	var showTrayNotificationsWhenFocused : Bool;
	var singleCallback : Bool;
	function clearStatus():Void;
	function getEnabled():Bool;
	function getFocusAppOnPush():Bool;
	function getShowAppOnTrayClick():Bool;
	function getShowTrayNotification():Bool;
	function getShowTrayNotificationsWhenFocused():Bool;
	function getSingleCallback():Bool;
	function isGooglePlayServicesAvailable():Float;
	function retrieveDeviceToken(config:CloudPushNotificationConfig):Void;
	function setEnabled(enabled:Bool):Void;
	function setFocusAppOnPush(focusAppOnPush:Bool):Void;
	function setShowAppOnTrayClick(showAppOnTrayClick:Bool):Void;
	function setShowTrayNotification(showTrayNotification:Bool):Void;
	function setShowTrayNotificationsWhenFocused(showTrayNotificationsWhenFocused:Bool):Void;
	function setSingleCallback(singleCallback:Bool):Void;
};
