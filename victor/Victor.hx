typedef VictorCoordinates = {
	var x : Float;
	var y : Float;
};
extern class Victor {
	var x : Float;
	var y : Float;
	function new(x:Float, y:Float):Void;
	static function fromArray(arr:Array<Float>):Victor;
	static function fromObject(obj:VictorCoordinates):Victor;
	function clone():Victor;
	function copyX(vector:Victor):Victor;
	function copyY(vector:Victor):Victor;
	function copy(vector:Victor):Victor;
	function toString():String;
	function toArray():Array<Float>;
	function toObject():VictorCoordinates;
	function addX(vector:Victor):Victor;
	function addY(vector:Victor):Victor;
	function add(vector:Victor):Victor;
	function subtractX(vector:Victor):Victor;
	function subtractY(vector:Victor):Victor;
	function subtract(vector:Victor):Victor;
	function multiplyX(vector:Victor):Victor;
	function multiplyY(vector:Victor):Victor;
	function multiply(vector:Victor):Victor;
	function divideX(vector:Victor):Victor;
	function divideY(vector:Victor):Victor;
	function divide(scalar:Victor):Victor;
	function invertX():Victor;
	function invertY():Victor;
	function invert():Victor;
	function mixX(vector:Victor, ammount:Float):Victor;
	function mixY(vector:Victor, ammount:Float):Victor;
	function mix(vector:Victor, ammount:Float):Victor;
	function normalize():Victor;
	function norm():Victor;
	function limit(max:Float, multiplier:Float):Victor;
	function unfloat():Victor;
	function rotate(angle:Float):Victor;
	function rotateDeg(angle:Float):Victor;
	function rotateBy(rotation:Float):Victor;
	function rotateByDeg(rotation:Float):Victor;
	function randomizeX(topLeft:Victor, bottomRight:Victor):Victor;
	function randomizeY(topLeft:Victor, bottomRight:Victor):Victor;
	function randomize(topLeft:Victor, bottomRight:Victor):Victor;
	function randomizeAny(topLeft:Victor, bottomRight:Victor):Victor;
	function dot(vector:Victor):Float;
	function cross(vector:Victor):Float;
	function length():Float;
	function magnitude():Float;
	function lengthSq():Float;
	function distanceX(vector:Victor):Float;
	function absDistanceX(vector:Victor):Float;
	function distanceY(vector:Victor):Float;
	function absDistanceY(vector:Victor):Float;
	function distance(vector:Victor):Float;
	function distanceSq(vector:Victor):Float;
	function horizontalAngle():Float;
	function angle():Float;
	function direction():Float;
	function horizontalAngleDeg():Float;
	function angleDeg():Float;
	function verticalAngle():Float;
	function verticalAngleDeg():Float;
}
