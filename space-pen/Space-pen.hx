typedef JQuery = {
	function view():Dynamic;
	function views():Array<Dynamic>;
};
typedef JQuery = {
	@:overload(function(newValue:Float):JQuery { })
	function scrollBottom():Float;
	function scrollDown():JQuery;
	function scrollUp():JQuery;
	function scrollToTop():JQuery;
	function scrollToBottom():JQuery;
	@:overload(function(newValue:Float):JQuery { })
	function scrollRight():Float;
	function pageUp():JQuery;
	function pageDown():JQuery;
	function isOnDom():Bool;
	function isVisible():Bool;
	function isHidden():Bool;
	function isDisabled():Bool;
	function enable():JQuery;
	function disable():JQuery;
	function insertAt(index:Float, element:Dynamic):JQuery;
	function removeAt(index:Float):JQuery;
	function indexOf(child:Dynamic):Dynamic;
	function containsElement(element:Dynamic):Bool;
	function preempt(eventName:Dynamic, handler:haxe.Constraints.Function):Dynamic;
	function handlers(eventName:Dynamic):Dynamic;
	function hasParent():Bool;
	function hasFocus():Bool;
	function flashError():Float;
	function trueHeight():Dynamic;
	function trueWidth():Dynamic;
	function document(eventName:Dynamic, docString:String):Dynamic;
	function events():Dynamic;
	@:overload(function(eventName:Dynamic, selector:Dynamic, handler:Dynamic):Dynamic { })
	@:overload(function(eventName:Dynamic, selector:Dynamic, options:Dynamic, handler:Dynamic):Dynamic { })
	function command(eventName:Dynamic, handler:Dynamic):Dynamic;
	function iconSize(size:Float):Void;
	function intValue():Float;
};
extern class View {
	static var builderStack : Array<Builder>;
	static function subview(name:Dynamic, view:Dynamic):Void;
	static function text(str:String):Void;
	static function tag(tagName:Dynamic, args:haxe.extern.Rest<Dynamic>):Void;
	static function raw(str:String):Void;
	static function pushBuilder():Void;
	static function popBuilder():Builder;
	@:overload(function(params:Dynamic):Dynamic { })
	static function buildHtml(fn:Void -> Void):Array<String>;
	static function render(fn:Void -> Void):JQuery;
	static function content(args:haxe.extern.Rest<Dynamic>):Void;
	static function a(args:haxe.extern.Rest<Dynamic>):Void;
	static function abbr(args:haxe.extern.Rest<Dynamic>):Void;
	static function address(args:haxe.extern.Rest<Dynamic>):Void;
	static function article(args:haxe.extern.Rest<Dynamic>):Void;
	static function aside(args:haxe.extern.Rest<Dynamic>):Void;
	static function audio(args:haxe.extern.Rest<Dynamic>):Void;
	static function b(args:haxe.extern.Rest<Dynamic>):Void;
	static function bdi(args:haxe.extern.Rest<Dynamic>):Void;
	static function bdo(args:haxe.extern.Rest<Dynamic>):Void;
	static function blockquote(args:haxe.extern.Rest<Dynamic>):Void;
	static function body(args:haxe.extern.Rest<Dynamic>):Void;
	static function button(args:haxe.extern.Rest<Dynamic>):Void;
	static function canvas(args:haxe.extern.Rest<Dynamic>):Void;
	static function caption(args:haxe.extern.Rest<Dynamic>):Void;
	static function cite(args:haxe.extern.Rest<Dynamic>):Void;
	static function code(args:haxe.extern.Rest<Dynamic>):Void;
	static function colgroup(args:haxe.extern.Rest<Dynamic>):Void;
	static function datalist(args:haxe.extern.Rest<Dynamic>):Void;
	static function dd(args:haxe.extern.Rest<Dynamic>):Void;
	static function del(args:haxe.extern.Rest<Dynamic>):Void;
	static function details(args:haxe.extern.Rest<Dynamic>):Void;
	static function dfn(args:haxe.extern.Rest<Dynamic>):Void;
	static function div(args:haxe.extern.Rest<Dynamic>):Void;
	static function dl(args:haxe.extern.Rest<Dynamic>):Void;
	static function dt(args:haxe.extern.Rest<Dynamic>):Void;
	static function em(args:haxe.extern.Rest<Dynamic>):Void;
	static function fieldset(args:haxe.extern.Rest<Dynamic>):Void;
	static function figcaption(args:haxe.extern.Rest<Dynamic>):Void;
	static function figure(args:haxe.extern.Rest<Dynamic>):Void;
	static function footer(args:haxe.extern.Rest<Dynamic>):Void;
	static function form(args:haxe.extern.Rest<Dynamic>):Void;
	static function h1(args:haxe.extern.Rest<Dynamic>):Void;
	static function h2(args:haxe.extern.Rest<Dynamic>):Void;
	static function h3(args:haxe.extern.Rest<Dynamic>):Void;
	static function h4(args:haxe.extern.Rest<Dynamic>):Void;
	static function h5(args:haxe.extern.Rest<Dynamic>):Void;
	static function h6(args:haxe.extern.Rest<Dynamic>):Void;
	static function head(args:haxe.extern.Rest<Dynamic>):Void;
	static function header(args:haxe.extern.Rest<Dynamic>):Void;
	static function hgroup(args:haxe.extern.Rest<Dynamic>):Void;
	static function html(args:haxe.extern.Rest<Dynamic>):Void;
	static function i(args:haxe.extern.Rest<Dynamic>):Void;
	static function iframe(args:haxe.extern.Rest<Dynamic>):Void;
	static function ins(args:haxe.extern.Rest<Dynamic>):Void;
	static function kbd(args:haxe.extern.Rest<Dynamic>):Void;
	static function label(args:haxe.extern.Rest<Dynamic>):Void;
	static function legend(args:haxe.extern.Rest<Dynamic>):Void;
	static function li(args:haxe.extern.Rest<Dynamic>):Void;
	static function map(args:haxe.extern.Rest<Dynamic>):Void;
	static function mark(args:haxe.extern.Rest<Dynamic>):Void;
	static function menu(args:haxe.extern.Rest<Dynamic>):Void;
	static function meter(args:haxe.extern.Rest<Dynamic>):Void;
	static function nav(args:haxe.extern.Rest<Dynamic>):Void;
	static function noscript(args:haxe.extern.Rest<Dynamic>):Void;
	static function object(args:haxe.extern.Rest<Dynamic>):Void;
	static function ol(args:haxe.extern.Rest<Dynamic>):Void;
	static function optgroup(args:haxe.extern.Rest<Dynamic>):Void;
	static function option(args:haxe.extern.Rest<Dynamic>):Void;
	static function output(args:haxe.extern.Rest<Dynamic>):Void;
	static function p(args:haxe.extern.Rest<Dynamic>):Void;
	static function pre(args:haxe.extern.Rest<Dynamic>):Void;
	static function progress(args:haxe.extern.Rest<Dynamic>):Void;
	static function q(args:haxe.extern.Rest<Dynamic>):Void;
	static function rp(args:haxe.extern.Rest<Dynamic>):Void;
	static function rt(args:haxe.extern.Rest<Dynamic>):Void;
	static function ruby(args:haxe.extern.Rest<Dynamic>):Void;
	static function s(args:haxe.extern.Rest<Dynamic>):Void;
	static function samp(args:haxe.extern.Rest<Dynamic>):Void;
	static function script(args:haxe.extern.Rest<Dynamic>):Void;
	static function section(args:haxe.extern.Rest<Dynamic>):Void;
	static function select(args:haxe.extern.Rest<Dynamic>):Void;
	static function small(args:haxe.extern.Rest<Dynamic>):Void;
	static function span(args:haxe.extern.Rest<Dynamic>):Void;
	static function strong(args:haxe.extern.Rest<Dynamic>):Void;
	static function style(args:haxe.extern.Rest<Dynamic>):Void;
	static function sub(args:haxe.extern.Rest<Dynamic>):Void;
	static function summary(args:haxe.extern.Rest<Dynamic>):Void;
	static function sup(args:haxe.extern.Rest<Dynamic>):Void;
	static function table(args:haxe.extern.Rest<Dynamic>):Void;
	static function tbody(args:haxe.extern.Rest<Dynamic>):Void;
	static function td(args:haxe.extern.Rest<Dynamic>):Void;
	static function textarea(args:haxe.extern.Rest<Dynamic>):Void;
	static function tfoot(args:haxe.extern.Rest<Dynamic>):Void;
	static function th(args:haxe.extern.Rest<Dynamic>):Void;
	static function thead(args:haxe.extern.Rest<Dynamic>):Void;
	static function time(args:haxe.extern.Rest<Dynamic>):Void;
	static function title(args:haxe.extern.Rest<Dynamic>):Void;
	static function tr(args:haxe.extern.Rest<Dynamic>):Void;
	static function u(args:haxe.extern.Rest<Dynamic>):Void;
	static function ul(args:haxe.extern.Rest<Dynamic>):Void;
	static function video(args:haxe.extern.Rest<Dynamic>):Void;
	static function area(args:haxe.extern.Rest<Dynamic>):Void;
	static function base(args:haxe.extern.Rest<Dynamic>):Void;
	static function br(args:haxe.extern.Rest<Dynamic>):Void;
	static function col(args:haxe.extern.Rest<Dynamic>):Void;
	@:overload(function(commandName:Dynamic, selector:Dynamic, options:Dynamic, handler:Dynamic):Dynamic { })
	static function command(args:haxe.extern.Rest<Dynamic>):Void;
	static function embed(args:haxe.extern.Rest<Dynamic>):Void;
	static function hr(args:haxe.extern.Rest<Dynamic>):Void;
	static function img(args:haxe.extern.Rest<Dynamic>):Void;
	static function input(args:haxe.extern.Rest<Dynamic>):Void;
	static function keygen(args:haxe.extern.Rest<Dynamic>):Void;
	static function link(args:haxe.extern.Rest<Dynamic>):Void;
	static function meta(args:haxe.extern.Rest<Dynamic>):Void;
	static function param(args:haxe.extern.Rest<Dynamic>):Void;
	static function source(args:haxe.extern.Rest<Dynamic>):Void;
	static function track(args:haxe.extern.Rest<Dynamic>):Void;
	static function wbrk(args:haxe.extern.Rest<Dynamic>):Void;
	function initialize(view:View, args:Dynamic):Void;
	function new(args:haxe.extern.Rest<Dynamic>):Void;
	function wireOutlets(view:View):Void;
	function bindEventHandlers(view:View):Void;
	function pushStack(elems:Dynamic):Dynamic;
	function end():Dynamic;
	function preempt(eventName:Dynamic, handler:Dynamic):Dynamic;
}
extern class Builder {
	var document : Array<Dynamic>;
	var postProcessingSteps : Array<Dynamic>;
	function buildHtml():Array<Dynamic>;
	function tag(name:String, args:haxe.extern.Rest<Dynamic>):Void;
	function openTag(name:String, attributes:Dynamic):Void;
	function closeTag(name:String):Void;
	function text(str:String):Void;
	function raw(str:String):Void;
	function subview(outletName:Dynamic, subview:View):Void;
	function extractOptions(args:Dynamic):Dynamic;
}
extern class View {
	static var builderStack : Array<Builder>;
	static function subview(name:Dynamic, view:Dynamic):Void;
	static function text(str:String):Void;
	static function tag(tagName:Dynamic, args:haxe.extern.Rest<Dynamic>):Void;
	static function raw(str:String):Void;
	static function pushBuilder():Void;
	static function popBuilder():Builder;
	@:overload(function(params:Dynamic):Dynamic { })
	static function buildHtml(fn:Void -> Void):Array<String>;
	static function render(fn:Void -> Void):JQuery;
	static function content(args:haxe.extern.Rest<Dynamic>):Void;
	static function a(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function abbr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function address(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function article(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function aside(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function audio(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function b(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function bdi(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function bdo(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function blockquote(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function body(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function button(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function canvas(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function caption(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function cite(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function code(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function colgroup(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function datalist(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function dd(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function del(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function details(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function dfn(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function div(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function dl(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function dt(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function em(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function fieldset(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function figcaption(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function figure(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function footer(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function form(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function h1(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function h2(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function h3(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function h4(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function h5(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function h6(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function head(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function header(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function hgroup(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function html(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function i(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function iframe(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function ins(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function kbd(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function label(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function legend(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function li(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function map(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function mark(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function menu(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function meter(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function nav(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function noscript(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function object(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function ol(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function optgroup(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function option(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function output(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function p(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function pre(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function progress(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function q(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function rp(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function rt(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function ruby(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function s(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function samp(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function script(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function section(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function select(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function small(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function span(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function strong(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function style(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function sub(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function summary(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function sup(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function table(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function tbody(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function td(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function textarea(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function tfoot(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function th(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function thead(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function time(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function title(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function tr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function u(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function ul(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function video(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function area(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function base(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function br(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function col(args:haxe.extern.Rest<Dynamic>):Dynamic;
	@:overload(function(eventName:String, handler:Dynamic):Dynamic { })
	@:overload(function(eventName:String, selector:Dynamic, handler:Dynamic):Dynamic { })
	@:overload(function(eventName:String, selector:Dynamic, options:Dynamic, handler:Dynamic):Dynamic { })
	static function command(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function embed(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function hr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function img(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function input(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function keygen(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function link(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function meta(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function param(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function source(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function track(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static function wbrk(args:haxe.extern.Rest<Dynamic>):Dynamic;
	function initialize(view:View, args:Dynamic):Void;
	function new(args:haxe.extern.Rest<Dynamic>):Void;
	function wireOutlets(view:View):Void;
	function bindEventHandlers(view:View):Void;
	function pushStack(elems:Dynamic):Dynamic;
	function end():Dynamic;
	function preempt(eventName:Dynamic, handler:Dynamic):Dynamic;
}
extern class Builder {
	var document : Array<Dynamic>;
	var postProcessingSteps : Array<Dynamic>;
	function buildHtml():Array<Dynamic>;
	function tag(name:String, args:haxe.extern.Rest<Dynamic>):Void;
	function openTag(name:String, attributes:Dynamic):Void;
	function closeTag(name:String):Void;
	function text(str:String):Void;
	function raw(str:String):Void;
	function subview(outletName:Dynamic, subview:View):Void;
	function extractOptions(args:Dynamic):Dynamic;
}
extern class Space-penTopLevel {
	static var jQuery : JQueryStatic;
	static var $ : JQueryStatic;
	static var $$ : haxe.Constraints.Function -> JQuery;
	static var $$$ : haxe.Constraints.Function -> Dynamic;
}
extern class Space-penTopLevel {
	static var jQuery : JQueryStatic;
	static var $ : JQueryStatic;
	static var $$ : haxe.Constraints.Function -> JQuery;
	static var $$$ : haxe.Constraints.Function -> Dynamic;
}
