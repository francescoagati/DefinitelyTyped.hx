typedef AttributionOptions = {
	@:optional
	var position : String;
	@:optional
	var prefix : String;
};
typedef BoundsStatic = {
	>ClassStatic,
	@:overload(function(points:Array<Point>):Bounds { })
	function new(topLeft:Point, bottomRight:Point):Bounds;
};
typedef Bounds = {
	function extend(point:Point):Void;
	function getCenter():Point;
	@:overload(function(point:Point):Bool { })
	function contains(otherBounds:Bounds):Bool;
	function intersects(otherBounds:Bounds):Bool;
	function isValid():Bool;
	function getSize():Point;
	var min : Point;
	var max : Point;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef CircleStatic = {
	>ClassStatic,
	function new(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
};
typedef Circle = {
	>Path,
	function getLatLng():LatLng;
	function getRadius():Float;
	function setLatLng(latlng:LatLngExpression):Circle;
	function setRadius(radius:Float):Circle;
	function toGeoJSON():Dynamic;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef CircleMarkerStatic = {
	>ClassStatic,
	function new(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
};
typedef CircleMarker = {
	>Circle,
	function setLatLng(latlng:LatLngExpression):CircleMarker;
	function setRadius(radius:Float):CircleMarker;
	function toGeoJSON():Dynamic;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ClassExtendOptions = {
	@:optional
	var options : Dynamic;
	@:optional
	var includes : Dynamic;
	@:optional
	var static : Dynamic;
};
typedef ClassStatic = {
	@:overload(function<Options, NewClass>(options:ClassExtendOptions):{ function new(?options:Options):NewClass; } { })
	function extend(options:ClassExtendOptions):Dynamic;
	function addInitHook(methodName:String, args:haxe.extern.Rest<Dynamic>):Void;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ControlStatic = {
	>ClassStatic,
	function new(?options:ControlOptions):Control;
	var Zoom : Control.ZoomStatic;
	var Attribution : Control.AttributionStatic;
	var Layers : Control.LayersStatic;
	var Scale : Control.ScaleStatic;
};
typedef Control = {
	>IControl,
	function setPosition(position:String):Control;
	function getPosition():String;
	function addTo(map:Map):Control;
	function removeFrom(map:Map):Control;
	function getContainer():HTMLElement;
	function onAdd(map:Map):HTMLElement;
	function onRemove(map:Map):Void;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ControlOptions = {
	@:optional
	var position : String;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef DivIconStatic = {
	>ClassStatic,
	function new(options:DivIconOptions):DivIcon;
};
typedef DivIcon = {
	>Icon,
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef DivIconOptions = {
	@:optional
	var iconSize : Point;
	@:optional
	var iconAnchor : Point;
	@:optional
	var className : String;
	@:optional
	var html : String;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef DomEvent = {
	function addListener(el:HTMLElement, type:String, fn:Event -> Void, ?context:Dynamic):DomEvent;
	function on(el:HTMLElement, type:String, fn:Event -> Void, ?context:Dynamic):DomEvent;
	function removeListener(el:HTMLElement, type:String, fn:Event -> Void, ?context:Dynamic):DomEvent;
	function off(el:HTMLElement, type:String, fn:Event -> Void, ?context:Dynamic):DomEvent;
	function stopPropagation(e:Event):DomEvent;
	function preventDefault(e:Event):DomEvent;
	function stop(e:Event):DomEvent;
	function disableClickPropagation(el:HTMLElement):DomEvent;
	function getMousePosition(e:Event, ?container:HTMLElement):Point;
	function getWheelDelta(e:Event):Float;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef DraggableStatic = {
	>ClassStatic,
	function new(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
};
typedef Draggable = {
	>IEventPowered<Draggable>,
	function enable():Void;
	function disable():Void;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):Draggable { })
	function addEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Draggable;
	function addOneTimeEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Draggable;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):Draggable { })
	function removeEventListener(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):Draggable;
	function hasEventListeners(type:String):Bool;
	function fireEvent(type:String, ?data:Dynamic):Draggable;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):Draggable { })
	function on(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Draggable;
	function once(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Draggable;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):Draggable { })
	function off(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):Draggable;
	function fire(type:String, ?data:Dynamic):Draggable;
	function clearAllEventListeners():Draggable;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef FeatureGroupStatic = {
	>ClassStatic,
	function new<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
};
typedef FeatureGroup<T:(ILayer)> = {
	>LayerGroup<T>,
	>ILayer,
	>IEventPowered<FeatureGroup<T>>,
	function bindPopup(htmlContent:String, ?options:PopupOptions):FeatureGroup<T>;
	function getBounds():LatLngBounds;
	function setStyle(style:PathOptions):FeatureGroup<T>;
	function bringToFront():FeatureGroup<T>;
	function bringToBack():FeatureGroup<T>;
	function onAdd(map:Map):Void;
	function onRemove(map:Map):Void;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):FeatureGroup<T> { })
	function addEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):FeatureGroup<T>;
	function addOneTimeEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):FeatureGroup<T>;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):FeatureGroup<T> { })
	function removeEventListener(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):FeatureGroup<T>;
	function hasEventListeners(type:String):Bool;
	function fireEvent(type:String, ?data:Dynamic):FeatureGroup<T>;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):FeatureGroup<T> { })
	function on(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):FeatureGroup<T>;
	function once(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):FeatureGroup<T>;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):FeatureGroup<T> { })
	function off(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):FeatureGroup<T>;
	function fire(type:String, ?data:Dynamic):FeatureGroup<T>;
	function clearAllEventListeners():FeatureGroup<T>;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef FitBoundsOptions = {
	>ZoomPanOptions,
	@:optional
	var paddingTopLeft : Point;
	@:optional
	var paddingBottomRight : Point;
	@:optional
	var padding : Point;
	@:optional
	var maxZoom : Float;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef GeoJSONStatic = {
	>ClassStatic,
	function new(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	function geometryToLayer(featureData:GeoJSON, ?pointToLayer:Dynamic -> LatLng -> ILayer):ILayer;
	function coordsToLatLng(coords:Array<Float>, ?reverse:Bool):LatLng;
	function coordsToLatLngs(coords:Array<Dynamic>, ?levelsDeep:Float, ?reverse:Bool):Array<Dynamic>;
};
typedef GeoJSON = {
	>FeatureGroup<ILayer>,
	function addData(data:Dynamic):Bool;
	@:overload(function(style:PathOptions):GeoJSON { })
	function setStyle(style:Dynamic -> Dynamic):GeoJSON;
	function resetStyle(layer:Path):GeoJSON;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef GeoJSONOptions = {
	@:optional
	var pointToLayer : Dynamic -> LatLng -> ILayer;
	@:optional
	var style : Dynamic -> Dynamic;
	@:optional
	var onEachFeature : Dynamic -> ILayer -> Void;
	@:optional
	var filter : Dynamic -> ILayer -> Bool;
	@:optional
	var coordsToLatLng : Array<Dynamic> -> Array<LatLng>;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef IconStatic = {
	>ClassStatic,
	function new(options:IconOptions):Icon;
	var Default : { function new(?options:IconOptions):Icon.Default; var imagePath : String; };
};
typedef Icon = { };
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef IconOptions = {
	@:optional
	var iconUrl : String;
	@:optional
	var iconRetinaUrl : String;
	@:optional
	var iconSize : Point;
	@:optional
	var iconAnchor : Point;
	@:optional
	var shadowUrl : String;
	@:optional
	var shadowRetinaUrl : String;
	@:optional
	var shadowSize : Point;
	@:optional
	var shadowAnchor : Point;
	@:optional
	var popupAnchor : Point;
	@:optional
	var className : String;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef IControl = {
	function onAdd(map:Map):HTMLElement;
	function onRemove(map:Map):Void;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ICRS = {
	var projection : IProjection;
	var transformation : Transformation;
	var code : String;
	function latLngToPoint(latlng:LatLng, zoom:Float):Point;
	function pointToLatLng(point:Point, zoom:Float):LatLng;
	function project(latlng:LatLng):Point;
	function scale(zoom:Float):Float;
	function getSize(zoom:Float):Point;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef IEventPowered<T> = {
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):T { })
	function addEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):T;
	function addOneTimeEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):T;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):T { })
	function removeEventListener(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):T;
	function hasEventListeners(type:String):Bool;
	function fireEvent(type:String, ?data:Dynamic):T;
	function clearAllEventListeners():T;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):T { })
	function on(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):T;
	function once(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):T;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):T { })
	function off(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):T;
	function fire(type:String, ?data:Dynamic):T;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef IHandler = {
	function enable():Void;
	function disable():Void;
	function enabled():Bool;
};
typedef Handler = {
	function initialize(map:Map):Void;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ILayer = {
	function onAdd(map:Map):Void;
	function onRemove(map:Map):Void;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ImageOverlayStatic = {
	>ClassStatic,
	function new(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
};
typedef ImageOverlay = {
	>ILayer,
	function addTo(map:Map):ImageOverlay;
	function setOpacity(opacity:Float):ImageOverlay;
	function setUrl(imageUrl:String):ImageOverlay;
	function bringToFront():ImageOverlay;
	function bringToBack():ImageOverlay;
	function onAdd(map:Map):Void;
	function onRemove(map:Map):Void;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ImageOverlayOptions = {
	@:optional
	var opacity : Float;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef IProjection = {
	function project(latlng:LatLng):Point;
	function unproject(point:Point):LatLng;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LatLngStatic = {
	>ClassStatic,
	@:overload(function(coords:LatLngExpression):LatLng { })
	function new(latitude:Float, longitude:Float):LatLng;
	var DEG_TO_RAD : Float;
	var RAD_TO_DEG : Float;
	var MAX_MARGIN : Float;
};
typedef LatLng = {
	function distanceTo(otherLatlng:LatLngExpression):Float;
	function equals(otherLatlng:LatLngExpression):Bool;
	function toString():String;
	function wrap(left:Float, right:Float):LatLng;
	var lat : Float;
	var lng : Float;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LatLngBoundsStatic = {
	>ClassStatic,
	@:overload(function(latlngs:LatLngBoundsExpression):LatLngBounds { })
	function new(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
};
typedef LatLngBounds = {
	@:overload(function(latlng:LatLngBoundsExpression):LatLngBounds { })
	function extend(latlng:LatLngExpression):LatLngBounds;
	function getSouthWest():LatLng;
	function getNorthEast():LatLng;
	function getNorthWest():LatLng;
	function getSouthEast():LatLng;
	function getWest():Float;
	function getEast():Float;
	function getNorth():Float;
	function getSouth():Float;
	function getCenter():LatLng;
	@:overload(function(latlng:LatLngExpression):Bool { })
	function contains(otherBounds:LatLngBoundsExpression):Bool;
	function intersects(otherBounds:LatLngBoundsExpression):Bool;
	function equals(otherBounds:LatLngBoundsExpression):Bool;
	function toBBoxString():String;
	function pad(bufferRatio:Float):LatLngBounds;
	function isValid():Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LayerGroupStatic = {
	>ClassStatic,
	function new<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
};
typedef LayerGroup<T:(ILayer)> = {
	>ILayer,
	function addTo(map:Map):LayerGroup<T>;
	function addLayer(layer:T):LayerGroup<T>;
	@:overload(function(id:String):LayerGroup<T> { })
	function removeLayer(layer:T):LayerGroup<T>;
	function hasLayer(layer:T):Bool;
	function getLayer(id:String):T;
	function getLayers():Array<T>;
	function clearLayers():LayerGroup<T>;
	function eachLayer(fn:T -> Void, ?context:Dynamic):LayerGroup<T>;
	function toGeoJSON():Dynamic;
	function onAdd(map:Map):Void;
	function onRemove(map:Map):Void;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LayersOptions = {
	@:optional
	var position : String;
	@:optional
	var collapsed : Bool;
	@:optional
	var autoZIndex : Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletErrorEvent = {
	>LeafletEvent,
	var message : String;
	var code : Float;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletEvent = {
	var type : String;
	var target : Dynamic;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletGeoJSONEvent = {
	>LeafletEvent,
	var layer : ILayer;
	var properties : Dynamic;
	var geometryType : String;
	var id : String;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletLayerEvent = {
	>LeafletEvent,
	var layer : ILayer;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletLocationEvent = {
	>LeafletEvent,
	var latlng : LatLng;
	var bounds : LatLngBounds;
	var accuracy : Float;
	var altitude : Float;
	var altitudeAccuracy : Float;
	var heading : Float;
	var speed : Float;
	var timestamp : Float;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletMouseEvent = {
	>LeafletEvent,
	var latlng : LatLng;
	var layerPoint : Point;
	var containerPoint : Point;
	var originalEvent : MouseEvent;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletPopupEvent = {
	>LeafletEvent,
	var popup : Popup;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletDragEndEvent = {
	>LeafletEvent,
	var distance : Float;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletResizeEvent = {
	>LeafletEvent,
	var oldSize : Point;
	var newSize : Point;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LeafletTileEvent = {
	>LeafletEvent,
	var tile : HTMLElement;
	var url : String;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef LocateOptions = {
	@:optional
	var watch : Bool;
	@:optional
	var setView : Bool;
	@:optional
	var maxZoom : Float;
	@:optional
	var timeout : Float;
	@:optional
	var maximumAge : Float;
	@:optional
	var enableHighAccuracy : Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef MapStatic = {
	>ClassStatic,
	@:overload(function(id:String, ?options:MapOptions):Map { })
	function new(id:HTMLElement, ?options:MapOptions):Map;
};
typedef Map = {
	>IEventPowered<Map>,
	function setView(center:LatLngExpression, ?zoom:Float, ?options:ZoomPanOptions):Map;
	function setZoom(zoom:Float, ?options:ZoomOptions):Map;
	function zoomIn(?delta:Float, ?options:ZoomOptions):Map;
	function zoomOut(?delta:Float, ?options:ZoomOptions):Map;
	function setZoomAround(latlng:LatLngExpression, zoom:Float, ?options:ZoomOptions):Map;
	function fitBounds(bounds:LatLngBounds, ?options:FitBoundsOptions):Map;
	function fitWorld(?options:FitBoundsOptions):Map;
	function panTo(latlng:LatLngExpression, ?options:PanOptions):Map;
	function panInsideBounds(bounds:LatLngBounds):Map;
	function panBy(point:Point, ?options:PanOptions):Map;
	@:overload(function(animate:Bool):Map { })
	function invalidateSize(options:ZoomPanOptions):Map;
	function setMaxBounds(bounds:LatLngBounds, ?options:ZoomPanOptions):Map;
	function locate(?options:LocateOptions):Map;
	function stopLocate():Map;
	function remove():Map;
	function getCenter():LatLng;
	function getZoom():Float;
	function getMinZoom():Float;
	function getMaxZoom():Float;
	function getBounds():LatLngBounds;
	function getBoundsZoom(bounds:LatLngBounds, ?inside:Bool):Float;
	function getSize():Point;
	function getPixelBounds():Bounds;
	function getPixelOrigin():Point;
	function addLayer(layer:ILayer, ?insertAtTheBottom:Bool):Map;
	function removeLayer(layer:ILayer):Map;
	function hasLayer(layer:ILayer):Bool;
	@:overload(function(html:String, latlng:LatLngExpression, ?options:PopupOptions):Map { })
	@:overload(function(el:HTMLElement, latlng:LatLngExpression, ?options:PopupOptions):Map { })
	function openPopup(popup:Popup):Map;
	function closePopup(?popup:Popup):Map;
	function addControl(control:IControl):Map;
	function removeControl(control:IControl):Map;
	function latLngToLayerPoint(latlng:LatLngExpression):Point;
	function layerPointToLatLng(point:Point):LatLng;
	function containerPointToLayerPoint(point:Point):Point;
	function layerPointToContainerPoint(point:Point):Point;
	function latLngToContainerPoint(latlng:LatLngExpression):Point;
	function containerPointToLatLng(point:Point):LatLng;
	function project(latlng:LatLngExpression, ?zoom:Float):Point;
	function unproject(point:Point, ?zoom:Float):LatLng;
	function mouseEventToContainerPoint(event:LeafletMouseEvent):Point;
	function mouseEventToLayerPoint(event:LeafletMouseEvent):Point;
	function mouseEventToLatLng(event:LeafletMouseEvent):LatLng;
	function getContainer():HTMLElement;
	function getPanes():MapPanes;
	function whenReady(fn:Map -> Void, ?context:Dynamic):Map;
	var dragging : IHandler;
	var touchZoom : IHandler;
	var doubleClickZoom : IHandler;
	var scrollWheelZoom : IHandler;
	var boxZoom : IHandler;
	var keyboard : IHandler;
	var tap : IHandler;
	var zoomControl : Control.Zoom;
	var attributionControl : Control.Attribution;
	var options : MapOptions;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):Map { })
	function addEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Map;
	function addOneTimeEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Map;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):Map { })
	function removeEventListener(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):Map;
	function hasEventListeners(type:String):Bool;
	function fireEvent(type:String, ?data:Dynamic):Map;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):Map { })
	function on(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Map;
	function once(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Map;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):Map { })
	function off(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):Map;
	function fire(type:String, ?data:Dynamic):Map;
	function clearAllEventListeners():Map;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef MapOptions = {
	@:optional
	var center : LatLng;
	@:optional
	var zoom : Float;
	@:optional
	var layers : Array<ILayer>;
	@:optional
	var minZoom : Float;
	@:optional
	var maxZoom : Float;
	@:optional
	var maxBounds : LatLngBounds;
	@:optional
	var crs : ICRS;
	@:optional
	var dragging : Bool;
	@:optional
	var touchZoom : Bool;
	@:optional
	var scrollWheelZoom : Bool;
	@:optional
	var doubleClickZoom : Bool;
	@:optional
	var boxZoom : Bool;
	@:optional
	var tap : Bool;
	@:optional
	var tapTolerance : Float;
	@:optional
	var trackResize : Bool;
	@:optional
	var worldCopyJump : Bool;
	@:optional
	var closePopupOnClick : Bool;
	@:optional
	var keyboard : Bool;
	@:optional
	var keyboardPanOffset : Float;
	@:optional
	var keyboardZoomOffset : Float;
	@:optional
	var inertia : Bool;
	@:optional
	var inertiaDeceleration : Float;
	@:optional
	var inertiaMaxSpeed : Float;
	@:optional
	var inertiaThreshold : Float;
	@:optional
	var zoomControl : Bool;
	@:optional
	var attributionControl : Bool;
	@:optional
	var fadeAnimation : Bool;
	@:optional
	var zoomAnimation : Bool;
	@:optional
	var zoomAnimationThreshold : Float;
	@:optional
	var markerZoomAnimation : Bool;
	@:optional
	var bounceAtZoomLimits : Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef MapPanes = {
	var mapPane : HTMLElement;
	var tilePane : HTMLElement;
	var objectsPane : HTMLElement;
	var shadowPane : HTMLElement;
	var overlayPane : HTMLElement;
	var markerPane : HTMLElement;
	var popupPane : HTMLElement;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef Marker = {
	>ILayer,
	>IEventPowered<Marker>,
	function addTo(map:Map):Marker;
	function getLatLng():LatLng;
	function setLatLng(latlng:LatLngExpression):Marker;
	function setIcon(icon:Icon):Marker;
	function setZIndexOffset(offset:Float):Marker;
	function setOpacity(opacity:Float):Marker;
	function update():Marker;
	@:overload(function(el:HTMLElement, ?options:PopupOptions):Marker { })
	@:overload(function(popup:Popup, ?options:PopupOptions):Marker { })
	function bindPopup(html:String, ?options:PopupOptions):Marker;
	function unbindPopup():Marker;
	function openPopup():Marker;
	function getPopup():Popup;
	function closePopup():Marker;
	function togglePopup():Marker;
	@:overload(function(el:HTMLElement, ?options:PopupOptions):Marker { })
	function setPopupContent(html:String, ?options:PopupOptions):Marker;
	function toGeoJSON():Dynamic;
	var dragging : IHandler;
	function onAdd(map:Map):Void;
	function onRemove(map:Map):Void;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):Marker { })
	function addEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Marker;
	function addOneTimeEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Marker;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):Marker { })
	function removeEventListener(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):Marker;
	function hasEventListeners(type:String):Bool;
	function fireEvent(type:String, ?data:Dynamic):Marker;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):Marker { })
	function on(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Marker;
	function once(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Marker;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):Marker { })
	function off(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):Marker;
	function fire(type:String, ?data:Dynamic):Marker;
	function clearAllEventListeners():Marker;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef MarkerOptions = {
	@:optional
	var icon : Icon;
	@:optional
	var clickable : Bool;
	@:optional
	var draggable : Bool;
	@:optional
	var keyboard : Bool;
	@:optional
	var title : String;
	@:optional
	var alt : String;
	@:optional
	var zIndexOffset : Float;
	@:optional
	var opacity : Float;
	@:optional
	var riseOnHover : Bool;
	@:optional
	var riseOffset : Float;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef MultiPolylgonStatic = {
	>ClassStatic,
	function new(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
};
typedef MultiPolygon = {
	>FeatureGroup<Polygon>,
	function setLatLngs(latlngs:Array<Array<LatLng>>):MultiPolygon;
	function getLatLngs():Array<Array<LatLng>>;
	function openPopup():MultiPolygon;
	function toGeoJSON():Dynamic;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef MultiPolylineStatic = {
	>ClassStatic,
	function new(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
};
typedef MultiPolyline = {
	>FeatureGroup<Polyline>,
	function setLatLngs(latlngs:Array<Array<LatLng>>):MultiPolyline;
	function getLatLngs():Array<Array<LatLng>>;
	function openPopup():MultiPolyline;
	function toGeoJSON():Dynamic;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef PanOptions = {
	@:optional
	var animate : Bool;
	@:optional
	var duration : Float;
	@:optional
	var easeLinearity : Float;
	@:optional
	var noMoveStart : Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef Path = {
	>ILayer,
	>IEventPowered<Path>,
	function addTo(map:Map):Path;
	@:overload(function(el:HTMLElement, ?options:PopupOptions):Path { })
	@:overload(function(popup:Popup, ?options:PopupOptions):Path { })
	function bindPopup(html:String, ?options:PopupOptions):Path;
	function unbindPopup():Path;
	function openPopup(?latlng:LatLngExpression):Path;
	function closePopup():Path;
	function setStyle(object:PathOptions):Path;
	function getBounds():LatLngBounds;
	function bringToFront():Path;
	function bringToBack():Path;
	function redraw():Path;
	function onAdd(map:Map):Void;
	function onRemove(map:Map):Void;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):Path { })
	function addEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Path;
	function addOneTimeEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Path;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):Path { })
	function removeEventListener(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):Path;
	function hasEventListeners(type:String):Bool;
	function fireEvent(type:String, ?data:Dynamic):Path;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):Path { })
	function on(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Path;
	function once(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):Path;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):Path { })
	function off(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):Path;
	function fire(type:String, ?data:Dynamic):Path;
	function clearAllEventListeners():Path;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef PathOptions = {
	@:optional
	var stroke : Bool;
	@:optional
	var color : String;
	@:optional
	var weight : Float;
	@:optional
	var opacity : Float;
	@:optional
	var fill : Bool;
	@:optional
	var fillColor : String;
	@:optional
	var fillOpacity : Float;
	@:optional
	var dashArray : String;
	@:optional
	var lineCap : String;
	@:optional
	var lineJoin : String;
	@:optional
	var clickable : Bool;
	@:optional
	var pointerEvents : Bool;
	@:optional
	var className : String;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef PointStatic = {
	>ClassStatic,
	function new(x:Float, y:Float, ?round:Bool):Point;
};
typedef Point = {
	function add(otherPoint:Point):Point;
	function subtract(otherPoint:Point):Point;
	function multiplyBy(number:Float):Point;
	function divideBy(number:Float, ?round:Bool):Point;
	function distanceTo(otherPoint:Point):Float;
	function clone():Point;
	function round():Point;
	function equals(otherPoint:Point):Bool;
	function toString():String;
	var x : Float;
	var y : Float;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef PolygonStatic = {
	>ClassStatic,
	function new(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
};
typedef Polygon = {
	>Polyline,
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef PolylineStatic = {
	>ClassStatic,
	function new(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
};
typedef Polyline = {
	>Path,
	function addLatLng(latlng:LatLngExpression):Polyline;
	function setLatLngs(latlngs:LatLngBoundsExpression):Polyline;
	function getLatLngs():Array<LatLng>;
	function spliceLatLngs(index:Float, pointsToRemove:Float, latlngs:haxe.extern.Rest<LatLng>):Array<LatLng>;
	function getBounds():LatLngBounds;
	function toGeoJSON():Dynamic;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef PolylineOptions = {
	@:optional
	var smoothFactor : Float;
	@:optional
	var noClip : Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef PopupStatic = {
	>ClassStatic,
	function new(?options:PopupOptions, ?source:Dynamic):Popup;
};
typedef Popup = {
	>ILayer,
	function addTo(map:Map):Popup;
	function openOn(map:Map):Popup;
	function setLatLng(latlng:LatLngExpression):Popup;
	function getLatLng():LatLng;
	@:overload(function(el:HTMLElement):Popup { })
	function setContent(html:String):Popup;
	function getContent():HTMLElement;
	function onAdd(map:Map):Void;
	function onRemove(map:Map):Void;
	function update():Popup;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef PopupOptions = {
	@:optional
	var maxWidth : Float;
	@:optional
	var minWidth : Float;
	@:optional
	var maxHeight : Float;
	@:optional
	var autoPan : Bool;
	@:optional
	var closeButton : Bool;
	@:optional
	var offset : Point;
	@:optional
	var autoPanPaddingTopLeft : Point;
	@:optional
	var autoPanPaddingBottomRight : Point;
	@:optional
	var autoPanPadding : Point;
	@:optional
	var zoomAnimation : Bool;
	@:optional
	var closeOnClick : Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef PosAnimationStatic = {
	>ClassStatic,
	function new():PosAnimation;
};
typedef PosAnimation = {
	>IEventPowered<PosAnimation>,
	function run(element:HTMLElement, newPos:Point, ?duration:Float, ?easeLinearity:Float):PosAnimation;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):PosAnimation { })
	function addEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):PosAnimation;
	function addOneTimeEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):PosAnimation;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):PosAnimation { })
	function removeEventListener(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):PosAnimation;
	function hasEventListeners(type:String):Bool;
	function fireEvent(type:String, ?data:Dynamic):PosAnimation;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):PosAnimation { })
	function on(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):PosAnimation;
	function once(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):PosAnimation;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):PosAnimation { })
	function off(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):PosAnimation;
	function fire(type:String, ?data:Dynamic):PosAnimation;
	function clearAllEventListeners():PosAnimation;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef RectangleStatic = {
	>ClassStatic,
	function new(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
};
typedef Rectangle = {
	>Polygon,
	function setBounds(bounds:LatLngBounds):Rectangle;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ScaleOptions = {
	@:optional
	var position : String;
	@:optional
	var maxWidth : Float;
	@:optional
	var metric : Bool;
	@:optional
	var imperial : Bool;
	@:optional
	var updateWhenIdle : Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef TileLayerStatic = {
	>ClassStatic,
	function new(urlTemplate:String, ?options:TileLayerOptions):TileLayer;
	var WMS : { function new(baseUrl:String, options:WMSOptions):TileLayer.WMS; };
	var Canvas : { function new(?options:TileLayerOptions):TileLayer.Canvas; };
};
typedef TileLayer = {
	>ILayer,
	>IEventPowered<TileLayer>,
	function addTo(map:Map):TileLayer;
	function bringToFront():TileLayer;
	function bringToBack():TileLayer;
	function setOpacity(opacity:Float):TileLayer;
	function setZIndex(zIndex:Float):TileLayer;
	function redraw():TileLayer;
	function setUrl(urlTemplate:String):TileLayer;
	function getContainer():HTMLElement;
	function onAdd(map:Map):Void;
	function onRemove(map:Map):Void;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):TileLayer { })
	function addEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):TileLayer;
	function addOneTimeEventListener(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):TileLayer;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):TileLayer { })
	function removeEventListener(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):TileLayer;
	function hasEventListeners(type:String):Bool;
	function fireEvent(type:String, ?data:Dynamic):TileLayer;
	@:overload(function(eventMap:Dynamic, ?context:Dynamic):TileLayer { })
	function on(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):TileLayer;
	function once(type:String, fn:LeafletEvent -> Void, ?context:Dynamic):TileLayer;
	@:overload(function(?eventMap:Dynamic, ?context:Dynamic):TileLayer { })
	function off(type:String, ?fn:LeafletEvent -> Void, ?context:Dynamic):TileLayer;
	function fire(type:String, ?data:Dynamic):TileLayer;
	function clearAllEventListeners():TileLayer;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef TileLayerOptions = {
	@:optional
	var minZoom : Float;
	@:optional
	var maxZoom : Float;
	@:optional
	var maxNativeZoom : Float;
	@:optional
	var tileSize : Float;
	@:optional
	var subdomains : Array<String>;
	@:optional
	var errorTileUrl : String;
	@:optional
	var attribution : String;
	@:optional
	var tms : Bool;
	@:optional
	var continuousWorld : Bool;
	@:optional
	var noWrap : Bool;
	@:optional
	var zoomOffset : Float;
	@:optional
	var zoomReverse : Bool;
	@:optional
	var opacity : Float;
	@:optional
	var zIndex : Float;
	@:optional
	var unloadInvisibleTiles : Bool;
	@:optional
	var updateWhenIdle : Bool;
	@:optional
	var detectRetina : Bool;
	@:optional
	var reuseTiles : Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef TransformationStatic = {
	>ClassStatic,
	function new(a:Float, b:Float, c:Float, d:Float):Transformation;
};
typedef Transformation = {
	function transform(point:Point, ?scale:Float):Point;
	function untransform(point:Point, ?scale:Float):Point;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef WMSOptions = {
	@:optional
	var layers : String;
	@:optional
	var styles : String;
	@:optional
	var format : String;
	@:optional
	var transparent : Bool;
	@:optional
	var version : String;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ZoomOptions = {
	@:optional
	var position : String;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
typedef ZoomPanOptions = {
	@:optional
	var reset : Bool;
	@:optional
	var pan : PanOptions;
	@:optional
	var zoom : ZoomOptions;
	@:optional
	var animate : Bool;
	@:optional
	var debounceMoveend : Bool;
};
extern class LTopLevel {
	static function bounds(topLeft:Point, bottomRight:Point):Bounds;
	static function bounds(points:Array<Point>):Bounds;
	static var Bounds : BoundsStatic;
	static function circle(latlng:LatLngExpression, radius:Float, ?options:PathOptions):Circle;
	static var Circle : CircleStatic;
	static function circleMarker(latlng:LatLngExpression, ?options:PathOptions):CircleMarker;
	static var CircleMarker : CircleMarkerStatic;
	static var Control : ControlStatic;
	static function divIcon(options:DivIconOptions):DivIcon;
	static var DivIcon : DivIconStatic;
	static var DomEvent : DomEvent;
	static function draggable(element:HTMLElement, ?dragHandle:HTMLElement):Draggable;
	static var Draggable : DraggableStatic;
	static function featureGroup<T:(ILayer)>(?layers:Array<T>):FeatureGroup<T>;
	static var FeatureGroup : FeatureGroupStatic;
	static function geoJson(?geojson:Dynamic, ?options:GeoJSONOptions):GeoJSON;
	static var GeoJSON : GeoJSONStatic;
	static function icon(options:IconOptions):Icon;
	static var Icon : IconStatic;
	static function imageOverlay(imageUrl:String, bounds:LatLngBounds, ?options:ImageOverlayOptions):ImageOverlay;
	static var ImageOverlay : ImageOverlayStatic;
	static var version : String;
	static function noConflict():Dynamic;
	static function latLng(latitude:Float, longitude:Float):LatLng;
	static function latLng(coords:LatLngExpression):LatLng;
	static var LatLng : LatLngStatic;
	static function latLngBounds(southWest:LatLngExpression, northEast:LatLngExpression):LatLngBounds;
	static function latLngBounds(latlngs:LatLngBoundsExpression):LatLngBounds;
	static var LatLngBounds : LatLngBoundsStatic;
	static function layerGroup<T:(ILayer)>(?layers:Array<T>):LayerGroup<T>;
	static var LayerGroup : LayerGroupStatic;
	static function map(id:HTMLElement, ?options:MapOptions):Map;
	static function map(id:String, ?options:MapOptions):Map;
	static var Map : MapStatic;
	static function marker(latlng:LatLngExpression, ?options:MarkerOptions):Marker;
	static var Marker : { function new(latlng:LatLngExpression, ?options:MarkerOptions):Marker; };
	static function multiPolygon(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolygon;
	static var MultiPolylgon : MultiPolylgonStatic;
	static function multiPolyline(latlngs:Array<Array<LatLng>>, ?options:PolylineOptions):MultiPolyline;
	static var MultiPolyline : MultiPolylineStatic;
	static function point(x:Float, y:Float, ?round:Bool):Point;
	static var Point : PointStatic;
	static function polygon(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polygon;
	static var Polygon : PolygonStatic;
	static function polyline(latlngs:LatLngBoundsExpression, ?options:PolylineOptions):Polyline;
	static var Polyline : PolylineStatic;
	static function popup(?options:PopupOptions, ?source:Dynamic):Popup;
	static var Popup : PopupStatic;
	static var PosAnimation : PosAnimationStatic;
	static function rectangle(bounds:LatLngBounds, ?options:PathOptions):Rectangle;
	static var Rectangle : RectangleStatic;
	static var TileLayer : TileLayerStatic;
	static var Transformation : TransformationStatic;
	static var L_PREFER_CANVAS : Bool;
	static var L_NO_TOUCH : Bool;
	static var L_DISABLE_3D : Bool;
}
