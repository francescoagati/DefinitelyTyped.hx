extern class _PlotEvents {
	function new():Void;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function destroy():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function plotEvent(o:Dynamic):Void;
	function raiseEvent(o:Dynamic):Void;
	function resetEvents():Void;
}
extern class Areas extends dojox.charting.plot2d.Default {
	function new():Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function buildSegments(i:Dynamic, indexed:Dynamic):Array<Dynamic>;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createPath(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Bars extends dojox.charting.plot2d.CartesianBase {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createRect(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getBarProperties():Dynamic;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function getValue(value:Dynamic, j:Dynamic, seriesIndex:Dynamic, indexed:Dynamic):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Base extends dojox.charting.Element {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var chart : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:dojox.gfx.shape.Surface):Dynamic;
	function clear():Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers():haxe.Constraints.Function;
	function isDataDirty():Dynamic;
	function purgeGroup():Dynamic;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
}
extern class Bubble extends dojox.charting.plot2d.CartesianBase {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Candlesticks extends dojox.charting.plot2d.CartesianBase {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	function collectStats(series:dojox.charting.Series):Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function tooltipFunc(o:Dynamic):String;
	function toPage(coord:Dynamic):Dynamic;
}
extern class CartesianBase extends dojox.charting.plot2d.Base {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, ?noClip:Dynamic):Void;
	function clear():Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(?dim:Dynamic, ?stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function purgeGroup():Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class ClusteredBars extends dojox.charting.plot2d.Bars {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createRect(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getBarProperties():Dynamic;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function getValue(value:Dynamic, j:Dynamic, seriesIndex:Dynamic, indexed:Dynamic):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class ClusteredColumns extends dojox.charting.plot2d.Columns {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createRect(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getBarProperties():Dynamic;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function getValue(value:Dynamic, j:Dynamic, seriesIndex:Dynamic, indexed:Dynamic):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Columns extends dojox.charting.plot2d.CartesianBase {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createRect(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getBarProperties():Dynamic;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function getValue(value:Dynamic, j:Dynamic, seriesIndex:Dynamic, indexed:Dynamic):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Default extends dojox.charting.plot2d.CartesianBase {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function buildSegments(i:Dynamic, indexed:Dynamic):Array<Dynamic>;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createPath(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Grid extends dojox.charting.plot2d.CartesianBase {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:Dynamic):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup():Void;
	function clear():Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createLine(creator:Dynamic, params:Dynamic):Dynamic;
	function createRect(creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function purgeGroup():Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Indicator extends dojox.charting.plot2d.CartesianBase {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:Dynamic):Void;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Void;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Lines extends dojox.charting.plot2d.Default {
	function new():Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function buildSegments(i:Dynamic, indexed:Dynamic):Array<Dynamic>;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createPath(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Markers extends dojox.charting.plot2d.Default {
	function new():Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function buildSegments(i:Dynamic, indexed:Dynamic):Array<Dynamic>;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createPath(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class MarkersOnly extends dojox.charting.plot2d.Default {
	function new():Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function buildSegments(i:Dynamic, indexed:Dynamic):Array<Dynamic>;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createPath(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class OHLC extends dojox.charting.plot2d.CartesianBase {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	function collectStats(series:Array<dojox.charting.Series>):Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Pie extends dojox.charting.plot2d.Base {
	function new(chart:Dynamic, kwArgs:Dynamic):Void;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:Dynamic):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:dojox.gfx.shape.Surface):Dynamic;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Float;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers():haxe.Constraints.Function;
	function isDataDirty():Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Dynamic;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:Dynamic):Dynamic;
}
extern class Scatter extends dojox.charting.plot2d.CartesianBase {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class Spider extends dojox.charting.plot2d.Base {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:dojox.gfx.shape.Surface):Dynamic;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers():haxe.Constraints.Function;
	function isDataDirty():Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Dynamic;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:Dynamic):Dynamic;
	function tooltipFunc(o:Dynamic):Dynamic;
}
extern class Stacked extends dojox.charting.plot2d.Default {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function buildSegments(i:Dynamic, indexed:Dynamic):Array<Dynamic>;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createPath(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class StackedAreas extends dojox.charting.plot2d.Stacked {
	function new():Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function buildSegments(i:Dynamic, indexed:Dynamic):Array<Dynamic>;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createPath(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class StackedBars extends dojox.charting.plot2d.Bars {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createRect(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getBarProperties():Dynamic;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function getValue(value:Dynamic, index:Dynamic, seriesIndex:Dynamic, indexed:Dynamic):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class StackedColumns extends dojox.charting.plot2d.Columns {
	function new(chart:dojox.charting.Chart, ?kwArgs:Dynamic):Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createRect(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getBarProperties():Dynamic;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function getValue(value:Dynamic, index:Dynamic, seriesIndex:Dynamic, indexed:Dynamic):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
extern class StackedLines extends dojox.charting.plot2d.Stacked {
	function new():Void;
	var baseParams : Dynamic;
	var chart : Dynamic;
	var defaultParams : Dynamic;
	var dirty : Bool;
	var group : Dynamic;
	var htmlElement : Array<Dynamic>;
	var htmlElements : Dynamic;
	var optionalParams : Dynamic;
	function addSeries(run:dojox.charting.Series):Dynamic;
	function assignAxes(axes:Array<Dynamic>):Void;
	function buildSegments(i:Dynamic, indexed:Dynamic):Array<Dynamic>;
	function calculateAxes(dim:Dynamic):Dynamic;
	function cleanGroup(creator:Dynamic, noClip:Dynamic):Void;
	function clear():Dynamic;
	@:overload(function(object:Dynamic, method:haxe.Constraints.Function):Dynamic { })
	function connect(object:Dynamic, method:String):Dynamic;
	function createLabel(group:Dynamic, value:Dynamic, bbox:Dynamic, theme:Dynamic):Void;
	function createPath(run:Dynamic, creator:Dynamic, params:Dynamic):Dynamic;
	function destroy():Void;
	function destroyHtmlElements():Void;
	function events():Dynamic;
	function fireEvent(seriesName:String, eventName:String, index:Float, eventObject:Dynamic):Void;
	function getGroup():Dynamic;
	function getRequiredColors():Dynamic;
	function getSeriesStats():Dynamic;
	function getTextWidth(s:Dynamic, font:Dynamic):Float;
	function getTextWithLimitCharCount(s:String, font:String, wcLimit:Float, truncated:Bool):Dynamic;
	function getTextWithLimitLength(s:String, font:String, limitWidth:Float, truncated:Bool):Dynamic;
	function initializeScalers(dim:Dynamic, stats:Dynamic):Dynamic;
	function isDataDirty():Dynamic;
	function isDirty():Dynamic;
	function performZoom(dim:Dynamic, offsets:Dynamic):Dynamic;
	function plotEvent(o:Dynamic):Void;
	function purgeGroup():Void;
	function raiseEvent(o:Dynamic):Void;
	function render(dim:Dynamic, offsets:Dynamic):Dynamic;
	function renderLabel(group:Dynamic, x:Dynamic, y:Dynamic, label:Dynamic, theme:Dynamic, block:Dynamic, align:Dynamic):Dynamic;
	function resetEvents():Void;
	function setAxis(axis:dojox.charting.axis2d.Base):Dynamic;
	function toData(coord:Dynamic):Dynamic;
	function toPage(coord:Dynamic):Dynamic;
}
typedef Common = {
	var defaultStats : Dynamic;
	function augmentColor(target:Dynamic, color:Dynamic):Dynamic;
	function augmentFill(fill:Dynamic, color:Dynamic):Dynamic;
	function augmentStroke(stroke:Dynamic, color:Dynamic):Dynamic;
	function calculateBarSize(availableSize:Float, opt:Dynamic, clusterSize:Float):Dynamic;
	function collectSimpleStats(series:Dynamic):Dynamic;
	function collectStackedStats(series:Dynamic):Dynamic;
	@:overload(function(a:Array<Float>, tension:String):Dynamic { })
	function curve(a:Array<Float>, tension:Float):Dynamic;
	function doIfLoaded(moduleName:Dynamic, ifloaded:Dynamic, ifnotloaded:Dynamic):Dynamic;
	function getLabel(number:Float, fixed:Bool, precision:Float):Dynamic;
	function makeStroke(stroke:Dynamic):Dynamic;
};
