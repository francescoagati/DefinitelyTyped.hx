extern class Cell {
	function new():Void;
	var alwaysEditing : Bool;
	var classes : String;
	var defaultValue : String;
	var draggable : Bool;
	var editable : Bool;
	var formatter : Dynamic;
	var hidden : Bool;
	var KEY_HANDLER : String;
	var keyFilter : js.RegExp;
	var LRE : String;
	var noresize : Bool;
	var PDF : String;
	var RLE : String;
	var styles : String;
	var value : Dynamic;
	function apply(inRowIndex:Float):Void;
	function applyEdit(inValue:Dynamic, inRowIndex:Dynamic):Void;
	function cancel(inRowIndex:Float):Void;
	function cancelEdit(inRowIndex:Dynamic):Void;
	function cancelFormatNode():Void;
	function canResize():Dynamic;
	function dispatchEvent(m:Dynamic, e:Dynamic):Dynamic;
	function doKey(e:Dynamic):Void;
	function focus(inRowIndex:Float, inNode:Dynamic):Void;
	function format(inRowIndex:Float, inItem:Dynamic):Dynamic;
	function formatEditing(inDatum:Dynamic, inRowIndex:Dynamic):String;
	function formatNode(inNode:Dynamic, inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function getEditNode(inRowIndex:Dynamic):Float;
	function getHeaderNode():Dynamic;
	function getNode(inRowIndex:Float):Dynamic;
	function getValue(inRowIndex:Float):Dynamic;
	function isFlex():Dynamic;
	function markupFactory(node:Dynamic, cellDef:Dynamic):Void;
	function needFormatNode(inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function registerOnBlur(inNode:Dynamic, inRowIndex:Dynamic):Void;
	function restore(inRowIndex:Float):Void;
	function save(inRowIndex:Float):Void;
	function setValue(inRowIndex:Float, inValue:Dynamic):Void;
}
extern class AlwaysEdit {
	function new():Void;
	var alwaysEditing : Bool;
	var classes : String;
	var defaultValue : String;
	var draggable : Bool;
	var editable : Bool;
	var formatter : Dynamic;
	var hidden : Bool;
	var keyFilter : js.RegExp;
	var noresize : Bool;
	var styles : String;
	var value : Dynamic;
	function apply(inRowIndex:Float):Void;
	function applyEdit(inValue:Dynamic, inRowIndex:Dynamic):Void;
	function applyStaticValue(inRowIndex:Dynamic):Void;
	function cancel(inRowIndex:Float):Void;
	function cancelEdit(inRowIndex:Dynamic):Void;
	function cancelFormatNode():Void;
	function canResize():Dynamic;
	function dispatchEvent(m:Dynamic, e:Dynamic):Dynamic;
	function doKey(e:Dynamic):Void;
	function focus(inRowIndex:Float, inNode:Dynamic):Void;
	function format(inRowIndex:Float, inItem:Dynamic):Dynamic;
	function formatEditing(inDatum:Dynamic, inRowIndex:Dynamic):String;
	function formatNode(inNode:Dynamic, inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function getEditNode(inRowIndex:Dynamic):Float;
	function getHeaderNode():Dynamic;
	function getNode(inRowIndex:Float):Dynamic;
	function getValue(inRowIndex:Float):Dynamic;
	function isFlex():Dynamic;
	function markupFactory(node:Dynamic, cell:Dynamic):Void;
	function needFormatNode(inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function registerOnBlur(inNode:Dynamic, inRowIndex:Dynamic):Void;
	function restore(inRowIndex:Float):Void;
	function save(inRowIndex:Float):Void;
	function setValue(inRowIndex:Float, inValue:Dynamic):Void;
}
extern class Bool {
	function new():Void;
	var alwaysEditing : Bool;
	var classes : String;
	var defaultValue : String;
	var draggable : Bool;
	var editable : Bool;
	var formatter : Dynamic;
	var hidden : Bool;
	var keyFilter : js.RegExp;
	var noresize : Bool;
	var styles : String;
	var value : Dynamic;
	function apply(inRowIndex:Float):Void;
	function applyEdit(inValue:Dynamic, inRowIndex:Dynamic):Void;
	function applyStaticValue(inRowIndex:Dynamic):Void;
	function cancel(inRowIndex:Float):Void;
	function cancelEdit(inRowIndex:Dynamic):Void;
	function cancelFormatNode():Void;
	function canResize():Dynamic;
	function dispatchEvent(m:Dynamic, e:Dynamic):Dynamic;
	function doclick(e:Dynamic):Void;
	function doKey(e:Dynamic):Void;
	function focus(inRowIndex:Float, inNode:Dynamic):Void;
	function format(inRowIndex:Float, inItem:Dynamic):Dynamic;
	function formatEditing(inDatum:Dynamic, inRowIndex:Dynamic):String;
	function formatNode(inNode:Dynamic, inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function getEditNode(inRowIndex:Dynamic):Float;
	function getHeaderNode():Dynamic;
	function getNode(inRowIndex:Float):Dynamic;
	function getValue(inRowIndex:Float):Dynamic;
	function isFlex():Dynamic;
	function markupFactory(node:Dynamic, cell:Dynamic):Void;
	function needFormatNode(inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function registerOnBlur(inNode:Dynamic, inRowIndex:Dynamic):Void;
	function restore(inRowIndex:Float):Void;
	function save(inRowIndex:Float):Void;
	function setValue(inRowIndex:Float, inValue:Dynamic):Void;
}
extern class RowIndex {
	function new():Void;
	var alwaysEditing : Bool;
	var classes : String;
	var defaultValue : String;
	var draggable : Bool;
	var editable : Bool;
	var formatter : Dynamic;
	var hidden : Bool;
	var keyFilter : js.RegExp;
	var name : String;
	var noresize : Bool;
	var styles : String;
	var value : Dynamic;
	function apply(inRowIndex:Float):Void;
	function applyEdit(inValue:Dynamic, inRowIndex:Dynamic):Void;
	function cancel(inRowIndex:Float):Void;
	function cancelEdit(inRowIndex:Dynamic):Void;
	function cancelFormatNode():Void;
	function canResize():Dynamic;
	function dispatchEvent(m:Dynamic, e:Dynamic):Dynamic;
	function doKey(e:Dynamic):Void;
	function focus(inRowIndex:Float, inNode:Dynamic):Void;
	function format(inRowIndex:Float, inItem:Dynamic):Dynamic;
	function formatEditing(inDatum:Dynamic, inRowIndex:Dynamic):String;
	function formatNode(inNode:Dynamic, inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function get(inRowIndex:Dynamic):Float;
	function getEditNode(inRowIndex:Dynamic):Float;
	function getHeaderNode():Dynamic;
	function getNode(inRowIndex:Float):Dynamic;
	function getValue(inRowIndex:Float):Dynamic;
	function isFlex():Dynamic;
	function markupFactory(node:Dynamic, cellDef:Dynamic):Void;
	function needFormatNode(inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function postscript():Void;
	function registerOnBlur(inNode:Dynamic, inRowIndex:Dynamic):Void;
	function restore(inRowIndex:Float):Void;
	function save(inRowIndex:Float):Void;
	function setValue(inRowIndex:Float, inValue:Dynamic):Void;
}
extern class Select {
	function new(inCell:Dynamic):Void;
	var alwaysEditing : Bool;
	var classes : String;
	var defaultValue : String;
	var draggable : Bool;
	var editable : Bool;
	var formatter : Dynamic;
	var hidden : Bool;
	var keyFilter : js.RegExp;
	var noresize : Bool;
	var options : Array<Dynamic>;
	var returnIndex : Float;
	var styles : String;
	var value : Dynamic;
	var values : Array<Dynamic>;
	function apply(inRowIndex:Float):Void;
	function applyEdit(inValue:Dynamic, inRowIndex:Dynamic):Void;
	function cancel(inRowIndex:Float):Void;
	function cancelEdit(inRowIndex:Dynamic):Void;
	function cancelFormatNode():Void;
	function canResize():Dynamic;
	function dispatchEvent(m:Dynamic, e:Dynamic):Dynamic;
	function doKey(e:Dynamic):Void;
	function focus(inRowIndex:Float, inNode:Dynamic):Void;
	function format(inRowIndex:Float, inItem:Dynamic):Dynamic;
	function formatEditing(inDatum:Dynamic, inRowIndex:Dynamic):Dynamic;
	function formatNode(inNode:Dynamic, inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function getEditNode(inRowIndex:Dynamic):Float;
	function getHeaderNode():Dynamic;
	function getNode(inRowIndex:Float):Dynamic;
	function getValue(inRowIndex:Dynamic):Dynamic;
	function isFlex():Dynamic;
	function markupFactory(node:Dynamic, cell:Dynamic):Void;
	function needFormatNode(inDatum:Dynamic, inRowIndex:Dynamic):Void;
	function registerOnBlur(inNode:Dynamic, inRowIndex:Dynamic):Void;
	function restore(inRowIndex:Float):Void;
	function save(inRowIndex:Float):Void;
	function setValue(inRowIndex:Float, inValue:Dynamic):Void;
}
typedef Dijit = {
	function CheckBox():Void;
	function ComboBox():Void;
	function DateTextBox():Void;
	function Editor():Void;
};
