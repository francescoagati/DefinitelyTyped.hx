extern class ContextMenuTab {
	function new(id:Dynamic, description:Dynamic, type:Dynamic, showOInfo:Dynamic, tabMenu:Dynamic, withDefaultValue:Dynamic):Void;
	function addAction(handler:Dynamic):Void;
	function addChildTaskAction():Void;
	function addItem(id:Dynamic, name:Dynamic, key:Dynamic, required:Dynamic):Void;
	function addProjectAction():Void;
	function addSuccessorTaskAction():Void;
	function addTaskAction():Void;
	function cpProjectAction():Void;
	function cpUpdateAction():Void;
	function decodeDate(dateStr:Dynamic):Dynamic;
	function deleteAction():Void;
	function deleteProjectAction():Void;
	function durationUpdateAction():Void;
	function encodeDate(date:Dynamic):String;
	function hide():Void;
	function insertData(content:Dynamic, name:Dynamic, value:Dynamic):Void;
	function ownerUpdateAction():Void;
	function preValueValidation(items:Dynamic):Bool;
	function ptUpdateAction():Void;
	function renameProjectAction():Void;
	function renameTaskAction():Void;
	function show():Void;
}
extern class GanttProjectItem extends dojox.gantt.GanttTaskItem {
	function new(configuration:Dynamic):Void;
	function addChildTask(task:Dynamic):Void;
	function addTask(task:Dynamic):Void;
	function deleteTask(id:Dynamic):Void;
	function getTaskById(id:Dynamic):Dynamic;
	function getTaskByIdInTree(parentTask:Dynamic, id:Dynamic):Dynamic;
	function setProject(project:Dynamic):Void;
}
extern class GanttResourceItem {
	function new(ganttchart:Dynamic):Void;
	function buildOwnerTimeConsume():Dynamic;
	function buildResource():Dynamic;
	function checkWidthTaskNameItem(taskNameItem:Dynamic):Void;
	function clearAll():Void;
	function clearData():Void;
	function clearItems():Void;
	function create():Void;
	function createConnectingLinesPN(parentNode:Dynamic, currentNode:Dynamic):Array<Dynamic>;
	function createDetailedTaskEntry(owner:Dynamic, parentNode:Dynamic, task:Dynamic):Array<Dynamic>;
	function createOwnerEntry(owner:Dynamic):haxe.Constraints.Function;
	function createOwnerItem(owner:Dynamic, posY:Dynamic):Dynamic;
	function createOwnerNameItem(owner:Dynamic, posY:Dynamic):Dynamic;
	function createPanelNamesOwners():Dynamic;
	function createPanelOwners():Dynamic;
	function createTaskItem(task:Dynamic, posY:Dynamic):Dynamic;
	function createTaskNameItem(owner:Dynamic, posY:Dynamic):Dynamic;
	function createTreeImg(ownerNameItem:Dynamic):Dynamic;
	function postAdjustment():Void;
	function reConstruct():Void;
	function refresh():Void;
	function refreshDetailedTaskEntry(owner:Dynamic, item:Dynamic, task:Dynamic):Void;
	function refreshOwnerEntry(owner:Dynamic):Void;
	function refreshOwnerItem(owner:Dynamic):Void;
	function refreshTaskItem(item:Dynamic, task:Dynamic):Void;
	function styleOwnerItem(tItem:Dynamic, owner:Dynamic, displayType:Dynamic, topOffset:Dynamic):Void;
}
extern class GanttProjectControl {
	function new(ganttChart:Dynamic, projectItem:Dynamic):Void;
	function adjustPanelTime():Void;
	function checkWidthProjectNameItem():Void;
	function create():Void;
	function createDescrProject():Dynamic;
	function createProjectItem():Dynamic;
	function createProjectNameItem():Dynamic;
	function deleteChildTask(task:Dynamic):Void;
	function deleteTask(id:Dynamic):Void;
	function getDescStr():String;
	function getDuration():Float;
	function getPercentCompleted():Dynamic;
	function getTaskById(id:Dynamic):Dynamic;
	function hideDescrProject():Void;
	function insertTask(id:Dynamic, name:Dynamic, startTime:Dynamic, duration:Dynamic, percentage:Dynamic, previousTaskId:Dynamic, taskOwner:Dynamic, parentTaskId:Dynamic):Dynamic;
	function postLoadData():Void;
	function refresh():haxe.Constraints.Function;
	function refreshDescrProject(divDesc:Dynamic):Dynamic;
	function refreshProjectItem(projectItem:Dynamic):Dynamic;
	function resizeProjectItem(width:Dynamic):Void;
	function searchTaskInTree(task:Dynamic, id:Dynamic):Dynamic;
	function setName(name:Dynamic):Void;
	function setPercentCompleted(percentage:Dynamic):Bool;
	function shiftChildTasks(task:Dynamic, height:Dynamic):Void;
	function shiftDescrProject():Void;
	function shiftNextParentTask(task:Dynamic, height:Dynamic):Void;
	function shiftNextProject(project:Dynamic, height:Dynamic):Void;
	function shiftProject(height:Dynamic):Void;
	function shiftProjectItem():Void;
	function shiftTask(task:Dynamic, height:Dynamic):Void;
	function showDescrProject():Void;
}
extern class TabMenu {
	function new(chart:Dynamic):Void;
	function addItemMenuPanel(tab:Dynamic):Void;
	function buildContent():Void;
	function clear():Void;
	function createMenuPanel():Void;
	function createTab(id:Dynamic, desc:Dynamic, type:Dynamic, showOInfo:Dynamic, menu:Dynamic, withDefaultValue:Dynamic):Dynamic;
	function createTabPanel():Void;
	function hide():Void;
	function show(elem:Dynamic, object:Dynamic):Void;
}
extern class GanttTaskItem {
	function new(configuration:Dynamic):Void;
	function addChildTask(task:Dynamic):Void;
	function setProject(project:Dynamic):Void;
}
extern class GanttTaskControl {
	function new(taskInfo:Dynamic, project:Dynamic, chart:Dynamic):Void;
	function adjustPanelTime():Void;
	function buildResourceInfo(resourceInfo:Dynamic):Void;
	function checkPos(startTime:Dynamic):Dynamic;
	function checkPosition():Void;
	function checkWidthTaskNameItem():Void;
	function clearPredTask():Void;
	function create():haxe.Constraints.Function;
	function createConnectingLinesDS():Array<Dynamic>;
	function createConnectingLinesPN():Array<Dynamic>;
	function createTaskDescItem():Dynamic;
	function createTaskItem():Dynamic;
	function createTaskNameItem():Dynamic;
	function createTreeImg():Dynamic;
	function endMove():Void;
	function endResizeItem():Void;
	function getDateOnPosition(position:Array<String>):Dynamic;
	function getMaxPosPredChildTaskItem():Dynamic;
	function getMaxPosPredChildTaskItemInTree(task:Dynamic):Float;
	function getMoveInfo():Void;
	function getResizeInfo():Void;
	function getTaskOwner():Dynamic;
	function hideChildTasks(task:Dynamic):Void;
	function hideDescTask():Void;
	function moveChildTaskItems(task:Dynamic, width:Dynamic, moveChild:Dynamic):Void;
	function moveCurrentTaskItem(width:Dynamic, moveChild:Dynamic):Void;
	function moveDescTask():Void;
	function moveItem(event:Dynamic):Void;
	function moveTaskItem(posX:Dynamic):Void;
	function objKeyToStr(obj:Dynamic, delm:Dynamic):String;
	function postLoadData():Void;
	function refresh():haxe.Constraints.Function;
	function refreshConnectingLinesDS(arrLines:Dynamic):Dynamic;
	function refreshTaskDesc(divDesc:Dynamic):Dynamic;
	function refreshTaskItem(itemControl:Dynamic):Dynamic;
	function resizeItem(event:Dynamic):Void;
	function resizeTaskItem(width:Dynamic):Void;
	function setDuration(duration:Dynamic):Bool;
	function setName(name:Dynamic):Void;
	function setPercentCompleted(percentage:Dynamic):Bool;
	function setPreviousTask(previousTaskId:Dynamic):Bool;
	function setStartTime(startTime:Dynamic, shiftChild:Dynamic):Bool;
	function setTaskOwner(owner:Dynamic):Bool;
	function shiftChildTask(task:Dynamic, height:Dynamic):Void;
	function shiftCurrentTasks(task:Dynamic, height:Dynamic):Void;
	function shiftNextTask(task:Dynamic, height:Dynamic):Void;
	function shiftTask(task:Dynamic, height:Dynamic):Void;
	function showChildTasks(task:Dynamic, isOpen:Dynamic):Void;
	function showDescTask():Void;
	function startMove(event:Dynamic):Void;
	function startResize(event:Dynamic):Void;
}
extern class GanttChart {
	function new(configuration:Dynamic, node:Dynamic):Void;
	function addDayInPanelTime(row:Dynamic):Void;
	function addHourInPanelTime(row:Dynamic):Void;
	function addMonthInPanelTime(row:Dynamic, count:Dynamic, month:Dynamic, year:Dynamic):Void;
	function addProject(projectItem:Dynamic):Void;
	function addWeekInPanelTime(row:Dynamic, count:Dynamic, week:Dynamic):Void;
	function addYearInPanelTime(row:Dynamic, count:Dynamic, year:Dynamic):Void;
	function adjustPanelTime():Void;
	function buildChildTasksData(parentTask:Dynamic, childTaskItems:Dynamic):Void;
	function buildUIContent():Void;
	function checkHeighPanelTasks():Void;
	function checkPosition():Void;
	function checkPosParentTask(parentTask:Dynamic, task:Dynamic):Bool;
	function checkPosParentTaskInTree(parentTask:Dynamic):Dynamic;
	function checkPosPreviousTask(predTask:Dynamic, task:Dynamic):Bool;
	function clearAll():Void;
	function clearData():Void;
	function clearEvents():Void;
	function clearItems():Void;
	function correctPosParentTask(parentTask:Dynamic, ctask:Dynamic):Void;
	function correctPosPreviousTask(predTask:Dynamic, ctask:Dynamic, ctaskObj:Dynamic):Void;
	function createChildItemControls(arrChildTasks:Dynamic, project:Dynamic):Void;
	function createPanelNamesTasks():Dynamic;
	function createPanelNamesTasksHeader():Dynamic;
	function createPanelTasks():Dynamic;
	function createPanelTime():Dynamic;
	function createTasks(project:Dynamic):Void;
	function deleteProject(id:Dynamic):Void;
	function getChildTasksData(childTasks:Dynamic):Array<Dynamic>;
	function getCountDays():Dynamic;
	function getJSONData():Dynamic;
	function getLastChildTask(task:Dynamic):Dynamic;
	function getLastCloseParent(task:Dynamic):Dynamic;
	function getPosOnDate(startTime:Dynamic):Float;
	function getProject(id:Dynamic):Dynamic;
	function getProjectItemById(id:Dynamic):Dynamic;
	function getStartDate():Dynamic;
	function getWidthOnDuration(duration:Dynamic):Dynamic;
	function incHeightPanelNames(height:Dynamic):Void;
	function incHeightPanelTasks(height:Dynamic):Void;
	function init():haxe.Constraints.Function;
	function insertProject(id:Dynamic, name:Dynamic, startDate:Dynamic):Dynamic;
	function loadJSONData(filename:Dynamic):Void;
	function loadJSONString(content:Dynamic):Void;
	function openNode(parentTask:Dynamic):Void;
	function openTree(parentTask:Dynamic):Void;
	function postBindEvents():Void;
	function postLoadData():Void;
	function refresh(count:Dynamic, current:Dynamic, multi:Dynamic):Void;
	function refreshController():Void;
	function refreshParams(pixelsPerDay:Dynamic):Void;
	function removeCell(row:Dynamic):Void;
	function saveJSONData(fileName:Dynamic):Void;
	function setPreviousTask(project:Dynamic):Dynamic;
	function setPreviousTaskInTree(parentTask:Dynamic):Dynamic;
	function setStartTimeChild(parentTask:Dynamic):Void;
	function sortChildTasks(parenttask:Dynamic):Dynamic;
	function sortProjStartDate(a:Dynamic, b:Dynamic):Float;
	function sortTasksByStartTime(project:Dynamic):Void;
	function sortTaskStartTime(a:Dynamic, b:Dynamic):Float;
	function switchTeleMicroView(dip:Dynamic):Void;
}
